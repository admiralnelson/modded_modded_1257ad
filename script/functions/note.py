from header import *

#script_game_get_quest_note
	# This script is called from the game engine when the notes of a quest is needed.
	# INPUT: arg1 = quest_no, arg2 = note_index
	# OUTPUT: s0 = note
game_get_quest_note =	(
	"game_get_quest_note",
		[
			##      (store_script_param_1, ":quest_no"),
			##      (store_script_param_2, ":note_index"),
			(set_trigger_result, 0), # set it to 1 if this script is wanted to be used rather than static notes
	])

#script_game_get_info_page_note
	# This script is called from the game engine when the notes of a info_page is needed.
	# INPUT: arg1 = info_page_no, arg2 = note_index
	# OUTPUT: s0 = note
game_get_info_page_note =	(
	"game_get_info_page_note",
		[
			##      (store_script_param_1, ":info_page_no"),
			##      (store_script_param_2, ":note_index"),
			(set_trigger_result, 0), # set it to 1 if this script is wanted to be used rather than static notes
	])

#script_game_get_troop_note
# This script is called from the game engine when the notes of a troop is needed.
# INPUT: arg1 = troop_no, arg2 = note_index
# OUTPUT: s0 = note
game_get_troop_note =	(
	"game_get_troop_note",
		[
			(store_script_param_1, ":troop_no"),
			(store_script_param_2, ":note_index"),
			(set_trigger_result, 0),
			
			(str_store_troop_name, s54, ":troop_no"),
			(try_begin),
				(eq, ":troop_no", "trp_player"),
				(this_or_next|eq, "$player_has_homage", 1),
				(eq, "$players_kingdom", "fac_player_supporters_faction"),
				(assign, ":troop_faction", "$players_kingdom"),
			(else_try),
				(store_troop_faction, ":troop_faction", ":troop_no"),
			(try_end),
			(str_clear, s49),
			
			#Family notes
			(try_begin),
				(this_or_next|is_between, ":troop_no", lords_begin, kingdom_ladies_end),
				(eq, ":troop_no", "trp_player"),
				(neg|is_between, ":troop_no", pretenders_begin, pretenders_end),
				(assign, ":num_relations", 0),
				
				(try_begin),
					(call_script, "script_troop_get_family_relation_to_troop", "trp_player", ":troop_no"),
					(gt, reg0, 0),
					(val_add, ":num_relations", 1),
				(try_end),
				(try_for_range, ":aristocrat", lords_begin, kingdom_ladies_end),
					(call_script, "script_troop_get_family_relation_to_troop", ":aristocrat", ":troop_no"),
					(gt, reg0, 0),
					(val_add, ":num_relations", 1),
				(try_end),
				(try_begin),
					(gt, ":num_relations", 0),
					(try_begin),
						(eq, ":troop_no", "trp_player"),
						(str_store_string, s49, "str__family_"),
					(else_try),
						(troop_get_slot, reg1, ":troop_no", slot_troop_age),
						(str_store_string, s49, "str__age_reg1_family_"),
					(try_end),
					(try_begin),
						(call_script, "script_troop_get_family_relation_to_troop", "trp_player", ":troop_no"),
						(gt, reg0, 0),
						(str_store_troop_name_link, s12, "trp_player"),
						(val_sub, ":num_relations", 1),
						(try_begin),
							(eq, ":num_relations", 0),
							(str_store_string, s49, "str_s49_s12_s11_end"),
						(else_try),
							(str_store_string, s49, "str_s49_s12_s11"),
						(try_end),
					(try_end),
					(try_for_range, ":aristocrat", lords_begin, kingdom_ladies_end),
						(call_script, "script_troop_get_family_relation_to_troop", ":aristocrat", ":troop_no"),
						(gt, reg0, 0),
						(try_begin),
							(neg|is_between, ":aristocrat", kingdom_ladies_begin, kingdom_ladies_end),
							(eq, "$cheat_mode", 1),
							(str_store_troop_name_link, s12, ":aristocrat"),
							(call_script, "script_troop_get_relation_with_troop", ":aristocrat", ":troop_no"),
							(str_store_string, s49, "str_s49_s12_s11_rel_reg0"),
						(else_try),
							(str_store_troop_name_link, s12, ":aristocrat"),
							(val_sub, ":num_relations", 1),
							(try_begin),
								(eq, ":num_relations", 0),
								(str_store_string, s49, "str_s49_s12_s11_end"),
							(else_try),
								(str_store_string, s49, "str_s49_s12_s11"),
							(try_end),
						(try_end),
					(try_end),
				(try_end),
			(try_end),
			
			(try_begin),
				(neq, ":troop_no", "trp_player"),
				(neg|is_between, ":troop_faction", kingdoms_begin, kingdoms_end),
				(neg|is_between, ":troop_no", companions_begin, companions_end),
				(neg|is_between, ":troop_no", pretenders_begin, pretenders_end),
				
				(try_begin),
					(eq, ":note_index", 0),
					(str_store_string, s0, "str_s54_has_left_the_realm"),
					(set_trigger_result, 1),
				(else_try),
					(str_clear, s0),
					(this_or_next|eq, ":note_index", 1),
					(eq, ":note_index", 2),
					(set_trigger_result, 1),
				(try_end),
				
			(else_try),
				(is_between, ":troop_no", companions_begin, companions_end),
				(neg|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
				(eq, ":note_index", 0),
				(set_trigger_result, 1),
				(str_clear, s0),
				(assign, ":companion", ":troop_no"),
				(str_store_troop_name, s4, ":companion"),
				(try_begin),
					(troop_get_slot, ":days_left", ":companion", slot_troop_days_on_mission),
					
					(this_or_next|main_party_has_troop, ":companion"),
					(this_or_next|troop_slot_ge, ":companion", slot_troop_current_mission, 1),
					(eq, "$g_player_minister", ":companion"),
					
					(try_begin),
						(troop_slot_eq, ":companion", slot_troop_current_mission, npc_mission_kingsupport),
						(str_store_string, s8, "str_gathering_support"),
						(try_begin),
							(eq, ":days_left", 1),
							(str_store_string, s5, "str_expected_back_imminently"),
						(else_try),
							(assign, reg3, ":days_left"),
							(str_store_string, s5, "str_expected_back_in_approximately_reg3_days"),
						(try_end),
					(else_try),
						(troop_slot_eq, ":companion", slot_troop_current_mission, npc_mission_gather_intel),
						(troop_get_slot, ":town_with_contacts", ":companion", slot_troop_town_with_contacts),
						(str_store_party_name, s11, ":town_with_contacts"),
						
						(str_store_string, s8, "str_gathering_intelligence"),
						(try_begin),
							(eq, ":days_left", 1),
							(str_store_string, s5, "str_expected_back_imminently"),
						(else_try),
							(assign, reg3, ":days_left"),
							(str_store_string, s5, "str_expected_back_in_approximately_reg3_days"),
						(try_end),
					(else_try),
						
						(troop_slot_ge, ":companion", slot_troop_current_mission, npc_mission_peace_request),
						(neg|troop_slot_ge, ":companion", slot_troop_current_mission, 8),
						
						(troop_get_slot, ":faction", ":companion", slot_troop_mission_object),
						(str_store_faction_name, s9, ":faction"),
						(str_store_string, s8, "str_diplomatic_embassy_to_s9"),
						(try_begin),
							(eq, ":days_left", 1),
							(str_store_string, s5, "str_expected_back_imminently"),
						(else_try),
							(assign, reg3, ":days_left"),
							(str_store_string, s5, "str_expected_back_in_approximately_reg3_days"),
						(try_end),
					(else_try),
						(eq, ":companion", "$g_player_minister"),
						(str_store_string, s8, "str_serving_as_minister"),
						(str_store_party_name, s9, "$g_player_court"),
						(is_between, "$g_player_court", centers_begin, centers_end),
						(str_store_string, s5, "str_in_your_court_at_s9"),
					(else_try),
						(eq, ":companion", "$g_player_minister"),
						(str_store_string, s8, "str_serving_as_minister"),
						(str_store_string, s5, "str_awaiting_the_capture_of_a_fortress_which_can_serve_as_your_court"),
					(else_try),
						(main_party_has_troop, ":companion"),
						(str_store_string, s8, "str_under_arms"),
						(str_store_string, s5, "str_in_your_party"),
					(try_end),
					
					(str_store_string, s0, "str_s4_s8_s5"),
					
				(else_try),
					(str_store_string, s0, "str_whereabouts_unknown"),
				(try_end),
				
				
			(else_try),
				(is_between, ":troop_no", pretenders_begin, pretenders_end),
				(neg|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
				(neq, ":troop_no", "$supported_pretender"),
				
				
				(troop_get_slot, ":orig_faction", ":troop_no", slot_troop_original_faction),
				(try_begin),
					(faction_slot_eq, ":orig_faction", slot_faction_state, sfs_active),
					(faction_slot_eq, ":orig_faction", slot_faction_has_rebellion_chance, 1),
					(try_begin),
						(eq, ":note_index", 0),
						(str_store_faction_name_link, s56, ":orig_faction"),
						(str_store_string, s0, "@{s54} is a claimant to the throne of {s56}.", 0),
						(set_trigger_result, 1),
					(try_end),
				(else_try),
					(try_begin),
						(str_clear, s0),
						(this_or_next|eq, ":note_index", 0),
						(this_or_next|eq, ":note_index", 1),
						(eq, ":note_index", 2),
						(set_trigger_result, 1),
					(try_end),
				(try_end),
				
			(else_try),
				(try_begin),
					(eq, ":note_index", 0),
					(faction_get_slot, ":faction_leader", ":troop_faction", slot_faction_leader),
					(str_store_troop_name_link, s55, ":faction_leader"),
					(str_store_faction_name_link, s56, ":troop_faction"),
					(assign, ":troop_is_player_faction", 0),
					(assign, ":troop_is_faction_leader", 0),
					(try_begin),
						(eq, ":troop_faction", "fac_player_faction"),
						(assign, ":troop_is_player_faction", 1),
					(else_try),
						(eq, ":faction_leader", ":troop_no"),
						(assign, ":troop_is_faction_leader", 1),
					(try_end),
					(assign, ":num_centers", 0),
					(str_store_string, s58, "@nowhere"),
					(try_for_range_backwards, ":cur_center", centers_begin, centers_end),
						(party_slot_eq, ":cur_center", slot_town_lord, ":troop_no"),
						(try_begin),
							(eq, ":num_centers", 0),
							(str_store_party_name_link, s58, ":cur_center"),
						(else_try),
							(eq, ":num_centers", 1),
							(str_store_party_name_link, s57, ":cur_center"),
							(str_store_string, s58, "@{s57} and {s58}"),
						(else_try),
							(str_store_party_name_link, s57, ":cur_center"),
							(str_store_string, s58, "@{!}{s57}, {s58}"),
						(try_end),
						(val_add, ":num_centers", 1),
					(try_end),
					(troop_get_type, reg3, ":troop_no"),
					(troop_get_slot, reg5, ":troop_no", slot_troop_renown),
					(troop_get_slot, reg15, ":troop_no", slot_troop_controversy),
					
					(str_clear, s59),
					(try_begin),
						(call_script, "script_troop_get_player_relation", ":troop_no"),
						(assign, ":relation", reg0),
						(store_add, ":normalized_relation", ":relation", 100),
						(val_add, ":normalized_relation", 5),
						(store_div, ":str_offset", ":normalized_relation", 10),
						(val_clamp, ":str_offset", 0, 20),
						(store_add, ":str_id", "str_relation_mnus_100_ns",  ":str_offset"),
						(neq, ":str_id", "str_relation_plus_0_ns"),
						(str_store_string, s60, "@{reg3?She:He}"),
						(str_store_string, s59, ":str_id"),
						(str_store_string, s59, "@{!}^{s59}"),
					(try_end),
					#lord recruitment changes begin
					#This sends a bunch of political information to s47.
					
					#refresh registers
					(assign, reg9, ":num_centers"),
					(troop_get_type, reg3, ":troop_no"),
					(troop_get_slot, reg5, ":troop_no", slot_troop_renown),
					(assign, reg4, ":troop_is_faction_leader"),
					(assign, reg6, ":troop_is_player_faction"),
					
					(troop_get_slot, reg17, ":troop_no", slot_troop_wealth), #DEBUGS
					(str_store_string, s0, "str_lord_info_string", 0),
					#lord recruitment changes end
					(add_troop_note_tableau_mesh, ":troop_no", "tableau_troop_note_mesh"),
					(set_trigger_result, 1),
				(try_end),
			(try_end),
	])

#script_game_get_center_note
	# This script is called from the game engine when the notes of a center is needed.
	# INPUT: arg1 = center_no, arg2 = note_index
	# OUTPUT: s0 = note
game_get_center_note =	(
	"game_get_center_note",
		[
			(store_script_param_1, ":center_no"),
			(store_script_param_2, ":note_index"),
			
			(set_trigger_result, 0),
			(try_begin),
				(eq, ":note_index", 0),
				(party_get_slot, ":lord_troop", ":center_no", slot_town_lord),
				(try_begin),
					(ge, ":lord_troop", 0),
					(store_troop_faction, ":lord_faction", ":lord_troop"),
					(str_store_troop_name_link, s1, ":lord_troop"),
					(try_begin),
						(eq, ":lord_troop", "trp_player"),
						(gt, "$players_kingdom", 0),
						(str_store_faction_name_link, s2, "$players_kingdom"),
					(else_try),
						(str_store_faction_name_link, s2, ":lord_faction"),
					(try_end),
					(str_store_party_name, s50, ":center_no"),
					(try_begin),
						(party_slot_eq, ":center_no", slot_party_type, spt_town),
						(str_store_string, s51, "@The town of {s50}"),
					(else_try),
						(party_slot_eq, ":center_no", slot_party_type, spt_village),
						(party_get_slot, ":bound_center", ":center_no", slot_village_bound_center),
						(str_store_party_name_link, s52, ":bound_center"),
						(str_store_string, s51, "@The village of {s50} near {s52}"),
					(else_try),
						(str_store_string, s51, "@{!}{s50}"),
					(try_end),
					(str_store_string, s2, "@{s51} belongs to {s1} of {s2}.^"),
				(else_try),
					(str_clear, s2),
				(try_end),
				(try_begin),
					(is_between, ":center_no", villages_begin, villages_end),
				(else_try),
					(assign, ":num_villages", 0),
					(try_for_range_backwards, ":village_no", villages_begin, villages_end),
						(party_slot_eq, ":village_no", slot_village_bound_center, ":center_no"),
						(try_begin),
							(eq, ":num_villages", 0),
							(str_store_party_name_link, s8, ":village_no"),
						(else_try),
							(eq, ":num_villages", 1),
							(str_store_party_name_link, s7, ":village_no"),
							(str_store_string, s8, "@{s7} and {s8}"),
						(else_try),
							(str_store_party_name_link, s7, ":village_no"),
							(str_store_string, s8, "@{!}{s7}, {s8}"),
						(try_end),
						(val_add, ":num_villages", 1),
					(try_end),
					(try_begin),
						(eq, ":num_villages", 0),
						(str_store_string, s2, "@{s2}It has no villages.^"),
					(else_try),
						(store_sub, reg0, ":num_villages", 1),
						(str_store_string, s2, "@{s2}{reg0?Its villages are:Its village is} {s8}.^"),
					(try_end),
				(try_end),
				(call_script, "script_get_prosperity_text_to_s50", ":center_no"),
				(str_store_string, s0, "@{s2}Its prosperity is: {s50}", 0),
				(set_trigger_result, 1),
			(try_end),
	])

#script_game_get_faction_note
	# This script is called from the game engine when the notes of a faction is needed.
	# INPUT: arg1 = faction_no, arg2 = note_index
	# OUTPUT: s0 = note
game_get_faction_note =	(
	"game_get_faction_note",
		[
			(store_script_param_1, ":faction_no"),
			(store_script_param_2, ":note_index"),
			(set_trigger_result, 0),
			
			##      (try_begin),
			##        (eq, 2, 1),
			##        (str_store_faction_name, s14, ":faction_no"),
			##        (assign, reg4, "$temp"),
			##        (display_message, "str_updating_faction_notes_for_s14_temp_=_reg4"),
			##      (try_end),
			
			(try_begin),
				(is_between, ":faction_no", kingdoms_begin, kingdoms_end),
				(faction_slot_eq, ":faction_no", slot_faction_state, sfs_active),
				#conditions end
				(try_begin),
					(eq, ":note_index", 0),
					(faction_get_slot, ":faction_leader", ":faction_no", slot_faction_leader),
					(str_store_faction_name, s5, ":faction_no"),
					(str_store_troop_name_link, s6, ":faction_leader"),
					(assign, ":num_centers", 0),
					(str_store_string, s8, "@nowhere"),
					(try_for_range_backwards, ":cur_center", centers_begin, centers_end),
						(store_faction_of_party, ":center_faction", ":cur_center"),
						(eq, ":center_faction", ":faction_no"),
						(try_begin),
							(eq, ":num_centers", 0),
							(str_store_party_name_link, s8, ":cur_center"),
						(else_try),
							(eq, ":num_centers", 1),
							(str_store_party_name_link, s7, ":cur_center"),
							(str_store_string, s8, "@{s7} and {s8}"),
						(else_try),
							(str_store_party_name_link, s7, ":cur_center"),
							(str_store_string, s8, "@{!}{s7}, {s8}"),
						(try_end),
						(val_add, ":num_centers", 1),
					(try_end),
					(assign, ":num_members", 0),
					(str_store_string, s10, "@noone"),
					(try_for_range_backwards, ":loop_var", "trp_kingdom_heroes_including_player_begin", active_npcs_end),
						(assign, ":cur_troop", ":loop_var"),
						(try_begin),
							(eq, ":loop_var", "trp_kingdom_heroes_including_player_begin"),
							(assign, ":cur_troop", "trp_player"),
							(assign, ":troop_faction", "$players_kingdom"),
						(else_try),
							(store_troop_faction, ":troop_faction", ":cur_troop"),
						(try_end),
						(eq, ":troop_faction", ":faction_no"),
						(neq, ":cur_troop", ":faction_leader"),
						(troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
						(try_begin),
							(eq, ":num_members", 0),
							(str_store_troop_name_link, s10, ":cur_troop"),
						(else_try),
							(eq, ":num_members", 1),
							(str_store_troop_name_link, s9, ":cur_troop"),
							(str_store_string, s10, "@{s9} and {s10}"),
						(else_try),
							(str_store_troop_name_link, s9, ":cur_troop"),
							(str_store_string, s10, "@{!}{s9}, {s10}"),
						(try_end),
						(val_add, ":num_members", 1),
					(try_end),
					
					#wars
					(str_store_string, s12, "@noone"),
					#       (assign, ":num_enemies", 0),
					#       (try_for_range_backwards, ":cur_faction", kingdoms_begin, kingdoms_end),
					#         (faction_slot_eq, ":cur_faction", slot_faction_state, sfs_active),
					#         (store_relation, ":cur_relation", ":cur_faction", ":faction_no"),
					#         (lt, ":cur_relation", 0),
					#         (try_begin),
					#           (eq, ":num_enemies", 0),
					#           (str_store_faction_name_link, s12, ":cur_faction"),
					#         (else_try),
					#           (eq, ":num_enemies", 1),
					#           (str_store_faction_name_link, s11, ":cur_faction"),
					#           (str_store_string, s12, "@the {s11} and the {s12}"),
					#         (else_try),
					#           (str_store_faction_name_link, s11, ":cur_faction"),
					#           (str_store_string, s12, "@the {s11}, the {s12}"),
					#         (try_end),
					#         (val_add, ":num_enemies", 1),
					#       (try_end),
					
					(str_store_string, s21, "str_foreign_relations__"),
					
					#other foreign relations
					(try_for_range, ":cur_faction", kingdoms_begin, kingdoms_end),
						(faction_slot_eq, ":cur_faction", slot_faction_state, sfs_active),
						(neq, ":faction_no", ":cur_faction"),
						(str_store_faction_name_link, s14, ":cur_faction"),
						
						(call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction_no", ":cur_faction"),
						(assign, ":diplomatic_status", reg0),
						(assign, ":duration_of_status", reg1),
						
						(call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":cur_faction", ":faction_no"),
						(assign, ":reverse_diplomatic_status", reg0),
						#			(assign, ":reverse_diplomatic_duration", reg1),
						
						(try_begin),
							(eq, ":diplomatic_status", -2),
							(str_store_string, s21, "str_s21__the_s5_is_at_war_with_the_s14"),
							(store_add, ":slot_war_damage_inflicted", ":cur_faction", slot_faction_war_damage_inflicted_on_factions_begin),
							(val_sub, ":slot_war_damage_inflicted", kingdoms_begin),
							(faction_get_slot, ":war_damage_inflicted", ":faction_no", ":slot_war_damage_inflicted"),
							(store_mul, ":war_damage_inflicted_x_2", ":war_damage_inflicted", 2),
							
							(store_add, ":slot_war_damage_suffered", ":faction_no", slot_faction_war_damage_inflicted_on_factions_begin),
							(val_sub, ":slot_war_damage_suffered", kingdoms_begin),
							(faction_get_slot, ":war_damage_suffered", ":cur_faction", ":slot_war_damage_suffered"),
							(store_mul, ":war_damage_suffered_x_2", ":war_damage_suffered", 2),
							
							
							(assign, ":war_cause", 0),
							(assign, ":attacker", 0),
							(try_for_range, ":log_entry", 0, "$num_log_entries"),
								(troop_get_slot, ":type", "trp_log_array_entry_type", ":log_entry"),
								(is_between, ":type", logent_faction_declares_war_out_of_personal_enmity, logent_war_declaration_types_end),
								(troop_get_slot, ":actor", "trp_log_array_actor", ":log_entry"),
								(troop_get_slot, ":object", "trp_log_array_faction_object", ":log_entry"),
								
								(try_begin),
									(eq, ":actor", ":cur_faction"),
									(eq, ":object", ":faction_no"),
									(assign, ":war_cause", ":type"),
									(assign, ":attacker", ":actor"),
								(else_try),
									(eq, ":actor", ":faction_no"),
									(eq, ":object", ":cur_faction"),
									(assign, ":war_cause", ":type"),
									(assign, ":attacker", ":actor"),
								(try_end),
							(try_end),
							
							#bug fix! backing up s8 to somewhere else
							(str_store_string, s25, s8),
							(try_begin),
								(gt, ":war_cause", 0),
								(str_store_faction_name, s8, ":attacker"),
								(try_begin),
									(eq, ":war_cause", logent_faction_declares_war_out_of_personal_enmity),
									(str_store_string, s21, "str_s21_the_s8_declared_war_out_of_personal_enmity"),
									# rafi
								(else_try),
									(eq, ":war_cause", logent_faction_declares_war_due_to_religious_differences),
									(str_store_string, s21, "str_s21_the_s8_declared_war_due_to_religious_differences"),
									# rafi
								(else_try),
									(eq, ":war_cause", logent_faction_declares_war_to_respond_to_provocation),
									(str_store_string, s21, "str_s21_the_s8_declared_war_in_response_to_border_provocations"),
								(else_try),
									(eq, ":war_cause", logent_faction_declares_war_to_curb_power),
									(str_store_string, s21, "str_s21_the_s8_declared_war_to_curb_the_other_realms_power"),
								(else_try),
									(eq, ":war_cause", logent_faction_declares_war_to_regain_territory),
									(str_store_string, s21, "str_s21_the_s8_declared_war_to_regain_lost_territory"),
								(else_try),
									(eq, ":war_cause", logent_player_faction_declares_war),
									(neq, ":attacker", "fac_player_supporters_faction"),
									(str_store_string, s21, "str_s21_the_s8_declared_war_as_part_of_a_bid_to_conquer_all_calradia"),
								(try_end),
							(try_end),
							#bug fix! restoring the back up to s8
							(str_store_string, s8, s25),
							
							(try_begin),
								(gt, ":war_damage_inflicted", ":war_damage_suffered_x_2"),
								(str_store_string, s21, "str_s21_the_s5_has_had_the_upper_hand_in_the_fighting"),
							(else_try),
								(gt, ":war_damage_suffered", ":war_damage_inflicted_x_2"),
								(str_store_string, s21, "str_s21_the_s5_has_gotten_the_worst_of_the_fighting"),
							(else_try),
								(gt, ":war_damage_inflicted", 100),
								(gt, ":war_damage_inflicted", 100),
								(str_store_string, s21, "str_s21_the_fighting_has_gone_on_for_some_time_and_the_war_may_end_soon_with_a_truce"),
							(else_try),
								(str_store_string, s21, "str_s21_the_fighting_has_begun_relatively_recently_and_the_war_may_continue_for_some_time"),
							(try_end),
							(try_begin),
								(eq, "$cheat_mode", 1),
								(assign, reg4, ":war_damage_inflicted"),
								(assign, reg5, ":war_damage_suffered"),
								(str_store_string, s21, "str_s21_reg4reg5"),
							(try_end),
						(else_try),
							(eq, ":diplomatic_status", 1),
							(str_clear, s18),
							(try_begin),
								(neq, ":reverse_diplomatic_status", 1),
								(str_store_string, s18, "str__however_the_truce_is_no_longer_binding_on_the_s14"),
							(try_end),
							(assign, reg1, ":duration_of_status"),
							(str_store_string, s21, "str_s21__the_s5_is_bound_by_truce_not_to_attack_the_s14s18_the_truce_will_expire_in_reg1_days"),
						(else_try),
							(eq, ":diplomatic_status", -1),
							(str_store_string, s21, "str_s21__the_s5_has_recently_suffered_provocation_by_subjects_of_the_s14_and_there_is_a_risk_of_war"),
						(else_try),
							(eq, ":diplomatic_status", 0),
							(str_store_string, s21, "str_s21__the_s5_has_no_outstanding_issues_with_the_s14"),
						(try_end),
						(try_begin),
							(eq, ":reverse_diplomatic_status", -1),
							(str_store_string, s21, "str_s21_the_s14_was_recently_provoked_by_subjects_of_the_s5_and_there_is_a_risk_of_war_"),
						(try_end),
						(try_begin),
							(eq, "$cheat_mode", 1),
							(call_script, "script_npc_decision_checklist_peace_or_war", ":faction_no", ":cur_faction", -1),
							(str_store_string, s21, "@{!}DEBUG : {s21}.^CHEAT MODE ASSESSMENT: {s14}^"),
						(try_end),
					(try_end),
					# rafi - get religion
					(call_script, "script_raf_religion_to_s11", ":faction_no"),
					##(faction_get_slot, reg10, ":faction_no", slot_faction_pope_relation),
					# end rafi
					(str_store_string, s0, "str_the_s5_is_ruled_by_s6_it_occupies_s8_its_vassals_are_s10_its_religion_is_s11__s21", 0),
					(set_trigger_result, 1),
				(try_end),
			(else_try),
				(is_between, ":faction_no", kingdoms_begin, kingdoms_end),
				(faction_slot_eq, ":faction_no", slot_faction_state, sfs_defeated),
				(try_begin),
					(eq, ":note_index", 0),
					(str_store_faction_name, s5, ":faction_no"),
					(str_store_string, s0, "@{s5} has been defeated!", 0),
					(set_trigger_result, 1),
				(else_try),
					(eq, ":note_index", 1),
					(str_clear, s0),
					(set_trigger_result, 1),
				(try_end),
			(else_try),
				(try_begin),
					(this_or_next|eq, ":note_index", 0),
					(eq, ":note_index", 1),
					(str_clear, s0),
					(set_trigger_result, 1),
				(try_end),
			(try_end),
	])


	 # script_get_relevant_comment_for_log_entry
	 # WARNING: heavily modified by 1257AD
	# Input: arg1 = log_entry_no, 
	# Output: reg0 = comment_id; reg1 = relevance
	# Notes: 50 is the default relevance.
	# A comment with relevance less than 30 will always be skipped.
	# A comment with relevance 75 or more will never be skipped.
	# A comment with relevance 50 has about 50% chance to be skipped.
	# If there is more than one comment that is not skipped, the system will randomize their relevance values, and then choose the highest one.
	# Also note that the relevance of events decreases as time passes. After three months, relevance reduces to 50%, after 6 months, 25%, etc...
get_relevant_comment_for_log_entry = (
		"get_relevant_comment_for_log_entry",
		[(store_script_param, ":log_entry_no", 1),
		 
		 (troop_get_slot, ":entry_type",            "trp_log_array_entry_type",            ":log_entry_no"),
		 (troop_get_slot, ":entry_time",            "trp_log_array_entry_time",            ":log_entry_no"),
		 (troop_get_slot, ":actor",                 "trp_log_array_actor",                 ":log_entry_no"),
		 (troop_get_slot, ":center_object",         "trp_log_array_center_object",         ":log_entry_no"),
		 (troop_get_slot, ":center_object_lord",    "trp_log_array_center_object_lord",    ":log_entry_no"),
		 (troop_get_slot, ":center_object_faction", "trp_log_array_center_object_faction", ":log_entry_no"),
		 (troop_get_slot, ":troop_object",          "trp_log_array_troop_object",          ":log_entry_no"),
		 (troop_get_slot, ":troop_object_faction",  "trp_log_array_troop_object_faction",  ":log_entry_no"),
		 (troop_get_slot, ":faction_object",        "trp_log_array_faction_object",        ":log_entry_no"),

		 (assign, ":relevance", 0),
		 (assign, ":comment", -1), 
		 (assign, ":rejoinder", -1), 
		 (assign, ":suggested_relation_change", 0),

		 (troop_get_slot, ":reputation", "$g_talk_troop", slot_lord_reputation_type),
		 (store_current_hours, ":current_time"),
		 (store_sub, ":entry_hours_elapsed", ":current_time", ":entry_time"),

#Post 0907 changes begin
		 (assign, ":players_kingdom_relation", 0), ##the below is so that lords will not congratulate player on attacking neutrals
	 (try_begin),
				(gt, "$players_kingdom", 0),
		(store_relation, ":players_kingdom_relation", "$players_kingdom", ":troop_object_faction"),
	 (try_end),
	 
		 (try_begin),
			 (eq, "$cheat_mode", -1), #temporarily disabled
			 (try_begin),
				 (assign, reg5, ":log_entry_no"),
				 (assign, reg6, ":entry_type"),
				 (assign, reg8, ":entry_time"),

				 (gt, "$players_kingdom", 0),
				 (try_begin),
						(gt, ":troop_object_faction", 0),
						(assign, reg7, ":players_kingdom_relation"),
						(display_message, "@{!}Event #{reg5}, type {reg6}, time {reg8}: player's kingdom relation to troop object = {reg7}"),
				 (else_try),
						(gt, ":center_object_faction", 0),
						(assign, reg7, ":players_kingdom_relation"),
						(display_message, "@{!}Event #{reg5}, type {reg6}, time {reg8}: player's kingdom relation to center object faction = {reg7}"),
				 (else_try),
						(gt, ":faction_object", 0),
						(assign, reg7, ":players_kingdom_relation"),
						(display_message, "@{!}Event #{reg5}, type {reg6}, time {reg8}: player's kingdom relation to faction object = {reg7}"),
				 (else_try),
						(display_message, "@{!}Event #{reg5}, type {reg6}, time {reg8}. No relevant kingdom relation"),
				 (try_end),
			 (else_try),
				 (display_message, "@{!}Event #{reg5}, type {reg6}, time {reg8}. Player unaffiliated"),
			 (try_end),
		 (try_end),

		 (try_begin),
			 (eq, ":entry_type", logent_game_start),
			 (eq, "$g_talk_troop_met", 0),
			 (is_between, "$g_talk_troop_faction_relation", -5, 5),
			 (is_between, "$g_talk_troop_relation", -5, 5),

			 (assign, ":relevance", 25),
			 (troop_get_slot, ":plyr_renown", "trp_player", slot_troop_renown),
#normal_banner_begin
			 (troop_get_slot, ":banner", "trp_player", slot_troop_banner_scene_prop),
#custom_banner_begin
#       (troop_get_slot, ":banner", "trp_player", slot_troop_custom_banner_flag_type),
			 (store_random_in_range, ":renown_check", 100, 200),
			 (try_begin),
				 (eq, ":reputation", lrep_none),
				 (gt, "$players_kingdom", 0),
				 (assign, ":comment", "str_comment_intro_liege_affiliated"),
				 (try_begin),
		 (faction_slot_eq, "$players_kingdom", slot_faction_leader, "trp_player"),
		 (assign, ":comment", "str_comment_intro_liege_affiliated_to_player"),
	 (try_end),
			 (else_try),
				 (eq, "$character_gender",tf_female),
			
				 (call_script, "script_troop_get_romantic_chemistry_with_troop", "$g_talk_troop", "trp_player"),
	 (assign, ":attraction", reg0),
	 (store_random_in_range, ":random", 0, 2),
	 (this_or_next|eq, ":random", 0),
	 (gt, ":attraction", 10),
			
	 (try_begin),
					 (this_or_next|gt, ":plyr_renown", ":renown_check"), 
		 (eq, "$g_disable_condescending_comments", 1),
					 (assign, ":comment", "str_comment_intro_female_famous_liege"),
					 (val_add, ":comment", ":reputation"),
	 (else_try),
		 (ge, ":attraction", 9),
		 (assign, ":comment", "str_comment_intro_female_admiring_liege"),
		 (val_add, ":comment", ":reputation"),
	 (else_try),	
					 (gt, ":banner", 0), 
		 (assign, ":comment", "str_comment_intro_female_noble_liege"),
		 (val_add, ":comment", ":reputation"),
	 (else_try),
		 (assign, ":comment", "str_comment_intro_female_common_liege"),
		 (val_add, ":comment", ":reputation"),
	 (try_end),		  
					 #Rejoinders for comments

				 (try_begin),
		 (eq, ":comment", "str_comment_intro_female_common_badtempered"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_common_badtempered"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_noble_pitiless"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_noble_pitiless"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_common_pitiless"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_common_pitiless"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_noble_sadistic"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_noble_sadistic"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_common_sadistic"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_common_sadistic"),			
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_common_upstanding"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_common_upstanding"),
	 (else_try),
					 (eq, ":comment", "str_comment_intro_female_noble_upstanding"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_noble_upstanding"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_common_martial"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_common_martial"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_sadistic_admiring"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_sadistic_admiring"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_badtempered_admiring"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_badtempered_admiring"),
	 (else_try),
		 (eq, ":comment", "str_comment_intro_female_pitiless_admiring"),
		 (assign, ":rejoinder", "str_rejoinder_intro_female_pitiless_admiring"),
	 (try_end),
			 (else_try),
			 #Male character or non-gendered comment
				 (try_begin),
					 (gt, ":plyr_renown", ":renown_check"),
					 (assign, ":comment", "str_comment_intro_famous_liege"),
					 (val_add, ":comment", ":reputation"),
				 (else_try),	
					 (gt, ":banner", 0), 
					 (assign, ":comment", "str_comment_intro_noble_liege"),
			 (val_add, ":comment", ":reputation"),			
					 (try_begin),
						 (eq, ":comment", "str_comment_intro_noble_sadistic"),
						 (assign, ":rejoinder", "str_rejoinder_intro_noble_sadistic"),
					 (try_end),			
				 (else_try),
					 (assign, ":comment", "str_comment_intro_common_liege"),
					 (val_add, ":comment", ":reputation"),									
				 (try_end),
			 (try_end),
#Post 0907 changes end

		 (else_try),
			 (eq, ":entry_type", logent_village_raided),
			 (eq, ":actor", "trp_player"),
			 (try_begin),
				 (eq, ":center_object_lord", "$g_talk_troop"),
				 (assign, ":relevance", 200),
				 (assign, ":suggested_relation_change", -1),
				 (assign, ":comment", "str_comment_you_raided_my_village_default"),
				 (try_begin),
						(lt, "$g_talk_troop_faction_relation", -5),
						(this_or_next|eq, ":reputation", lrep_goodnatured),
								(eq, ":reputation", lrep_upstanding),
						(assign, ":comment", "str_comment_you_raided_my_village_enemy_benevolent"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -5),
						(this_or_next|eq, ":reputation", lrep_cunning),
								(eq, ":reputation", lrep_selfrighteous),
						(assign, ":comment", "str_comment_you_raided_my_village_enemy_coldblooded"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_raided_my_village_enemy_spiteful"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -5),
						(assign, ":comment", "str_comment_you_raided_my_village_enemy"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_raided_my_village_unfriendly_spiteful"),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(assign, ":comment", "str_comment_you_raided_my_village_friendly"),
				 (try_end),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_village_extorted),
			 (eq, ":actor", "trp_player"),
			 (try_begin),
				 (eq, ":center_object_lord", "$g_talk_troop"),
				 (assign, ":relevance", 30),
				 (assign, ":suggested_relation_change", -1),
				 (assign, ":comment", "str_comment_you_robbed_my_village_default"),
				 (try_begin),
						(lt, "$g_talk_troop_faction_relation", -5),
						(this_or_next|eq, ":reputation", lrep_cunning),
								(eq, ":reputation", lrep_selfrighteous),
						(assign, ":comment", "str_comment_you_robbed_my_village_enemy_coldblooded"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -5),
						(assign, ":comment", "str_comment_you_robbed_my_village_enemy"),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_robbed_my_village_friendly_spiteful"),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(assign, ":comment", "str_comment_you_robbed_my_village_friendly"),
				 (try_end),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_caravan_accosted),
			 (eq, ":actor", "trp_player"),
			 (eq, ":faction_object", "$g_talk_troop_faction"),
		 (eq, ":center_object", -1),
		 (eq, ":troop_object", -1),
		 

		 
			 (faction_slot_eq, "$g_talk_troop_faction", slot_faction_leader, "$g_talk_troop"),
			 (assign, ":relevance", 30),
			 (assign, ":suggested_relation_change", -1),
			 (assign, ":comment", "str_comment_you_accosted_my_caravan_default"),
			 (try_begin),
						(lt, "$g_talk_troop_faction_relation", -5),
						(assign, ":comment", "str_comment_you_accosted_my_caravan_enemy"),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_helped_peasants),
			 (eq, ":actor", "trp_player"),
			 (try_begin),
				 (eq, ":center_object_lord", "$g_talk_troop"),
				 (assign, ":relevance", 40),
				 (assign, ":suggested_relation_change", 0),
				 (try_begin),
						(this_or_next|eq, ":reputation", lrep_goodnatured),
								(eq, ":reputation", lrep_upstanding),
						(assign, ":comment", "str_comment_you_helped_villagers_benevolent"),
						(assign, ":suggested_relation_change", 1),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_helped_villagers_friendly_cruel"),
						(assign, ":suggested_relation_change", -1),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_helped_villagers_unfriendly_spiteful"),
						(assign, ":suggested_relation_change", -1),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(assign, ":comment", "str_comment_you_helped_villagers_friendly"),
				 (else_try),
						(this_or_next|eq, ":reputation", lrep_selfrighteous),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_helped_villagers_cruel"),
						(assign, ":suggested_relation_change", -1),
				 (else_try),
						 (assign, ":comment", "str_comment_you_helped_villagers_default"),
				 (try_end),
			 (try_end),

###Combat events
		 (else_try),
			 (eq, ":entry_type", logent_castle_captured_by_player),
			 
			 (try_begin),
				 (eq, ":center_object_lord", "$g_talk_troop"),
		 (store_faction_of_party, ":current_center_faction", ":center_object"),
		 (eq, ":current_center_faction", "$players_kingdom"),
		 (neq, "$g_talk_troop_faction", "$players_kingdom"),
		 
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
			(eq, ":reputation", lrep_debauched),
		 
				 (assign, ":comment", "str_comment_you_captured_my_castle_enemy_spiteful"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":center_object_lord", "$g_talk_troop"),
		 (store_faction_of_party, ":current_center_faction", ":center_object"),
		 (eq, ":current_center_faction", "$players_kingdom"),
		 (neq, "$g_talk_troop_faction", "$players_kingdom"),
		 
				 (this_or_next|eq, ":reputation", lrep_martial),
			(eq, ":reputation", lrep_goodnatured),
			
				 (assign, ":comment", "str_comment_you_captured_my_castle_enemy_chivalrous"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":center_object_lord", "$g_talk_troop"),
		 (store_faction_of_party, ":current_center_faction", ":center_object"),
		 (eq, ":current_center_faction", "$players_kingdom"),
		 (neq, "$g_talk_troop_faction", "$players_kingdom"),
		 
				 (assign, ":comment", "str_comment_you_captured_my_castle_enemy"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
				 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_captured_a_castle_allied_spiteful"),
				 (assign, ":relevance", 75),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (gt, "$g_talk_troop_relation", 5),
				 (assign, ":comment", "str_comment_you_captured_a_castle_allied_friendly"),
				 (assign, ":relevance", 75),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
				 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_captured_a_castle_allied_unfriendly_spiteful"),
				 (assign, ":relevance", 75),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (lt, "$g_talk_troop_relation", -5),
				 (assign, ":comment", "str_comment_you_captured_a_castle_allied_unfriendly"),
				 (assign, ":relevance", 75),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (assign, ":comment", "str_comment_you_captured_a_castle_allied"),
				 (assign, ":relevance", 75),
			 (try_end),
			 
		 (else_try),
			 (eq, ":entry_type", logent_player_claims_throne_1),
			 (eq, "$players_kingdom", "$g_talk_troop_faction"),
		 (faction_slot_eq, "$g_talk_troop_faction", slot_faction_leader, "$g_talk_troop"),
			 (assign, ":comment", "str_comment_you_claimed_the_throne_1_player_liege"),
			 (assign, ":relevance", 500),
			 (lt, "$g_talk_troop_relation", -10),
		 
		 (else_try),
			 (eq, ":entry_type", logent_player_claims_throne_2),
			 (eq, "$players_kingdom", "$g_talk_troop_faction"),
		 (faction_slot_eq, "$g_talk_troop_faction", slot_faction_leader, "$g_talk_troop"),
			 (assign, ":comment", "str_comment_you_claimed_the_throne_2_player_liege"),
			 (assign, ":relevance", 500),
			 (lt, "$g_talk_troop_relation", -10),

		 (else_try), #player appointed a commoner
			 (eq, ":entry_type", logent_liege_grants_fief_to_vassal),
		 (eq, ":actor", "trp_player"),
		 (troop_slot_ge, ":troop_object", slot_lord_reputation_type, lrep_roguish),
			 (try_begin),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_you_enfiefed_a_commoner_nasty"),
					 (assign, ":relevance", 100),
			 (assign, ":suggested_relation_change", -3),

			 (else_try),
			 (eq, ":reputation", lrep_upstanding),
					 (assign, ":comment", "str_comment_you_enfiefed_a_commoner_hesitant"),
					 (assign, ":relevance", 100),
			 (assign, ":suggested_relation_change", -2),
			 
			 (else_try),
					 (this_or_next|eq, ":reputation", lrep_selfrighteous),
				 (eq, ":reputation", lrep_martial),
					 (assign, ":comment", "str_comment_you_enfiefed_a_commoner_derisive"),
					 (assign, ":relevance", 100),
			 (assign, ":suggested_relation_change", -4),
			 
			 (try_end),
					 
#Post 0907 changes begin
		 (else_try),
			 (this_or_next|eq, ":entry_type", logent_lord_defeated_by_player),
						(eq, ":entry_type", logent_lord_helped_by_player),
			 (troop_slot_eq, "$g_talk_troop", slot_troop_present_at_event, ":log_entry_no"),
			 (try_begin),
					 (lt, "$g_talk_troop_relation", -5),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_defeated_a_lord_unfriendly_spiteful"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (lt, "$g_talk_troop_relation", -5),
					 (assign, ":comment", "str_comment_we_defeated_a_lord_unfriendly"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (this_or_next|eq, ":reputation", lrep_selfrighteous),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_defeated_a_lord_cruel"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (eq, ":reputation", lrep_quarrelsome),        
					 (assign, ":comment", "str_comment_we_defeated_a_lord_cruel"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (eq, ":reputation", lrep_upstanding),
					 (assign, ":comment", "str_comment_we_defeated_a_lord_upstanding"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (assign, ":comment", "str_comment_we_defeated_a_lord_default"),
					 (assign, ":relevance", 150),
			 (try_end),

		 (else_try),
			 (this_or_next|eq, ":entry_type", logent_castle_captured_by_player),
			 (eq, ":entry_type", logent_player_participated_in_siege),       
		
			 (troop_slot_eq, "$g_talk_troop", slot_troop_present_at_event, ":log_entry_no"),
			 
			 (try_begin),
					 (lt, "$g_talk_troop_relation", -5),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
					 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_fought_in_siege_unfriendly_spiteful"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (lt, "$g_talk_troop_relation", -5),
					 (assign, ":comment", "str_comment_we_fought_in_siege_unfriendly"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (this_or_next|eq, ":reputation", lrep_selfrighteous),
					 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_fought_in_siege_cruel"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (else_try),
					 (eq, ":reputation", lrep_quarrelsome),        
					 (assign, ":comment", "str_comment_we_fought_in_siege_quarrelsome"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (else_try),
					 (eq, ":reputation", lrep_upstanding),
					 (assign, ":comment", "str_comment_we_fought_in_siege_upstanding"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (else_try),
					 (eq, ":reputation", lrep_martial),
					 (assign, ":comment", "str_comment_we_fought_in_siege_default"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 2),
			 (else_try),
					 (faction_slot_eq, "$players_kingdom", slot_faction_leader, "$g_talk_troop"),
					 (assign, ":comment", "str_comment_we_fought_in_siege_default"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),
		(else_try),
					 (assign, ":comment", "str_comment_we_fought_in_siege_default"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),
			 (try_end),
			 
		 (else_try),     
			 (eq, ":entry_type", logent_castle_given_to_lord_by_player),
						
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),         
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
				 (eq, ":reputation", lrep_debauched),         
				 (assign, ":comment", "str_comment_you_give_castle_in_my_control"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),         
				 (this_or_next|eq, ":reputation", lrep_martial),
				 (eq, ":reputation", lrep_goodnatured),         
				 (assign, ":comment", "str_comment_you_give_castle_in_my_control"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_give_castle_in_my_control"),
				 (assign, ":relevance", 200),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_player_participated_in_major_battle),
			 (troop_slot_eq, "$g_talk_troop", slot_troop_present_at_event, ":log_entry_no"),
			 (try_begin),
					 (lt, "$g_talk_troop_relation", -5),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_unfriendly_spiteful"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (lt, "$g_talk_troop_relation", -5),
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_unfriendly"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (this_or_next|eq, ":reputation", lrep_selfrighteous),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_cruel"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (else_try),
					 (eq, ":reputation", lrep_quarrelsome),        
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_cruel"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (else_try),
					 (eq, ":reputation", lrep_upstanding),
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_upstanding"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (else_try),
					 (faction_slot_eq, "$players_kingdom", slot_faction_leader, "$g_talk_troop"),
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_default"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),
			 (else_try),
					 (eq, ":reputation", lrep_martial),
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_default"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 2),
		 (else_try),
					 (assign, ":comment", "str_comment_we_fought_in_major_battle_default"),
					 (assign, ":relevance", 150),
			 (assign, ":suggested_relation_change", 1),		   
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_player_suggestion_succeeded),
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_player_suggestion_succeeded"),
				 (assign, ":relevance", 200),
		 (assign, ":suggested_relation_change", 3),

		 (try_end),
		 (else_try),
			 (eq, ":entry_type", logent_player_suggestion_failed),
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_player_suggestion_failed"),
				 (assign, ":relevance", 200),
		 (assign, ":suggested_relation_change", -5),

		 (try_end),
		 
#Post 0907 changes end

		 (else_try),
			 (eq, ":entry_type", logent_lord_defeated_by_player),
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_goodnatured),
				 (assign, ":comment", "str_comment_you_defeated_me_enemy_chivalrous"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_debauched),
						 (eq, ":reputation", lrep_quarrelsome),
				 (assign, ":comment", "str_comment_you_defeated_me_enemy_spiteful"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_defeated_me_enemy"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_upstanding),
						 (eq, ":reputation", lrep_cunning),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy_pragmatic"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_goodnatured),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy_chivalrous"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy_spiteful"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (faction_slot_eq, "$players_kingdom", slot_faction_leader, "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_liege"),
				 (assign, ":relevance", 150),
		 (assign, ":suggested_relation_change", 1),
		 
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_unfriendly_spiteful"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_spiteful"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_upstanding),
						 (eq, ":reputation", lrep_martial),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_unfriendly_chivalrous"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied"),
				 (assign, ":relevance", 65),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_lord_defeated_by_player),
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_goodnatured),
				 (assign, ":comment", "str_comment_you_defeated_me_enemy_chivalrous"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_debauched),
						 (eq, ":reputation", lrep_quarrelsome),
				 (assign, ":comment", "str_comment_you_defeated_me_enemy_spiteful"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_defeated_me_enemy"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_upstanding),
						 (eq, ":reputation", lrep_cunning),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy_pragmatic"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_goodnatured),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy_chivalrous"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy_spiteful"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
				 (assign, ":comment", "str_comment_you_defeated_my_friend_enemy"),
				 (assign, ":relevance", 85),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (faction_slot_eq, "$players_kingdom", slot_faction_leader, "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_liege"),
				 (assign, ":relevance", 70),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_unfriendly_spiteful"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_spiteful"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_upstanding),
						 (eq, ":reputation", lrep_martial),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied_unfriendly_chivalrous"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (assign, ":comment", "str_comment_you_defeated_a_lord_allied"),
				 (assign, ":relevance", 65),
			 (try_end),

#Post 0907 changes begin
		 (else_try),
			 (eq, ":entry_type", logent_lord_helped_by_player),
			 (neq, ":troop_object", "$g_talk_troop"),
			 (eq, ":troop_object_faction", "$g_talk_troop_faction"),
			 (try_begin),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_upstanding),
						 (eq, ":reputation", lrep_martial),
				 (assign, ":comment", "str_comment_you_helped_my_ally_unfriendly_chivalrous"),
				 (assign, ":relevance", 65),
				 (assign, ":suggested_relation_change", 2),
			 (else_try),
				 (lt, "$g_talk_troop_relation", -5),
				 (assign, ":comment", "str_comment_you_helped_my_ally_unfriendly"),
				 (assign, ":relevance", 0),
			 (else_try),
				 (eq, ":reputation", lrep_none),
				 (assign, ":comment", "str_comment_you_helped_my_ally_liege"),
				 (assign, ":relevance", 65),
				 (assign, ":suggested_relation_change", 3),
			 (else_try),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_helped_my_ally_unfriendly_spiteful"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_helped_my_ally_spiteful"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_upstanding),
				 (assign, ":comment", "str_comment_you_helped_my_ally_chivalrous"),
				 (assign, ":relevance", 65),
				 (assign, ":suggested_relation_change", 2),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_helped_my_ally_default"),
			 (try_end),

#Post 0907 changes begin
		 (else_try),
			 (eq, ":entry_type", logent_player_defeated_by_lord),
			 (troop_slot_eq, "$g_talk_troop", slot_troop_present_at_event, ":log_entry_no"),
			 (try_begin),
					 (lt, "$g_talk_troop_relation", -5),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_were_defeated_unfriendly_spiteful"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (lt, "$g_talk_troop_relation", -5),
					 (assign, ":comment", "str_comment_we_were_defeated_unfriendly"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (this_or_next|eq, ":reputation", lrep_selfrighteous),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_we_were_defeated_cruel"),
					 (assign, ":relevance", 150),
			 (else_try),
					 (assign, ":comment", "str_comment_we_were_defeated_default"),
					 (assign, ":relevance", 150),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_player_defeated_by_lord),
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_I_defeated_you_enemy_spiteful"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (eq, ":reputation", lrep_martial),
				 (assign, ":comment", "str_comment_I_defeated_you_enemy_chivalrous"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_goodnatured),
								(eq, ":reputation", lrep_upstanding),
				 (assign, ":comment", "str_comment_I_defeated_you_enemy_benevolent"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_selfrighteous),
						 (eq, ":reputation", lrep_cunning),
				 (assign, ":comment", "str_comment_I_defeated_you_enemy_coldblooded"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_I_defeated_you_enemy"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_I_defeated_you_enemy"),
				 (assign, ":relevance", 200),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
				 (gt, "$g_talk_troop_relation", 5),
				 (assign, ":comment", "str_comment_you_were_defeated_allied_friendly_spiteful"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_selfrighteous),
								(eq, ":reputation", lrep_debauched),
				 (lt, "$g_talk_troop_relation", -5),
				 (assign, ":comment", "str_comment_you_were_defeated_allied_unfriendly_cruel"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
				 (le, "$g_talk_troop_relation", 5),
				 (assign, ":comment", "str_comment_you_were_defeated_allied_spiteful"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (eq, ":reputation", lrep_selfrighteous),
				 (assign, ":comment", "str_comment_you_were_defeated_allied_pitiless"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (eq, ":reputation", lrep_upstanding),
				 (lt, "$g_talk_troop_relation", -15),
				 (assign, ":comment", "str_comment_you_were_defeated_allied_unfriendly_upstanding"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, "$g_talk_troop_relation", -10),
				 (assign, ":comment", "str_comment_you_were_defeated_allied_unfriendly"),
				 (assign, ":relevance", 65),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (assign, ":comment", "str_comment_you_were_defeated_allied"),
				 (assign, ":relevance", 65),
			 (try_end),
#Post 0907 changes end

#Post 0907 changes begin
		 (else_try),
			 (eq, ":entry_type", logent_player_retreated_from_lord),
			 (troop_slot_eq, "$g_talk_troop", slot_troop_present_at_event, ":log_entry_no"),
			 (try_begin),
					 (lt, "$g_talk_troop_relation", -5),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_you_abandoned_us_unfriendly_spiteful"),
					 (assign, ":relevance", 150),
					 (assign, ":suggested_relation_change", -5),
			 (else_try),
					 (lt, "$g_talk_troop_relation", -5),
					 (eq, ":reputation", lrep_selfrighteous),        
					 (assign, ":comment", "str_comment_you_abandoned_us_unfriendly_pitiless"),
					 (assign, ":relevance", 150),
					 (assign, ":suggested_relation_change", -5),
			 (else_try),
					 (lt, "$g_talk_troop_relation", -5),
					 (this_or_next|eq, ":reputation", lrep_quarrelsome),
							 (eq, ":reputation", lrep_debauched),        
					 (assign, ":comment", "str_comment_you_abandoned_us_spiteful"),
					 (assign, ":suggested_relation_change", -5),
			 (else_try),
					 (eq, ":reputation", lrep_martial),
					 (assign, ":comment", "str_comment_you_abandoned_us_chivalrous"),
					 (assign, ":relevance", 150),
					 (assign, ":suggested_relation_change", -2),
			 (else_try),
					 (this_or_next|eq, ":reputation", lrep_upstanding),
							 (eq, ":reputation", lrep_goodnatured),        
					 (assign, ":comment", "str_comment_you_abandoned_us_benefitofdoubt"),
					 (assign, ":relevance", 150),
					 (assign, ":suggested_relation_change", -1),
			 (else_try),
					 (assign, ":comment", "str_comment_you_abandoned_us_default"),
					 (assign, ":relevance", 150),
					 (assign, ":suggested_relation_change", -2),
			 (try_end),


#Post 0907 changes end

		 (else_try),
			 (this_or_next|eq, ":entry_type", logent_player_retreated_from_lord),
						(eq, ":entry_type", logent_player_retreated_from_lord_cowardly),
			
			 (eq, ":troop_object", "$g_talk_troop"),
			 (try_begin),
				 (eq, "$cheat_mode", 1),
				 (assign, reg7, ":entry_hours_elapsed"),
				 (display_message, "@{!}Elapsed hours: {reg7}"),
			 (try_end),
			 (gt, ":entry_hours_elapsed", 2),
			 (try_begin),
				 (this_or_next|eq, ":reputation", lrep_selfrighteous),
								(eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_ran_from_me_enemy_spiteful"),
				 (assign, ":relevance", 25),
			 (else_try),
				 (eq, ":reputation", lrep_martial),
				 (assign, ":comment", "str_comment_you_ran_from_me_enemy_chivalrous"),
				 (assign, ":relevance", 25),
			 (else_try),
				 (this_or_next|eq, ":reputation", lrep_goodnatured),
								(eq, ":reputation", lrep_upstanding),
				 (assign, ":comment", "str_comment_you_ran_from_me_enemy_benevolent"),
				 (assign, ":relevance", 25),
			 (else_try),
				 (eq, ":reputation", lrep_cunning),
				 (assign, ":comment", "str_comment_you_ran_from_me_enemy_coldblooded"),
				 (assign, ":relevance", 25),
			 (else_try),
				 (assign, ":comment", "str_comment_you_ran_from_me_enemy"),
				 (assign, ":relevance", 25),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_player_retreated_from_lord_cowardly),
			 (try_begin),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (lt, "$g_talk_troop_relation", 5),
				 (eq, ":reputation", lrep_martial),
				 (assign, ":comment", "str_comment_you_ran_from_foe_allied_chivalrous"),
				 (assign, ":relevance", 80),
				 (assign, ":suggested_relation_change", -3),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (eq, ":reputation", lrep_upstanding),
				 (assign, ":comment", "str_comment_you_ran_from_foe_allied_upstanding"),
				 (assign, ":relevance", 80),
				 (assign, ":suggested_relation_change", -1),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (lt, "$g_talk_troop_relation", 5),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_ran_from_foe_allied_spiteful"),
				 (assign, ":relevance", 80),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_lord_defeated_but_let_go_by_player),
			 (try_begin),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_let_me_go_spiteful"),
				 (assign, ":relevance", 300),
				 (assign, ":suggested_relation_change", -15),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (ge, "$g_talk_troop_faction_relation", 0),
				 (assign, ":comment", "str_comment_you_let_me_go_default"),
				 (assign, ":relevance", 300),
				 (assign, ":suggested_relation_change", 2),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (lt, "$g_talk_troop_faction_relation", 0),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_upstanding),
				 (assign, ":suggested_relation_change", 5),
				 (assign, ":relevance", 300),
				 (assign, ":comment", "str_comment_you_let_me_go_enemy_chivalrous"),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (lt, "$g_talk_troop_faction_relation", 0),
				 (this_or_next|eq, ":reputation", lrep_selfrighteous),
						 (eq, ":reputation", lrep_cunning),
				 (assign, ":relevance", 300),
				 (assign, ":comment", "str_comment_you_let_me_go_enemy_coldblooded"),
			 (else_try),
				 (eq, ":troop_object", "$g_talk_troop"),
				 (lt, "$g_talk_troop_faction_relation", 0),
				 (assign, ":relevance", 300),
				 (assign, ":comment", "str_comment_you_let_me_go_enemy"),
				 (assign, ":suggested_relation_change", 1),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_martial),
						 (eq, ":reputation", lrep_goodnatured),
				 (assign, ":comment", "str_comment_you_let_go_a_lord_allied_chivalrous"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (eq, ":reputation", lrep_upstanding),
				 (assign, ":comment", "str_comment_you_let_go_a_lord_allied_upstanding"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (this_or_next|eq, ":reputation", lrep_cunning),
						 (eq, ":reputation", lrep_selfrighteous),
				 (assign, ":comment", "str_comment_you_let_go_a_lord_allied_coldblooded"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (lt, "$g_talk_troop_relation", -5),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
						 (eq, ":reputation", lrep_debauched),
				 (assign, ":comment", "str_comment_you_let_go_a_lord_allied_unfriendly_spiteful"),
				 (assign, ":relevance", 80),
			 (else_try),
				 (eq, "$players_kingdom", "$g_talk_troop_faction"),
				 (lt, ":players_kingdom_relation", 0),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (assign, ":comment", "str_comment_you_let_go_a_lord_allied"),
				 (assign, ":relevance", 80),
			 (try_end),

#Internal faction relations

		 (else_try),
			 (eq, ":entry_type", logent_pledged_allegiance),
			 (eq, ":actor", "trp_player"),
			 (try_begin),
				 (eq, ":faction_object", "$g_talk_troop_faction"),
				 (neq, ":troop_object", "$g_talk_troop"),
		 (eq, ":faction_object", "$players_kingdom"), #Ie, no switch of kingdoms
				 (assign, ":relevance", 200),
				 (try_begin),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_martial),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_martial_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_martial),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_martial"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_quarrelsome),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_quarrelsome_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_quarrelsome),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_quarrelsome"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_selfrighteous),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_selfrighteous_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_selfrighteous),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_selfrighteous"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_cunning),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_cunning_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_cunning),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_cunning"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_debauched_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_debauched"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_goodnatured),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_goodnatured_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_goodnatured),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_goodnatured"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_upstanding),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_upstanding_unfriendly"),
				 (else_try),
						(eq, ":reputation", lrep_upstanding),
						(assign, ":comment", "str_comment_pledged_allegiance_allied_upstanding"),
				 (try_end),
			 (try_end),


		 (else_try),
			 (eq, ":entry_type", logent_liege_grants_fief_to_vassal),
			 (eq, ":troop_object", "trp_player"),
			 (try_begin),
				 (eq, ":faction_object", "$g_talk_troop_faction"),
				 (neq, ":actor", "$g_talk_troop"),
				 (eq, ":faction_object", "$players_kingdom"),
				 (assign, ":relevance", 110),
				 (try_begin),
						(gt, "$g_talk_troop_relation", 5),
						(this_or_next|eq, ":reputation", lrep_selfrighteous),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied_friendly_cruel"),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_cunning),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied_friendly_cynical"),
				 (else_try),
						(gt, "$g_talk_troop_relation", 5),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied_friendly"),
				 (else_try),
						(is_between, "$g_talk_troop_relation", -5, 5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied_spiteful"),
						(assign, ":suggested_relation_change", -2),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(eq, ":reputation", lrep_upstanding),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied_unfriendly_upstanding"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -5),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied_unfriendly_spiteful"),
				 (else_try),
						(assign, ":comment", "str_comment_our_king_granted_you_a_fief_allied"),
				 (try_end),
			 (try_end),

		 (else_try),
			 (eq, ":entry_type", logent_renounced_allegiance),
			 (eq, ":actor", "trp_player"),
			 (try_begin),
				 (eq, ":faction_object", "$g_talk_troop_faction"),
				 (neq, ":troop_object", "$g_talk_troop"),
				 (try_begin),
					 (ge, "$g_talk_troop_faction_relation", 0),
					 (neq, "$g_talk_troop_faction", "$players_kingdom"),
					 (assign, ":relevance", 180),
					 (try_begin),
						 (gt, "$g_talk_troop_relation", 5),
						 (assign, ":comment", "str_comment_you_renounced_your_alliegance_friendly"),
					 (else_try),
						 (ge, "$g_talk_troop_relation", 0),
						 (eq, ":reputation", lrep_goodnatured),
						 (assign, ":comment", "str_comment_you_renounced_your_alliegance_friendly"),
			 (else_try),
				 (assign, ":comment", "str_comment_you_renounced_your_alliegance_default"),
					 (try_end),
				 (else_try),
					 (lt, "$g_talk_troop_faction_relation", 0),
					 (assign, ":relevance", 300),
					 (try_begin),
							(ge, "$g_talk_troop_relation", 0),
							(this_or_next|eq, ":reputation", lrep_selfrighteous),
									(eq, ":reputation", lrep_debauched),
							(assign, ":comment", "str_comment_you_renounced_your_alliegance_unfriendly_moralizing"),
					 (else_try),
							(gt, "$g_talk_troop_relation", 5),
							(this_or_next|eq, ":reputation", lrep_goodnatured),
								(eq, ":reputation", lrep_upstanding),
							(assign, ":comment", "str_comment_you_renounced_your_alliegance_enemy_friendly"),
					 (else_try),
							(gt, "$g_talk_troop_relation", 5),
							(assign, ":comment", "str_comment_you_renounced_your_alliegance_enemy"),
					 (else_try),
							(is_between, "$g_talk_troop_relation", -5, 5),
							(this_or_next|eq, ":reputation", lrep_quarrelsome),
									(eq, ":reputation", lrep_debauched),
							(assign, ":comment", "str_comment_you_renounced_your_alliegance_unfriendly_spiteful"),
							(assign, ":suggested_relation_change", -2),
					 (else_try),
							(lt, "$g_talk_troop_relation", -5),
							(this_or_next|eq, ":reputation", lrep_quarrelsome),
							(this_or_next|eq, ":reputation", lrep_selfrighteous),
								(eq, ":reputation", lrep_debauched),
							(assign, ":comment", "str_comment_you_renounced_your_alliegance_unfriendly_spiteful"),
					 (else_try),
							(assign, ":comment", "str_comment_you_renounced_your_alliegance_default"),
					 (try_end),
				 (try_end),
			 (try_end),

		 (else_try), 
			 (eq, ":entry_type", logent_lady_marries_lord),
		 (eq, ":troop_object", "trp_player"),
		 (try_begin),
			(this_or_next|eq, ":reputation", lrep_quarrelsome),
			(eq, ":reputation", lrep_debauched),
			(lt, "$g_talk_troop_relation", -5),	
					(assign, ":relevance", 200),
			(assign, ":comment", "str_comment_marriage_normal_nasty"),
		 (else_try),
			(call_script, "script_troop_get_family_relation_to_troop", ":actor", "$g_talk_troop"),
			(ge, reg0, 5),
			(assign, ":comment", "str_comment_marriage_normal_family"),
					(assign, ":relevance", 300),
			(assign, ":suggested_relation_change", reg0),
			(val_div, ":suggested_relation_change", 3),
		 (else_try),
			(store_faction_of_troop, ":bride_faction", ":actor"),
			(eq, ":bride_faction", "$g_talk_troop_faction"),
			(assign, ":comment", "str_comment_marriage_normal"),
					(assign, ":relevance", 100),
		 (try_end),
		 (else_try), 
			 (eq, ":entry_type", logent_lady_elopes_with_lord),
		 (eq, ":troop_object", "trp_player"),
		 (try_begin),
			(call_script, "script_troop_get_family_relation_to_troop", ":actor", "$g_talk_troop"),
			(ge, reg0, 5),
			(assign, ":comment", "str_comment_marriage_elopement_family"),
					(assign, ":relevance", 300),
			(store_sub, ":suggested_relation_change", 0, reg0),
			(val_div, ":suggested_relation_change", 3),
		 (else_try),
			(store_faction_of_troop, ":bride_faction", ":actor"),
			(eq, ":bride_faction", "$g_talk_troop_faction"),
			(faction_slot_eq, ":bride_faction", slot_faction_leader, "$g_talk_troop"),
			(assign, ":comment", "str_comment_marriage_elopement_liege"),
					(assign, ":relevance", 300),
			(assign, ":suggested_relation_change", -10),
		 (try_end),
		 (else_try), #this is specific to quarrels with the player 
			 (eq, ":entry_type", logent_lords_quarrel_over_woman),
		 (eq, ":actor", "$g_talk_troop"),
		 (eq, ":center_object", "trp_player"),

		 (neg|troop_slot_ge, ":troop_object", slot_troop_spouse, "trp_player"),
		 
		 (str_store_troop_name, s54, ":troop_object"),

		 (try_begin),
				 (this_or_next|eq, ":reputation", lrep_selfrighteous),
				 (this_or_next|eq, ":reputation", lrep_quarrelsome),
				(eq, ":reputation", lrep_debauched),
			 
				 (assign, ":comment", "str_comment_i_quarreled_with_you_over_woman_derisive"),
			 (assign, ":relevance", 200),
				 (assign, ":suggested_relation_change", -20),
		 (else_try),
				 (assign, ":comment", "str_comment_i_quarreled_with_you_over_woman_default"),
			 (assign, ":relevance", 200),
				 (assign, ":suggested_relation_change", -20),
		 (try_end),
	 
		 (else_try), 
			 (eq, ":entry_type", logent_border_incident_troop_breaks_truce),
		 (eq, ":actor", "trp_player"),
		 (faction_slot_eq, ":faction_object", slot_faction_leader, "$g_talk_troop"),
		 (eq, "$players_kingdom", ":faction_object"),
		 
		 (assign, ":suggested_relation_change", -10),
		 (assign, ":comment", "str_comment_you_broke_truce_as_my_vassal"),
		 (assign, ":relevance", 300),

		 (else_try), 
			 (eq, ":entry_type", logent_border_incident_troop_attacks_neutral),
		 (eq, ":actor", "trp_player"),
		 (faction_slot_eq, ":faction_object", slot_faction_leader, "$g_talk_troop"),
		 (eq, "$players_kingdom", ":faction_object"),

		 (assign, ":suggested_relation_change", -3),
		 (assign, ":comment", "str_comment_you_attacked_neutral_as_my_vassal"),
		 (assign, ":relevance", 200),

	 #THE FOLLOWING ARE ALL COMPLAINTS SPOKEN BY LORDS WITHIN CONVERATIONS, RATHER THAN COMMENTS WHEN THE PLAYER FIRST SPEAKS TO A LORD
	 (else_try), #these need to have the actor and object strings added because they are used outside of "script_get_relevant_comment_to_s42"
			 (eq, ":entry_type", logent_ruler_intervenes_in_quarrel),
		 (eq, ":center_object", "$g_talk_troop"), #actor is liege lord, center object is loser lord, troop object is winner lord
		 (str_store_troop_name, s50, ":actor"), 
		 (str_store_troop_name, s51, ":center_object"), #s50 is actor, s51 is center object, s54 is troop object
		 (str_store_troop_name, s54, ":troop_object"), #s50 is actor, s51 is center object, s54 is troop object
			 (assign, ":comment", "str_comment_lord_intervened_against_me"),
		 (assign, ":relevance", -1),

	 (else_try),
			 (eq, ":entry_type", logent_lord_protests_marshall_appointment),
		 (eq, ":actor", "$g_talk_troop"),

		 (str_store_troop_name, s51, ":center_object"), #s51 is center object (marshall), s54 is troop object (liege lord), 
		 (str_store_troop_name, s54, ":troop_object"), 

			 (assign, ":comment", "str_comment_i_protested_marshall_appointment"),
		 (assign, ":relevance", -1),
		 
	 (else_try),
			 (eq, ":entry_type", logent_lord_blames_defeat),
		 (eq, ":actor", "$g_talk_troop"),

		 (str_store_troop_name, s51, ":center_object"), #s51 is center object (marshall), s54 is troop object (liege lord), 
		 (str_store_troop_name, s54, ":troop_object"),  
		 (str_store_troop_name, s56, ":faction_object"), #faction object is unusual in this circumstance
		 
			 (assign, ":comment", "str_comment_i_blamed_defeat"),
		 (assign, ":relevance", -1),

	 (else_try),
			 (eq, ":entry_type", logent_troop_feels_cheated_by_troop_over_land),
		 (eq, ":actor", "$g_talk_troop"),

		 (str_store_party_name, s51, ":center_object"),  
		 (str_store_troop_name, s54, ":troop_object"),  
		 (str_store_troop_name, s56, ":faction_object"), #faction object is unusual in this circumstance
		 
			 (assign, ":comment", "str_comment_i_was_entitled_to_fief"),
		 (assign, ":relevance", -1),
		 
	 (else_try),
			 (eq, ":entry_type", logent_lords_quarrel_over_woman),
		 (eq, ":actor", "$g_talk_troop"),

		 (str_store_troop_name, s51, ":center_object"), 
		 (str_store_troop_name, s54, ":troop_object"),  
		 
			 (assign, ":comment", "str_comment_i_quarreled_with_troop_over_woman"),
		 (assign, ":relevance", -1),

	 (else_try),
			 (eq, ":entry_type", logent_lords_quarrel_over_woman),
		 (eq, ":center_object", "$g_talk_troop"),

		 (str_store_troop_name, s51, ":actor"), 
		 (str_store_troop_name, s54, ":troop_object"),  
		 
			 (assign, ":comment", "str_comment_i_quarreled_with_troop_over_woman"),
		 (assign, ":relevance", -1),
		 
	 (else_try),	 
			 (eq, ":entry_type", logent_player_stole_cattles_from_village),
			 
			 (eq, ":actor", "trp_player"),
			 (try_begin),
				 (eq, ":center_object_lord", "$g_talk_troop"),
				 (assign, ":relevance", 200),
				 (assign, ":suggested_relation_change", -1),
				 (assign, ":comment", "str_comment_you_stole_cattles_from_my_village_default"),
				 (try_begin),
						(lt, "$g_talk_troop_faction_relation", -3),
						(this_or_next|eq, ":reputation", lrep_goodnatured),
						(eq, ":reputation", lrep_upstanding),
						(assign, ":comment", "str_comment_you_stole_cattles_from_my_village_enemy_benevolent"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -3),
						(this_or_next|eq, ":reputation", lrep_cunning),
								(eq, ":reputation", lrep_selfrighteous),
						(assign, ":comment", "str_comment_you_stole_cattles_from_my_village_enemy_coldblooded"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -3),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_stole_cattles_from_my_village_enemy_spiteful"),
				 (else_try),
						(lt, "$g_talk_troop_faction_relation", -3),
						(assign, ":comment", "str_comment_you_stole_cattles_from_my_village_enemy"),
				 (else_try),
						(lt, "$g_talk_troop_relation", -3),
						(this_or_next|eq, ":reputation", lrep_quarrelsome),
								(eq, ":reputation", lrep_debauched),
						(assign, ":comment", "str_comment_you_stole_cattles_from_my_village_unfriendly_spiteful"),
				 (else_try),
						(gt, "$g_talk_troop_relation", 6),
						(assign, ":comment", "str_comment_you_stole_cattles_from_my_village_friendly"),
				 (try_end),
			 (try_end),
								 
		 (try_end),

		 (assign, reg0, ":comment"),
	 (assign, reg1, ":relevance"),
		 (assign, reg2, ":suggested_relation_change"),
		 (assign, reg3, ":rejoinder"),
	])

# script_get_relevant_comment_to_s42
	# Input: none
	# Output: reg0 = 1 if comment found, 0 otherwise; s61 will contain comment string if found
get_relevant_comment_to_s42 = (
		"get_relevant_comment_to_s42",
	[
		
		(troop_get_slot, ":reputation", "$g_talk_troop", slot_lord_reputation_type),
		(try_begin),
		(eq, "$cheat_mode", 1),
		(store_add, ":rep_string", ":reputation", "str_personality_archetypes"),
		(str_store_string, s15, ":rep_string"),
		(display_message, "@{!}Reputation type: {s15}"),
		(try_end),
		
		
		(assign, ":highest_score_so_far", 50),
		(assign, ":best_comment_so_far", -1),
		(assign, ":rejoinder_to_best_comment_so_far", -1),
		(assign, ":comment_found", 0),
		(assign, ":best_log_entry", -1),
		(assign, ":comment_relation_change", 0),
		(store_current_hours, ":current_time"),
		
		#prevents multiple comments in conversations in same hour
		
		#     (troop_get_slot, ":talk_troop_last_comment_time", "$g_talk_troop", slot_troop_last_comment_time),
		#"$num_log_entries should also be set to one, not zero. This is included in the initialize npcs script, although could be moved to game_start
		(troop_get_slot, ":talk_troop_last_comment_slot", "$g_talk_troop", slot_troop_last_comment_slot),
		(troop_set_slot, "$g_talk_troop", slot_troop_last_comment_slot, "$num_log_entries"),
		
		(store_add, ":log_entries_plus_one", "$num_log_entries", 1),
		(try_for_range, ":log_entry_no", 1, ":log_entries_plus_one"),
		#      It should be log entries plus one, so that the try_ sequence does not stop short of the last log entry
		#      $Num_log_entries is now the number of the last log entry, which begins at "1" rather than "0"
		#      This is so that (le, ":log_entry_no", ":talk_troop_last_comment_slot") works properly
		
		(troop_get_slot, ":entry_time",           "trp_log_array_entry_time",           ":log_entry_no"),
		#      (val_max, ":entry_time", 1), #This is needed for pre-game events to be commented upon, if hours are used rather than the order of events
		(store_sub, ":entry_hours_elapsed", ":current_time", ":entry_time"),
		(try_begin),
			(le, ":log_entry_no", ":talk_troop_last_comment_slot"),
			#         (le, ":entry_time", ":talk_troop_last_comment_time"),
			(try_begin),
			(eq, ":log_entry_no", ":talk_troop_last_comment_slot"),
			(eq, "$cheat_mode", 1),
			(assign, reg5, ":log_entry_no"),
			(display_message, "@{!}Entries up to #{reg5} skipped"),
			(try_end),
			#       I suggest using the log entry number as opposed to time so that events in the same hour can be commented upon
			#       This feels more natural, for example, if there are other lords in the court when the player pledges allegiance
			(else_try),
			#         (le, ":entry_hours_elapsed", 3), #don't comment on really fresh events
			#       (else_try),
			(call_script, "script_get_relevant_comment_for_log_entry", ":log_entry_no"),
			(gt, reg1, 10),
			(assign, ":score", reg1),
			(assign, ":comment", reg0),
			#reg2 is what
			(assign, ":rejoinder", reg3),
				
			(store_random_in_range, ":rand", 70, 140),
			(val_mul, ":score", ":rand"),
			(store_add, ":entry_time_score", ":entry_hours_elapsed", 500), #approx. one month
			(val_mul, ":score", 1000),
			(val_div, ":score", ":entry_time_score"), ###Relevance decreases over time - halved after one month, one-third after two, etc
			(try_begin),
				(gt, ":score", ":highest_score_so_far"),
				(assign, ":highest_score_so_far", ":score"),
				(assign, ":best_comment_so_far",  ":comment"),
				(assign, ":rejoinder_to_best_comment_so_far",  ":rejoinder"),
				(assign, ":best_log_entry", ":log_entry_no"),
				(assign, ":comment_relation_change", reg2),
			(try_end),
			(try_end),
		(try_end),
			
		(try_begin),
			(gt, ":best_comment_so_far", 0),
			(assign, ":comment_found", 1), #comment found print it to s61 now.
			(troop_get_slot, ":actor",                 "trp_log_array_actor",                 ":best_log_entry"),
			(troop_get_slot, ":center_object",         "trp_log_array_center_object",         ":best_log_entry"),
			(troop_get_slot, ":center_object_lord",    "trp_log_array_center_object_lord",    ":best_log_entry"),
			(troop_get_slot, ":center_object_faction", "trp_log_array_center_object_faction", ":best_log_entry"),
			(troop_get_slot, ":troop_object",          "trp_log_array_troop_object",          ":best_log_entry"),
			(troop_get_slot, ":troop_object_faction",  "trp_log_array_troop_object_faction",  ":best_log_entry"),
			(troop_get_slot, ":faction_object",        "trp_log_array_faction_object",        ":best_log_entry"),
			(try_begin),
			(ge, ":actor", 0),
			(str_store_troop_name,   s50, ":actor"),
			(try_end),
			(try_begin),
			(ge, ":center_object", 0),
			(str_store_party_name,   s51, ":center_object"),
			(try_end),
			(try_begin),
			(ge, ":center_object_lord", 0),
			(str_store_troop_name,   s52, ":center_object_lord"),
			(try_end),
			(try_begin),
			(ge, ":center_object_faction", 0),
			(str_store_faction_name, s53, ":center_object_faction"),
			(try_end),
			(try_begin),
			(ge, ":troop_object", 0),
			(str_store_troop_name,   s54, ":troop_object"),
			(try_end),
			(try_begin),
			(is_between, ":troop_object_faction", kingdoms_begin, kingdoms_end),
			(str_store_faction_name, s55, ":troop_object_faction"),
			(str_store_string, s55, "str_the_s55"),
			(else_try),
			(is_between, ":troop_object", bandits_begin, bandits_end),
			(str_store_string, s55, "str_bandits"),
			(else_try),
			(eq, ":troop_object_faction", "fac_deserters"),
			(str_store_string, s55, "str_deserters"),
			(else_try),
			(str_store_string, s55, "str_travellers_on_the_road"),
			(else_try),
				
			(try_end),		  
			(try_begin),
			(ge, ":faction_object", 0),
			(str_store_faction_name, s56, ":faction_object"),
			(try_end),
			(assign, "$g_last_comment_copied_to_s42", ":best_comment_so_far"), #maybe deprecate
			(assign, "$g_rejoinder_to_last_comment", ":rejoinder_to_best_comment_so_far"),
				
			(str_store_string, s42, ":best_comment_so_far"),
		(try_end),
			
		(assign, reg0, ":comment_found"),
			
		(assign, "$log_comment_relation_change", ":comment_relation_change"),
	])
		