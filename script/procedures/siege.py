from header import *

# script_siege_init_ai_and_belfry
		# Input: none
		# Output: none (required for siege mission templates)
siege_init_ai_and_belfry = (
	"siege_init_ai_and_belfry",
			[(assign, "$cur_belfry_pos", 50),
				(assign, ":cur_belfry_object_pos", slot_scene_belfry_props_begin),
				(store_current_scene, ":cur_scene"),
				#Collecting belfry objects
				(try_for_range, ":i_belfry_instance", 0, 3),
					(scene_prop_get_instance, ":belfry_object", "spr_belfry_a", ":i_belfry_instance"),
					(ge, ":belfry_object", 0),
					(scene_set_slot, ":cur_scene", ":cur_belfry_object_pos", ":belfry_object"),
					(val_add, ":cur_belfry_object_pos", 1),
				(try_end),
				(try_for_range, ":i_belfry_instance", 0, 3),
					(scene_prop_get_instance, ":belfry_object", "spr_belfry_platform_a", ":i_belfry_instance"),
					(ge, ":belfry_object", 0),
					(scene_set_slot, ":cur_scene", ":cur_belfry_object_pos", ":belfry_object"),
					(val_add, ":cur_belfry_object_pos", 1),
				(try_end),
				(try_for_range, ":i_belfry_instance", 0, 3),
					(scene_prop_get_instance, ":belfry_object", "spr_belfry_platform_b", ":i_belfry_instance"),
					(ge, ":belfry_object", 0),
					(scene_set_slot, ":cur_scene", ":cur_belfry_object_pos", ":belfry_object"),
					(val_add, ":cur_belfry_object_pos", 1),
				(try_end),
				(assign, "$belfry_rotating_objects_begin", ":cur_belfry_object_pos"),
				(try_for_range, ":i_belfry_instance", 0, 5),
					(scene_prop_get_instance, ":belfry_object", "spr_belfry_wheel", ":i_belfry_instance"),
					(ge, ":belfry_object", 0),
					(scene_set_slot, ":cur_scene", ":cur_belfry_object_pos", ":belfry_object"),
					(val_add, ":cur_belfry_object_pos", 1),
				(try_end),
				(assign, "$last_belfry_object_pos", ":cur_belfry_object_pos"),
				
				#Lifting up the platform  at the beginning
				(try_begin),
					(scene_prop_get_instance, ":belfry_object_to_rotate", "spr_belfry_platform_a", 0),
				(try_end),
				
				#Moving the belfry objects to their starting position
				(entry_point_get_position,pos1,55),
				(entry_point_get_position,pos3,50),
				(try_for_range, ":i_belfry_object_pos", slot_scene_belfry_props_begin, "$last_belfry_object_pos"),
					(assign, ":pos_no", pos_belfry_begin),
					(val_add, ":pos_no", ":i_belfry_object_pos"),
					(val_sub, ":pos_no", slot_scene_belfry_props_begin),
					(scene_get_slot, ":cur_belfry_object", ":cur_scene", ":i_belfry_object_pos"),
					(prop_instance_get_position, pos2, ":cur_belfry_object"),
					(try_begin),
						(eq, ":cur_belfry_object", ":belfry_object_to_rotate"),
						(position_rotate_x, pos2, 90),
					(try_end),
					(position_transform_position_to_local, ":pos_no", pos1, pos2),
					(position_transform_position_to_parent, pos4, pos3, ":pos_no"),
					(prop_instance_animate_to_position, ":cur_belfry_object", pos4, 1),
				(try_end),
				(assign, "$belfry_positioned", 0),
				(assign, "$belfry_num_slots_positioned", 0),
				(assign, "$belfry_num_men_pushing", 0),
				(set_show_messages, 0),
				(team_give_order, "$attacker_team", grc_everyone, mordr_stand_ground),
				(team_give_order, "$attacker_team_2", grc_everyone, mordr_stand_ground),
				(set_show_messages, 1),
		])



		# script_cf_siege_move_belfry
		# Input: none
		# Output: none (required for siege mission templates)
cf_siege_move_belfry = (
	"cf_siege_move_belfry",
			[(neq, "$last_belfry_object_pos", slot_scene_belfry_props_begin),
				(entry_point_get_position,pos1,50),
				(entry_point_get_position,pos4,55),
				(get_distance_between_positions, ":total_distance", pos4, pos1),
				(store_current_scene, ":cur_scene"),
				(scene_get_slot, ":first_belfry_object", ":cur_scene", slot_scene_belfry_props_begin),
				(prop_instance_get_position, pos2, ":first_belfry_object"),
				(entry_point_get_position,pos1,"$cur_belfry_pos"),
				(position_transform_position_to_parent, pos3, pos1, pos_belfry_begin),
				(position_transform_position_to_parent, pos5, pos4, pos_belfry_begin),
				(get_distance_between_positions, ":cur_distance", pos2, pos3),
				(get_distance_between_positions, ":distance_left", pos2, pos5),
				(try_begin),
					(le, ":cur_distance", 10),
					(val_add, "$cur_belfry_pos", 1),
					(entry_point_get_position,pos1,"$cur_belfry_pos"),
					(position_transform_position_to_parent, pos3, pos1, pos_belfry_begin),
					(get_distance_between_positions, ":cur_distance", pos2, pos3),
				(try_end),
				(neq, "$cur_belfry_pos", 50),
				
				(assign, ":base_speed", 20),
				(store_div, ":slow_range", ":total_distance", 60),
				(store_sub, ":distance_moved", ":total_distance", ":distance_left"),
				
				(try_begin),
					(lt, ":distance_moved", ":slow_range"),
					(store_mul, ":base_speed", ":distance_moved", -60),
					(val_div, ":base_speed", ":slow_range"),
					(val_add, ":base_speed", 80),
				(else_try),
					(lt, ":distance_left", ":slow_range"),
					(store_mul, ":base_speed", ":distance_left", -60),
					(val_div, ":base_speed", ":slow_range"),
					(val_add, ":base_speed", 80),
				(try_end),
				(store_mul, ":belfry_speed", ":cur_distance", ":base_speed"),
				(try_begin),
					(eq, "$belfry_num_men_pushing", 0),
					(assign, ":belfry_speed", 1000000),
				(else_try),
					(val_div, ":belfry_speed", "$belfry_num_men_pushing"),
				(try_end),
				
				(try_begin),
					(le, "$cur_belfry_pos", 55),
					(init_position, pos3),
					(position_rotate_x, pos3, ":distance_moved"),
					(scene_get_slot, ":base_belfry_object", ":cur_scene", slot_scene_belfry_props_begin),
					(prop_instance_get_position, pos4, ":base_belfry_object"),
					(entry_point_get_position,pos1,"$cur_belfry_pos"),
					(try_for_range, ":i_belfry_object_pos", slot_scene_belfry_props_begin, "$last_belfry_object_pos"),
						(scene_get_slot, ":cur_belfry_object", ":cur_scene", ":i_belfry_object_pos"),
						(try_begin),
							(ge, ":i_belfry_object_pos", "$belfry_rotating_objects_begin"),
							(prop_instance_get_starting_position, pos5, ":base_belfry_object"),
							(prop_instance_get_starting_position, pos6, ":cur_belfry_object"),
							(position_transform_position_to_local, pos7, pos5, pos6),
							(position_transform_position_to_parent, pos5, pos4, pos7),
							(position_transform_position_to_parent, pos6, pos5, pos3),
							(prop_instance_set_position, ":cur_belfry_object", pos6),
						(else_try),
							(assign, ":pos_no", pos_belfry_begin),
							(val_add, ":pos_no", ":i_belfry_object_pos"),
							(val_sub, ":pos_no", slot_scene_belfry_props_begin),
							(position_transform_position_to_parent, pos2, pos1, ":pos_no"),
							(prop_instance_animate_to_position, ":cur_belfry_object", pos2, ":belfry_speed"),
						(try_end),
					(try_end),
				(try_end),
				(gt, "$cur_belfry_pos", 55),
				(assign, "$belfry_positioned", 1),
		])
		
		# script_cf_siege_rotate_belfry_platform
		# Input: none
		# Output: none (required for siege mission templates)
cf_siege_rotate_belfry_platform = (
	"cf_siege_rotate_belfry_platform",
			[(eq, "$belfry_positioned", 1),
				(scene_prop_get_instance, ":belfry_object", "spr_belfry_platform_a", 0),
				(prop_instance_get_position, pos1, ":belfry_object"),
				(position_rotate_x, pos1, -90),
				(prop_instance_animate_to_position, ":belfry_object", pos1, 400),
				(assign, "$belfry_positioned", 2),
		])
		
		# script_cf_siege_assign_men_to_belfry
		# Input: none
		# Output: none (required for siege mission templates)
cf_siege_assign_men_to_belfry = (
	"cf_siege_assign_men_to_belfry",
			[
				##    (store_mission_timer_a, ":cur_seconds"),
				(neq, "$last_belfry_object_pos", slot_scene_belfry_props_begin),
				(assign, ":end_trigger", 0),
				(try_begin),
					(lt, "$belfry_positioned", 3),
					(get_player_agent_no, ":player_agent"),
					(store_current_scene, ":cur_scene"),
					(scene_get_slot, ":first_belfry_object", ":cur_scene", slot_scene_belfry_props_begin),
					(prop_instance_get_position, pos2, ":first_belfry_object"),
					(assign, ":slot_1_positioned", 0),
					(assign, ":slot_2_positioned", 0),
					(assign, ":slot_3_positioned", 0),
					(assign, ":slot_4_positioned", 0),
					(assign, ":slot_5_positioned", 0),
					(assign, ":slot_6_positioned", 0),
					(assign, "$belfry_num_slots_positioned", 0),
					(assign, "$belfry_num_men_pushing", 0),
					(try_for_agents, ":cur_agent"),
						(agent_is_alive, ":cur_agent"),
						(agent_is_human, ":cur_agent"),
						(try_begin),
							(agent_get_slot, ":x_pos", ":cur_agent", slot_agent_target_x_pos),
							(neq, ":x_pos", 0),
							(agent_get_slot, ":y_pos", ":cur_agent", slot_agent_target_y_pos),
							(try_begin),
								(eq, ":x_pos", -600),
								(try_begin),
									(eq, ":y_pos", 0),
									(assign, ":slot_1_positioned", 1),
								(else_try),
									(eq, ":y_pos", -200),
									(assign, ":slot_2_positioned", 1),
								(else_try),
									(assign, ":slot_3_positioned", 1),
								(try_end),
							(else_try),
								(try_begin),
									(eq, ":y_pos", 0),
									(assign, ":slot_4_positioned", 1),
								(else_try),
									(eq, ":y_pos", -200),
									(assign, ":slot_5_positioned", 1),
								(else_try),
									(assign, ":slot_6_positioned", 1),
								(try_end),
							(try_end),
							(val_add, "$belfry_num_slots_positioned", 1),
							(init_position, pos1),
							(position_move_x, pos1, ":x_pos"),
							(position_move_y, pos1, ":y_pos"),
							(init_position, pos3),
							(position_move_x, pos3, ":x_pos"),
							(position_move_y, pos3, -1000),
							(position_transform_position_to_parent, pos4, pos2, pos1),
							(position_transform_position_to_parent, pos5, pos2, pos3),
							(agent_get_position, pos6, ":cur_agent"),
							(get_distance_between_positions, ":target_distance", pos6, pos4),
							(get_distance_between_positions, ":waypoint_distance", pos6, pos5),
							(try_begin),
								(this_or_next|lt, ":target_distance", ":waypoint_distance"),
								(lt, ":waypoint_distance", 600),
								(agent_set_scripted_destination, ":cur_agent", pos4, 1),
							(else_try),
								(agent_set_scripted_destination, ":cur_agent", pos5, 1),
							(try_end),
							(try_begin),
								(le, ":target_distance", 300),
								(val_add, "$belfry_num_men_pushing", 1),
							(try_end),
							##        (else_try),
							##          (agent_get_team, ":cur_agent_team", ":cur_agent"),
							##          (this_or_next|eq, "$attacker_team", ":cur_agent_team"),
							##          (             eq, "$attacker_team_2", ":cur_agent_team"),
							##          (try_begin),
							##            (gt, ":cur_seconds", 20),
							##            (agent_get_position, pos1, ":cur_agent"),
							##            (agent_set_scripted_destination, ":cur_agent", pos1, 0),
							##          (else_try),
							##            (try_begin),
							##              (team_get_movement_order, ":order1", "$attacker_team", grc_infantry),
							##              (team_get_movement_order, ":order2", "$attacker_team", grc_cavalry),
							##              (team_get_movement_order, ":order3", "$attacker_team", grc_archers),
							##              (this_or_next|neq, ":order1", mordr_stand_ground),
							##              (this_or_next|neq, ":order2", mordr_stand_ground),
							##              (neq, ":order3", mordr_stand_ground),
							##              (set_show_messages, 0),
							##              (team_give_order, "$attacker_team", grc_everyone, mordr_stand_ground),
							##              (set_show_messages, 1),
							##            (try_end),
							##          (try_end),
						(try_end),
					(try_end),
					(try_begin),
						(lt, "$belfry_num_slots_positioned", 6),
						(try_for_agents, ":cur_agent"),
							(agent_is_alive, ":cur_agent"),
							(agent_get_team, ":cur_agent_team", ":cur_agent"),
							(this_or_next|eq, "$attacker_team", ":cur_agent_team"),
							(eq, "$attacker_team_2", ":cur_agent_team"),
							(neq, ":player_agent", ":cur_agent"),
							(agent_get_class, ":agent_class", ":cur_agent"),
							(this_or_next|eq, ":agent_class", grc_infantry),
							(eq, ":agent_class", grc_cavalry),
							(agent_get_slot, ":x_pos", ":cur_agent", 1),
							(eq, ":x_pos", 0),
							(assign, ":y_pos", 0),
							(try_begin),
								(eq, ":slot_1_positioned", 0),
								(assign, ":x_pos", -600),
								(assign, ":y_pos", 0),
								(val_add, ":slot_1_positioned", 1),
							(else_try),
								(eq, ":slot_2_positioned", 0),
								(assign, ":x_pos", -600),
								(assign, ":y_pos", -200),
								(val_add, ":slot_2_positioned", 1),
							(else_try),
								(eq, ":slot_3_positioned", 0),
								(assign, ":x_pos", -600),
								(assign, ":y_pos", -400),
								(val_add, ":slot_3_positioned", 1),
							(else_try),
								(eq, ":slot_4_positioned", 0),
								(assign, ":x_pos", 600),
								(assign, ":y_pos", 0),
								(val_add, ":slot_4_positioned", 1),
							(else_try),
								(eq, ":slot_5_positioned", 0),
								(assign, ":x_pos", 600),
								(assign, ":y_pos", -200),
								(val_add, ":slot_5_positioned", 1),
							(else_try),
								(eq, ":slot_6_positioned", 0),
								(assign, ":x_pos", 600),
								(assign, ":y_pos", -400),
								(val_add, ":slot_6_positioned", 1),
							(try_end),
							(val_add, "$belfry_num_slots_positioned", 1),
							(agent_set_slot, ":cur_agent", 1, ":x_pos"),
							(agent_set_slot, ":cur_agent", 2, ":y_pos"),
						(try_end),
					(try_end),
					(try_begin),
						(store_mission_timer_a, ":cur_timer"),
						(gt, ":cur_timer", 20),
						(lt, "$belfry_num_slots_positioned", 6),
						(try_for_agents, ":cur_agent"),
							(agent_is_alive, ":cur_agent"),
							(agent_get_team, ":cur_agent_team", ":cur_agent"),
							(this_or_next|eq, "$attacker_team", ":cur_agent_team"),
							(             eq, "$attacker_team_2", ":cur_agent_team"),
							(neq, ":player_agent", ":cur_agent"),
							(agent_get_slot, ":x_pos", ":cur_agent", 1),
							(eq, ":x_pos", 0),
							(assign, ":y_pos", 0),
							(try_begin),
								(eq, ":slot_1_positioned", 0),
								(assign, ":x_pos", -600),
								(assign, ":y_pos", 0),
								(val_add, ":slot_1_positioned", 1),
							(else_try),
								(eq, ":slot_2_positioned", 0),
								(assign, ":x_pos", -600),
								(assign, ":y_pos", -200),
								(val_add, ":slot_2_positioned", 1),
							(else_try),
								(eq, ":slot_3_positioned", 0),
								(assign, ":x_pos", -600),
								(assign, ":y_pos", -400),
								(val_add, ":slot_3_positioned", 1),
							(else_try),
								(eq, ":slot_4_positioned", 0),
								(assign, ":x_pos", 600),
								(assign, ":y_pos", 0),
								(val_add, ":slot_4_positioned", 1),
							(else_try),
								(eq, ":slot_5_positioned", 0),
								(assign, ":x_pos", 600),
								(assign, ":y_pos", -200),
								(val_add, ":slot_5_positioned", 1),
							(else_try),
								(eq, ":slot_6_positioned", 0),
								(assign, ":x_pos", 600),
								(assign, ":y_pos", -400),
								(val_add, ":slot_6_positioned", 1),
							(try_end),
							(val_add, "$belfry_num_slots_positioned", 1),
							(agent_set_slot, ":cur_agent", 1, ":x_pos"),
							(agent_set_slot, ":cur_agent", 2, ":y_pos"),
						(try_end),
					(try_end),
				(else_try),
					(assign, ":end_trigger", 1),
					(try_for_agents, ":cur_agent"),
						(agent_clear_scripted_mode, ":cur_agent"),
					(try_end),
					(set_show_messages, 0),
					(team_give_order, "$attacker_team", grc_everyone, mordr_charge),
					(set_show_messages, 1),
				(try_end),
				(eq, ":end_trigger", 1),
		])

		# script_siege_move_archers_to_archer_positions
		# NO longer behaves like native
		# WARNING : modified by 1257AD devs
		# Input: none
		# Output: none
siege_move_archers_to_archer_positions = (
	"siege_move_archers_to_archer_positions",
			[
				(try_for_agents, ":agent_no"),
					(agent_is_alive, ":agent_no"),
					(agent_slot_eq, ":agent_no", slot_agent_is_not_reinforcement, 0),
					(agent_is_defender, ":agent_no"),
					(agent_get_division, ":agent_class", ":agent_no"), # raf
					
					(agent_get_troop_id, ":agent_troop", ":agent_no"),
					(eq, ":agent_class", grc_archers),
					(str_store_troop_name, s1, ":agent_troop"),
					(try_begin),
						(agent_slot_eq, ":agent_no", slot_agent_target_entry_point, 0),
						#(store_random_in_range, ":random_entry_point", 40, 44),
						(store_random_in_range, ":random_entry_point", 40, 47), # rafi
						(assign, reg20, ":random_entry_point"),
						(agent_set_slot, ":agent_no", slot_agent_target_entry_point, ":random_entry_point"),
					(try_end),
					(try_begin),
						(agent_get_position, pos0, ":agent_no"),
						(agent_get_slot, ":random_entry_point", ":agent_no", slot_agent_target_entry_point), #raf
						(entry_point_get_position, pos1, ":random_entry_point"),
						(get_distance_between_positions, ":dist", pos0, pos1),
						#(lt, ":dist", 300),
						(lt, ":dist", 50), # rafi
						(agent_clear_scripted_mode, ":agent_no"),
						(agent_set_slot, ":agent_no", slot_agent_is_in_scripted_mode, 0),
						(agent_set_slot, ":agent_no", slot_agent_is_not_reinforcement, 1),
						(str_store_troop_name, s1, ":agent_troop"),
						(assign, reg0, ":agent_no"),
						(display_message, "@{s1} ({reg0}) reached pos"),
					(else_try),
						(agent_get_simple_behavior, ":agent_sb", ":agent_no"),
						(agent_get_combat_state, ":agent_cs", ":agent_no"),
						(assign, reg21, ":agent_cs"),
						(this_or_next|eq, ":agent_sb", aisb_ranged),
						(eq, ":agent_sb", aisb_go_to_pos),#scripted mode
						(this_or_next | eq, ":agent_cs", 0), #raf
						(eq, ":agent_cs", 7), # 7 = no visible targets (state for ranged units)
						(try_begin),
							(agent_slot_eq, ":agent_no", slot_agent_is_in_scripted_mode, 0),
							(agent_set_scripted_destination, ":agent_no", pos1, 0),
							(agent_set_slot, ":agent_no", slot_agent_is_in_scripted_mode, 1),
							# (str_store_troop_name, s1, ":agent_troop"),
							# (assign, reg0, ":agent_no"),
							# (display_message, "@{s1} ({reg0}) moving to pos {reg20}"),
						(try_end),
					(else_try),
						(try_begin),
							# (agent_slot_eq, ":agent_no", slot_agent_is_in_scripted_mode, 1),
							# (agent_clear_scripted_mode, ":agent_no"),
							# (agent_set_slot, ":agent_no", slot_agent_is_in_scripted_mode, 0),
							# (str_store_troop_name, s1, ":agent_troop"),
							# (assign, reg0, ":agent_no"),
							# (display_message, "@{s1} ({reg0}) seeing target or changed mode"),
						(try_end),
					(try_end),
				(try_end),
		])
	
