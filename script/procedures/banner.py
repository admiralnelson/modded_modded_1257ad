from header import *

		#script_troop_agent_set_banner
		# INPUT: agent_no
		# OUTPUT: none
troop_agent_set_banner = (
	"troop_agent_set_banner",
			[
				(store_script_param, ":tableau_no",1),
				(store_script_param, ":agent_no", 2),
				(store_script_param, ":troop_no", 3),
				(call_script, "script_agent_troop_get_banner_mesh", ":agent_no", ":troop_no"),
				(cur_agent_set_banner_tableau_material, ":tableau_no", reg0),
		])

		#script_shield_item_set_banner
		#script_shield_item_set_banner_old
		# INPUT: agent_no
		# OUTPUT: none
shield_item_set_banner_old = (
	"shield_item_set_banner_old",
			[
				(store_script_param, ":tableau_no",1),
				(store_script_param, ":agent_no", 2),
				(store_script_param, ":troop_no", 3),
				(call_script, "script_agent_troop_get_banner_mesh", ":agent_no", ":troop_no"),
				(cur_item_set_tableau_material, ":tableau_no", reg0),
		])
	
	#script_shield_item_set_banner_new
		# INPUT: agent_no
		# OUTPUT: none
shield_item_set_banner = (
	"shield_item_set_banner",
			[
				(store_script_param, ":tableau_no",1),
				(store_script_param, ":agent_no", 2),
				(store_script_param, ":troop_no", 3),
				#(store_script_param, ":item_no", 4),
		#(agent_get_item_slot, ":item", ":agent_no", 5),
		(try_begin),
			(eq, "$historical_banners", 1),
			(call_script, "script_agent_troop_get_historical_mesh", ":agent_no", ":troop_no"),
		(else_try),  
					(call_script, "script_agent_troop_get_banner_mesh", ":agent_no", ":troop_no"),
		(try_end),  
				(cur_item_set_tableau_material, ":tableau_no", reg0),
		])
		

		# script_draw_banner_to_region
		# Input: arg1 = troop_no, arg2 = center_pos_x, arg3 = center_pos_y, arg4 = width, arg5 = height, arg6 = stretch_width, arg7 = stretch_height, arg8 = default_scale, arg9 = max_charge_scale, arg10 = drawn_item_type
		# drawn_item_type is 0 for banners, 1 for shields, 2 for heater shield, 3 for armor
		# arguments will be used as fixed point values
		# Output: none
draw_banner_to_region = (
	"draw_banner_to_region",
			[
				(store_script_param, ":troop_no", 1),
				(store_script_param, ":center_pos_x", 2),
				(store_script_param, ":center_pos_y", 3),
				(store_script_param, ":width", 4),
				(store_script_param, ":height", 5),
				(store_script_param, ":stretch_width", 6),
				(store_script_param, ":stretch_height", 7),
				(store_script_param, ":default_scale", 8),
				(store_script_param, ":max_charge_scale", 9),
				(store_script_param, ":drawn_item_type", 10),
				
				(troop_get_slot, ":bg_type", ":troop_no", slot_troop_custom_banner_bg_type),
				(val_add, ":bg_type", custom_banner_backgrounds_begin),
				(troop_get_slot, ":bg_color_1", ":troop_no", slot_troop_custom_banner_bg_color_1),
				(troop_get_slot, ":bg_color_2", ":troop_no", slot_troop_custom_banner_bg_color_2),
				(troop_get_slot, ":num_charges", ":troop_no", slot_troop_custom_banner_num_charges),
				(troop_get_slot, ":positioning", ":troop_no", slot_troop_custom_banner_positioning),
				(call_script, "script_get_troop_custom_banner_num_positionings", ":troop_no"),
				(assign, ":num_positionings", reg0),
				(val_mod, ":positioning", ":num_positionings"),
				
				(init_position, pos2),
				(position_set_x, pos2, ":width"),
				(position_set_y, pos2, ":height"),
				(assign, ":default_value", 1),
				(convert_to_fixed_point, ":default_value"),
				(position_set_z, pos2, ":default_value"),
				
				(init_position, pos1),
				(position_set_x, pos1, ":center_pos_x"),
				(position_set_y, pos1, ":center_pos_y"),
				(position_move_z, pos1, -20),
				
				(init_position, pos3),
				(position_set_x, pos3, ":default_scale"),
				(position_set_y, pos3, ":default_scale"),
				(position_set_z, pos3, ":default_value"),
				
				(try_begin),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_bg"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg01"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg02"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg03"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg08"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg09"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg10"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg11"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg12"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg13"),
					(this_or_next|eq, ":bg_type", "mesh_custom_banner_fg16"),
					(eq, ":bg_type", "mesh_custom_banner_fg17"),
					(cur_tableau_add_mesh_with_scale_and_vertex_color, ":bg_type", pos1, pos2, 0, ":bg_color_1"),
				(else_try),
					(cur_tableau_add_mesh_with_scale_and_vertex_color, ":bg_type", pos1, pos3, 0, ":bg_color_1"),
				(try_end),
				(position_move_z, pos1, -20),
				(position_move_x, pos2, ":width"),
				(position_move_y, pos2, ":height"),
				(cur_tableau_add_mesh_with_scale_and_vertex_color, "mesh_custom_banner_bg", pos1, pos2, 0, ":bg_color_2"),
				
				(assign, ":charge_stretch", ":stretch_width"),
				(val_min, ":charge_stretch", ":stretch_height"),
				(val_min, ":charge_stretch", ":max_charge_scale"),
				(call_script, "script_get_custom_banner_charge_type_position_scale_color", "trp_player", ":positioning"),
				
				(try_begin),
					(this_or_next|eq, ":drawn_item_type", 2), #heater shield
					(eq, ":drawn_item_type", 3), #armor
					(assign, ":change_center_pos", 0),
					(try_begin),
						(eq, ":num_charges", 1),
						(assign, ":change_center_pos", 1),
					(else_try),
						(eq, ":num_charges", 2),
						(eq, ":positioning", 1),
						(assign, ":change_center_pos", 1),
					(else_try),
						(eq, ":num_charges", 3),
						(eq, ":positioning", 1),
						(assign, ":change_center_pos", 1),
					(try_end),
					(try_begin),
						(eq, ":change_center_pos", 1),
						(val_add, ":center_pos_y", 30),
					(try_end),
				(try_end),
				
				(try_begin),
					(ge, ":num_charges", 1),
					(val_mul, reg1, ":charge_stretch"),
					(val_div, reg1, 10000),
					(position_get_x, ":x", pos0),
					(position_get_y, ":y", pos0),
					(val_mul, ":x", ":stretch_width"),
					(val_mul, ":y", ":stretch_height"),
					(val_div, ":x", 10000),
					(val_div, ":y", 10000),
					(val_add, ":x", ":center_pos_x"),
					(val_add, ":y", ":center_pos_y"),
					(position_set_x, pos0, ":x"),
					(position_set_y, pos0, ":y"),
					(assign, ":scale_value", reg1),
					(convert_to_fixed_point, ":scale_value"),
					(store_mul, ":scale_value_inverse", ":scale_value", -1),
					(init_position, pos4),
					(position_set_x, pos4, ":scale_value"),
					(position_set_y, pos4, ":scale_value"),
					(position_set_z, pos4, ":scale_value"),
					(store_div, ":orientation", reg0, 256), #orientation flags
					(try_begin),
						(this_or_next|eq, ":orientation", 1),
						(eq, ":orientation", 3),
						(position_set_x, pos4, ":scale_value_inverse"),
					(try_end),
					(try_begin),
						(this_or_next|eq, ":orientation", 2),
						(eq, ":orientation", 3),
						(position_set_y, pos4, ":scale_value_inverse"),
					(try_end),
					(val_mod, reg0, 256), #remove orientation flags
					(cur_tableau_add_mesh_with_scale_and_vertex_color, reg0, pos0, pos4, 0, reg2),
				(try_end),
				(try_begin),
					(ge, ":num_charges", 2),
					(val_mul, reg4, ":charge_stretch"),
					(val_div, reg4, 10000),
					(position_get_x, ":x", pos1),
					(position_get_y, ":y", pos1),
					(val_mul, ":x", ":stretch_width"),
					(val_mul, ":y", ":stretch_height"),
					(val_div, ":x", 10000),
					(val_div, ":y", 10000),
					(val_add, ":x", ":center_pos_x"),
					(val_add, ":y", ":center_pos_y"),
					(position_set_x, pos1, ":x"),
					(position_set_y, pos1, ":y"),
					
					(assign, ":scale_value", reg4),
					(convert_to_fixed_point, ":scale_value"),
					(store_mul, ":scale_value_inverse", ":scale_value", -1),
					(init_position, pos4),
					(position_set_x, pos4, ":scale_value"),
					(position_set_y, pos4, ":scale_value"),
					(position_set_z, pos4, ":scale_value"),
					(store_div, ":orientation", reg3, 256), #orientation flags
					(try_begin),
						(this_or_next|eq, ":orientation", 1),
						(eq, ":orientation", 3),
						(position_set_x, pos4, ":scale_value_inverse"),
					(try_end),
					(try_begin),
						(this_or_next|eq, ":orientation", 2),
						(eq, ":orientation", 3),
						(position_set_y, pos4, ":scale_value_inverse"),
					(try_end),
					(val_mod, reg3, 256), #remove orientation flags
					
					(cur_tableau_add_mesh_with_scale_and_vertex_color, reg3, pos1, pos4, 0, reg5),
				(try_end),
				(try_begin),
					(ge, ":num_charges", 3),
					(val_mul, reg7, ":charge_stretch"),
					(val_div, reg7, 10000),
					(position_get_x, ":x", pos2),
					(position_get_y, ":y", pos2),
					(val_mul, ":x", ":stretch_width"),
					(val_mul, ":y", ":stretch_height"),
					(val_div, ":x", 10000),
					(val_div, ":y", 10000),
					(val_add, ":x", ":center_pos_x"),
					(val_add, ":y", ":center_pos_y"),
					(position_set_x, pos2, ":x"),
					(position_set_y, pos2, ":y"),
					
					(assign, ":scale_value", reg7),
					(convert_to_fixed_point, ":scale_value"),
					(store_mul, ":scale_value_inverse", ":scale_value", -1),
					(init_position, pos4),
					(position_set_x, pos4, ":scale_value"),
					(position_set_y, pos4, ":scale_value"),
					(position_set_z, pos4, ":scale_value"),
					(store_div, ":orientation", reg6, 256), #orientation flags
					(try_begin),
						(this_or_next|eq, ":orientation", 1),
						(eq, ":orientation", 3),
						(position_set_x, pos4, ":scale_value_inverse"),
					(try_end),
					(try_begin),
						(this_or_next|eq, ":orientation", 2),
						(eq, ":orientation", 3),
						(position_set_y, pos4, ":scale_value_inverse"),
					(try_end),
					(val_mod, reg6, 256), #remove orientation flags
					
					(cur_tableau_add_mesh_with_scale_and_vertex_color, reg6, pos2, pos4, 0, reg8),
				(try_end),
				(try_begin),
					(ge, ":num_charges", 4),
					(val_mul, reg10, ":charge_stretch"),
					(val_div, reg10, 10000),
					(position_get_x, ":x", pos3),
					(position_get_y, ":y", pos3),
					(val_mul, ":x", ":stretch_width"),
					(val_mul, ":y", ":stretch_height"),
					(val_div, ":x", 10000),
					(val_div, ":y", 10000),
					(val_add, ":x", ":center_pos_x"),
					(val_add, ":y", ":center_pos_y"),
					(position_set_x, pos3, ":x"),
					(position_set_y, pos3, ":y"),
					
					(assign, ":scale_value", reg10),
					(convert_to_fixed_point, ":scale_value"),
					(store_mul, ":scale_value_inverse", ":scale_value", -1),
					(init_position, pos4),
					(position_set_x, pos4, ":scale_value"),
					(position_set_y, pos4, ":scale_value"),
					(position_set_z, pos4, ":scale_value"),
					(store_div, ":orientation", reg9, 256), #orientation flags
					(try_begin),
						(this_or_next|eq, ":orientation", 1),
						(eq, ":orientation", 3),
						(position_set_x, pos4, ":scale_value_inverse"),
					(try_end),
					(try_begin),
						(this_or_next|eq, ":orientation", 2),
						(eq, ":orientation", 3),
						(position_set_y, pos4, ":scale_value_inverse"),
					(try_end),
					(val_mod, reg9, 256), #remove orientation flags
					
					(cur_tableau_add_mesh_with_scale_and_vertex_color, reg9, pos3, pos4, 0, reg11),
				(try_end),
		])


		# script_get_random_custom_banner
		# Input: arg1 = troop_no
		# Output: none
get_random_custom_banner = (
	"get_random_custom_banner",
			[
				(store_script_param, ":troop_no", 1),
				(store_random_in_range, ":num_charges", 1, 5),
				(troop_set_slot, ":troop_no", slot_troop_custom_banner_num_charges, ":num_charges"),
				(store_random_in_range, ":random_color_index", 0, 42),
				(call_script, "script_get_custom_banner_color_from_index", ":random_color_index"),
				(assign, ":color_1", reg0),
				(troop_set_slot, ":troop_no", slot_troop_custom_banner_bg_color_1, ":color_1"),
				(assign, ":end_cond", 1),
				(try_for_range, ":unused", 0, ":end_cond"),
					(store_random_in_range, ":random_color_index", 0, 42),
					(call_script, "script_get_custom_banner_color_from_index", ":random_color_index"),
					(assign, ":color_2", reg0),
					(try_begin),
						(call_script, "script_cf_check_color_visibility", ":color_1", ":color_2"),
						(troop_set_slot, ":troop_no", slot_troop_custom_banner_bg_color_2, ":color_2"),
					(else_try),
						(val_add, ":end_cond", 1),
					(try_end),
				(try_end),
				(assign, ":end_cond", 4),
				(assign, ":cur_charge", 0),
				(try_for_range, ":unused", 0, ":end_cond"),
					(store_random_in_range, ":random_color_index", 0, 42),
					(call_script, "script_get_custom_banner_color_from_index", ":random_color_index"),
					(assign, ":charge_color", reg0),
					(try_begin),
						(call_script, "script_cf_check_color_visibility", ":charge_color", ":color_1"),
						(call_script, "script_cf_check_color_visibility", ":charge_color", ":color_2"),
						(store_add, ":cur_slot", ":cur_charge", slot_troop_custom_banner_charge_color_1),
						(troop_set_slot, ":troop_no", ":cur_slot", ":charge_color"),
						(store_random_in_range, ":random_charge", custom_banner_charges_begin, custom_banner_charges_end),
						(val_sub, ":random_charge", custom_banner_charges_begin),
						(store_add, ":cur_slot", ":cur_charge", slot_troop_custom_banner_charge_type_1),
						(troop_set_slot, ":troop_no", ":cur_slot", ":random_charge"),
						(val_add, ":cur_charge", 1),
					(else_try),
						(val_add, ":end_cond", 1),
					(try_end),
				(try_end),
				(store_random_in_range, ":random_bg", custom_banner_backgrounds_begin, custom_banner_backgrounds_end),
				(val_sub, ":random_bg", custom_banner_backgrounds_begin),
				(troop_set_slot, ":troop_no", slot_troop_custom_banner_bg_type, ":random_bg"),
				(store_random_in_range, ":random_flag", custom_banner_flag_types_begin, custom_banner_flag_types_end),
				(val_sub, ":random_flag", custom_banner_flag_types_begin),
				(troop_set_slot, ":troop_no", slot_troop_custom_banner_flag_type, ":random_flag"),
				(store_random_in_range, ":random_positioning", 0, 4),
				(troop_set_slot, ":troop_no", slot_troop_custom_banner_positioning, ":random_positioning"),
		])
		