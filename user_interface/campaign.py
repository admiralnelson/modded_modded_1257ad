from header import *

name_kingdom = (
	"name_kingdom",0,mesh_load_window,[
			(ti_on_presentation_load,
			 [(set_fixed_point_multiplier, 1000),
				(str_store_string, s1, "str_name_kingdom_text"),
				(create_text_overlay, reg1, s1, tf_center_justify),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 500),
				(overlay_set_position, reg1, pos1),
				(overlay_set_text, reg1, s1),
				(create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"),
				(position_set_x, pos1, 400),
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
				(try_begin),
					(eq, "$players_kingdom_name_set", 1),
					(str_store_faction_name, s7, "fac_player_supporters_faction"),
					(overlay_set_text, "$g_presentation_obj_name_kingdom_1", s7),
				(else_try),
					(str_store_troop_name, s0, "trp_player"),
					(overlay_set_text, "$g_presentation_obj_name_kingdom_1", "str_default_kingdom_name"),
					(str_store_string, s7, "str_default_kingdom_name"),
				(try_end),

				(create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@Continue...", tf_center_justify),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 300),
				(overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
				(presentation_set_duration, 999999),
				]),
			(ti_on_presentation_event_state_change,
			 [(store_trigger_param_1, ":object"),
				(try_begin),
					(eq, ":object", "$g_presentation_obj_name_kingdom_1"),
					(str_store_string, s7, s0),
				(else_try),
					(eq, ":object", "$g_presentation_obj_name_kingdom_2"),
					(faction_set_name, "fac_player_supporters_faction", s7),
					#(faction_set_color, "fac_player_supporters_faction", 0xFF0000), # rafi remove this
					(assign, "$players_kingdom_name_set", 1),
					(presentation_set_duration, 0),
				(try_end),
				]),
		])

banner_selection = (
	"banner_selection",0,mesh_load_window,[
			(ti_on_presentation_load,
			 [(set_fixed_point_multiplier, 1000),
				(str_store_string, s1, "str_banner_selection_text"),
				(create_text_overlay, reg1, s1, tf_center_justify),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 600),
				(overlay_set_position, reg1, pos1),
				(overlay_set_text, reg1, s1),
				(create_button_overlay, "$g_presentation_obj_banner_selection_1", "@Next Page", tf_center_justify),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 50),
				(overlay_set_position, "$g_presentation_obj_banner_selection_1", pos1),

				(assign, ":x_pos", 150),
				(assign, ":y_pos", 575),
				(assign, ":try_end", banner_meshes_end_minus_one),
				#(store_sub, ":num_npc_kingdoms", npc_kingdoms_end, npc_kingdoms_begin),
				#(val_sub, ":try_end", ":num_npc_kingdoms"), #do not allow kingdom banners to be selected
				(store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
				(val_add, ":begin_mesh", banner_meshes_begin),
				(store_add, ":try_end_2", ":begin_mesh", 16),
				(val_min, ":try_end", ":try_end_2"),
				(store_add, "$g_presentation_banner_start", "$g_presentation_obj_banner_selection_1", 1),
				(try_for_range, ":cur_banner_mesh", ":begin_mesh", ":try_end"),
					(create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
					(position_set_x, pos1, ":x_pos"),
					(position_set_y, pos1, ":y_pos"),
					(overlay_set_position, reg1, pos1),
					(position_set_x, pos1, 100),
					(position_set_y, pos1, 100),
					(overlay_set_size, reg1, pos1),
					(val_add, ":x_pos", 100),
					(ge, ":x_pos", 900),
					(assign, ":x_pos", 150),
					(val_sub, ":y_pos", 250),
				(try_end),
				(presentation_set_duration, 999999),
				]),
			(ti_on_presentation_event_state_change,
			 [(store_trigger_param_1, ":object"),
				(try_begin),
					(eq, ":object", "$g_presentation_obj_banner_selection_1"),
					(val_add, "$g_presentation_page_no", 1),
					(val_mod, "$g_presentation_page_no", 30), #rafi
					(start_presentation, "prsnt_banner_selection"),
				(else_try),
					(store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
					(store_mul, ":page_adder", 16, "$g_presentation_page_no"),
					(val_add, ":selected_banner", ":page_adder"),
					(store_add, ":selected_banner_map_icon", ":selected_banner", banner_map_icons_begin),
					(party_set_banner_icon, "p_main_party", ":selected_banner_map_icon"),
					(store_add, ":selected_banner_spr", ":selected_banner", banner_scene_props_begin),
					(troop_set_slot, "trp_player", slot_troop_banner_scene_prop, ":selected_banner_spr"),

					#Correcting banners according to the player banner
					#(assign, ":end_cond", active_npcs_end),
					#(try_for_range, ":cur_troop", original_kingdom_heroes_begin, ":end_cond"),
					#  (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
					#  (str_store_troop_name, s7, ":cur_troop"),
					#  (display_message, "@DEBUGS : {s7}'s banner is changed"),
					#  (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
					#  (assign, ":end_cond", 0),
					#(try_end),

					(presentation_set_duration, 0),
					#(assign, ":troop_to_change", 0),
					#(assign, ":end_cond", active_npcs_end),
					# (try_for_range, ":cur_troop", active_npcs_begin, ":end_cond"),
						# (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
						# (assign, ":troop_to_change", ":cur_troop"),
						# (assign, ":end_cond", 0),
						# (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
						# (troop_get_slot, ":cur_party", ":cur_troop", slot_troop_leaded_party),
						# (gt, ":cur_party", 0),
						# (party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),
					# (try_end),
					(try_for_range, ":cur_center", walled_centers_begin, walled_centers_end),
						(try_begin),
							(party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
							(party_set_banner_icon, ":cur_center", ":selected_banner_map_icon"),
						# (else_try),
							# (party_slot_eq, ":cur_center", slot_town_lord, ":troop_to_change"),
							# (party_set_banner_icon, ":cur_center", banner_map_icons_end_minus_one),
						(try_end),
					(try_end),
				(try_end),
				]),
			(ti_on_presentation_run,
			 [(try_begin),
					(this_or_next|key_clicked, key_space),
					(this_or_next|key_clicked, key_enter),
					(this_or_next|key_clicked, key_escape),
					(this_or_next|key_clicked, key_back_space),
			(this_or_next|key_clicked, key_xbox_ltrigger),
					(key_clicked, key_xbox_rtrigger),
					(presentation_set_duration, 0),
				(try_end),

				]),
		])

marshall_selection = (
	"marshall_selection", 0, mesh_load_window,
	 [
		 (ti_on_presentation_load,
			[
				(assign, "$g_presentation_obj_marshall_selection_1", -1),
				(assign, "$g_presentation_obj_marshall_selection_2", -1),
				(assign, "$g_presentation_obj_marshall_selection_3", -1),
				(set_fixed_point_multiplier, 1000),
				(assign, "$g_presentation_next_presentation", -1),

				(store_add, ":total_renown", "$g_presentation_marshall_selection_max_renown_1", "$g_presentation_marshall_selection_max_renown_2"),
				(faction_get_slot, ":king", "$players_kingdom", slot_faction_leader),

				(str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
				(create_text_overlay, reg1, "@Candidate #1: {s1}", tf_center_justify),
				(position_set_x, pos1, 200),
				(position_set_y, pos1, 600),
				(overlay_set_position, reg1, pos1),
				(str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
				(create_text_overlay, reg1, "@Candidate #2: {s1}", tf_center_justify),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 600),
				(overlay_set_position, reg1, pos1),
				(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_1_troop"),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 500),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 100),
				(position_set_y, pos1, 300),
				(overlay_set_position, reg1, pos1),
				(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_2_troop"),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 500),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 700),
				(position_set_y, pos1, 300),
				(overlay_set_position, reg1, pos1),

				(assign, ":lord_index", "$g_presentation_input"),
				(val_add, "$g_presentation_input", 1),

				(try_begin),
					(lt, ":lord_index", 0),
					(str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
					(str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
					(str_store_troop_name, s3, ":king"),
					(str_store_faction_name, s4, "$players_kingdom"),
					(create_text_overlay, reg1, "@{s3} of {s4} wishes to select a new marshall and invites his vassals for a counsel. {s1} and {s2} are the likely candidates.", tf_center_justify),
					(position_set_x, pos1, 500),
					(position_set_y, pos1, 200),
					(overlay_set_position, reg1, pos1),

					(create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
					(position_set_x, pos1, 500),
					(position_set_y, pos1, 100),
					(overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
					(assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),
				(else_try),
					(assign, ":cur_index", ":lord_index"),
					(try_for_range_backwards, ":loop_var", "trp_kingdom_heroes_including_player_begin", active_npcs_end),
						(ge, ":cur_index", 0),
						(assign, ":cur_troop", ":loop_var"),
						(assign, ":continue", 0),
						(try_begin),
							(eq, ":loop_var", "trp_kingdom_heroes_including_player_begin"),
							(assign, ":cur_troop", "trp_player"),
							(try_begin),
								(eq, "$g_player_is_captive", 0),
								(assign, ":continue", 1),
							(try_end),
						(else_try),
							(store_troop_faction, ":cur_troop_faction", ":cur_troop"),
							(eq, "$players_kingdom", ":cur_troop_faction"),
							#(troop_slot_eq, ":cur_troop", slot_troop_is_prisoner, 0),
							(neg|troop_slot_ge, ":cur_troop", slot_troop_prisoner_of_party, 0),
							(troop_slot_ge, ":cur_troop", slot_troop_leaded_party, 1),
							(troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
							(neg|faction_slot_eq, ":cur_troop_faction", slot_faction_leader, ":cur_troop"),
							(assign, ":continue", 1),
						(try_end),
						(eq, ":continue", 1),

						(neq, "$g_presentation_marshall_selection_max_renown_1_troop", ":cur_troop"),
						(neq, "$g_presentation_marshall_selection_max_renown_2_troop", ":cur_troop"),

						(val_sub, ":cur_index", 1),
						(lt, ":cur_index", 0),

						(assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),

						(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", ":cur_troop"),
						(position_set_x, pos1, 300),
						(position_set_y, pos1, 300),
						(overlay_set_size, reg1, pos1),
						(position_set_x, pos1, 440),
						(position_set_y, pos1, 400),
						(overlay_set_position, reg1, pos1),

						(try_begin),
							(eq, ":cur_troop", "trp_player"),
							(create_text_overlay, reg1, "@Who do you wish to support?", tf_center_justify),
							(position_set_x, pos1, 500),
							(position_set_y, pos1, 200),
							(overlay_set_position, reg1, pos1),
							(str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
							(create_button_overlay, "$g_presentation_obj_marshall_selection_2", "@{!}{s1}", tf_center_justify),
							(position_set_x, pos1, 300),
							(position_set_y, pos1, 100),
							(overlay_set_position, "$g_presentation_obj_marshall_selection_2", pos1),
							(str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
							(create_button_overlay, "$g_presentation_obj_marshall_selection_3", "@{!}{s1}", tf_center_justify),
							(position_set_x, pos1, 700),
							(position_set_y, pos1, 100),
							(overlay_set_position, "$g_presentation_obj_marshall_selection_3", pos1),
						(else_try),
							(str_store_troop_name, s1, ":cur_troop"),
							(store_random_in_range, ":random_renown", 0, ":total_renown"),
							(val_sub, ":random_renown", "$g_presentation_marshall_selection_max_renown_1"),
							(try_begin),
								(lt, ":random_renown", 0),
								(val_add, "$g_presentation_marshall_selection_1_vote", 1),
								(str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_1_troop"),
							(else_try),
								(val_add, "$g_presentation_marshall_selection_2_vote", 1),
								(str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
							(try_end),
							(create_text_overlay, reg1, "@{s1} gives his support to {s2}.", tf_center_justify),
							(position_set_x, pos1, 500),
							(position_set_y, pos1, 200),
							(overlay_set_position, reg1, pos1),

							(create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
							(position_set_x, pos1, 500),
							(position_set_y, pos1, 100),
							(overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
						(try_end),
					(try_end),
				(try_end),

				(assign, reg0, "$g_presentation_marshall_selection_1_vote"),
				(create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
				(position_set_x, pos1, 200),
				(position_set_y, pos1, 550),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, "$g_presentation_marshall_selection_2_vote"),
				(create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 550),
				(overlay_set_position, reg1, pos1),

				(try_begin),
					(lt, "$g_presentation_next_presentation", 0),
					(try_begin),
						(gt, "$g_presentation_marshall_selection_2_vote", "$g_presentation_marshall_selection_1_vote"),
						(assign, ":local_temp", "$g_presentation_marshall_selection_max_renown_1_troop"),
						(assign, "$g_presentation_marshall_selection_max_renown_1_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
						(assign, "$g_presentation_marshall_selection_max_renown_2_troop", ":local_temp"),
					(try_end),
					#Winner is set to g_presentation_marshall_selection_max_renown_1_troop
					(str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
					(str_store_troop_name, s2, ":king"),
					(str_store_faction_name, s3, "$players_kingdom"),
					(create_text_overlay, reg1, "@{s2} has heard his vassals' counsel. He selects {s1} as the marshall of {s3}.", tf_center_justify),
					(position_set_x, pos1, 500),
					(position_set_y, pos1, 200),
					(overlay_set_position, reg1, pos1),
					(create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
					(position_set_x, pos1, 500),
					(position_set_y, pos1, 100),
					(overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
				(try_end),

				(presentation_set_duration, 999999),
				]),
		 (ti_on_presentation_event_state_change,
			[
				(store_trigger_param_1, ":object"),
				(try_begin),
					(eq, ":object", "$g_presentation_obj_marshall_selection_2"),
					(val_add, "$g_presentation_marshall_selection_1_vote", 1),
					(call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", 2),
					(call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -2),
				(else_try),
					(eq, ":object", "$g_presentation_obj_marshall_selection_3"),
					(val_add, "$g_presentation_marshall_selection_2_vote", 1),
					(call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", -2),
					(call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", 2),
				(try_end),
				(try_begin),
					(this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_1"),
					(this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_2"),
					(eq, ":object", "$g_presentation_obj_marshall_selection_3"),
					(try_begin),
						(ge, "$g_presentation_next_presentation", 0),
						(start_presentation, "$g_presentation_next_presentation"),
					(else_try),
						(try_begin),
							(neg|faction_slot_eq, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
							(call_script, "script_check_and_finish_active_army_quests_for_faction", "$players_kingdom"),
						(try_end),

					 (faction_get_slot, ":old_marshall", "$players_kingdom", slot_faction_marshall),
					 (try_begin),
						 (ge, ":old_marshall", 0),
						 (party_is_active, ":old_marshall"),
						 (party_set_marshall, ":old_marshall", 0),
					 (try_end),

						(faction_set_slot, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
						(try_begin),
							(eq, "$g_presentation_marshall_selection_max_renown_1_troop", "trp_player"),
							(call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -3),
						(try_end),
						(assign, "$g_recalculate_ais", 1),
						(assign, "$g_presentation_marshall_selection_ended", 1),
						(presentation_set_duration, 0),
					(try_end),
				(try_end),
				]),
		 ])

retirement = (
	"retirement", 0, mesh_load_window,
	 [
		 (ti_on_presentation_load,
			[
				(presentation_set_duration, 999999),
				(set_fixed_point_multiplier, 1000),
				(create_button_overlay, "$g_presentation_obj_retirement_1", "@Remain in retirement.", tf_center_justify),
				(create_button_overlay, "$g_presentation_obj_retirement_2", "@Go back to the adventuring.", tf_center_justify),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 80),
				(overlay_set_position, "$g_presentation_obj_retirement_1", pos1),
				(position_set_y, pos1, 40),
				(overlay_set_position, "$g_presentation_obj_retirement_2", pos1),
				(assign, ":total_effect", 0),
				#wealth
				(store_troop_gold, ":wealth", "trp_player"),
				(store_div, ":wealth_effect", ":wealth", 200),
				(val_add, ":total_effect", ":wealth_effect"),
				#ruled centers and friendly/enemy centers
				(assign, ":num_towns", 0),
				(assign, ":num_castles", 0),
				(assign, ":num_villages", 0),
				(assign, ":num_friendly_towns", 0),
				(assign, ":num_friendly_villages", 0),
				(assign, ":num_enemy_towns", 0),
				(assign, ":num_enemy_villages", 0),
				(try_for_range, ":center_no", centers_begin, centers_end),
					(party_get_slot, ":type", ":center_no", slot_party_type),
					(try_begin),
						(party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
						(try_begin),
							(eq, ":type", spt_town),
							(val_add, ":num_towns", 1),
						(else_try),
							(eq, ":type", spt_castle),
							(val_add, ":num_castles", 1),
						(else_try),
							(val_add, ":num_villages", 1),
						(try_end),
					(try_end),
					(party_get_slot, ":relation", ":center_no", slot_center_player_relation),
					(try_begin),
						(ge, ":relation", 40),
						(try_begin),
							(eq, ":type", spt_town),
							(val_add, ":num_friendly_towns", 1),
						(else_try),
							(eq, ":type", spt_village),
							(val_add, ":num_friendly_villages", 1),
						(try_end),
					(else_try),
						(le, ":relation", -40),
						(try_begin),
							(eq, ":type", spt_town),
							(val_add, ":num_enemy_towns", 1),
						(else_try),
							(eq, ":type", spt_village),
							(val_add, ":num_enemy_villages", 1),
						(try_end),
					(try_end),
				(try_end),
				(store_mul, ":num_towns_effect", ":num_towns", 100),
				(store_mul, ":num_castles_effect", ":num_castles", 50),
				(store_mul, ":num_villages_effect", ":num_villages", 20),
				(store_add, ":num_centers", ":num_towns", ":num_castles"),
				(val_add, ":num_centers", ":num_villages"),
				(store_add, ":ruled_centers_effect", ":num_towns_effect", ":num_castles_effect"),
				(val_add, ":ruled_centers_effect", ":num_villages_effect"),
				(val_add, ":total_effect", ":ruled_centers_effect"),
				(store_mul, ":num_friendly_towns_effect", ":num_friendly_towns", 20),
				(store_mul, ":num_friendly_villages_effect", ":num_friendly_villages", 4),
				(store_add, ":num_friendly_centers", ":num_friendly_towns", ":num_friendly_villages"),
				(store_add, ":friendly_centers_effect", ":num_friendly_towns_effect", ":num_friendly_villages_effect"),
				(val_add, ":total_effect", ":friendly_centers_effect"),
				(store_mul, ":num_enemy_towns_effect", ":num_enemy_towns", -40),
				(store_mul, ":num_enemy_villages_effect", ":num_enemy_villages", -8),
				(store_add, ":num_enemy_centers", ":num_enemy_towns", ":num_enemy_villages"),
				(store_add, ":enemy_centers_effect", ":num_enemy_towns_effect", ":num_enemy_villages_effect"),
				(val_add, ":total_effect", ":enemy_centers_effect"),
				#inventory
				(assign, ":total_item_value", 0),
				(troop_get_inventory_capacity, ":capacity", "trp_player"),
				(try_for_range, ":i_inv", 0, ":capacity"),
					(troop_get_inventory_slot, ":item", "trp_player", ":i_inv"),
					(ge, ":item", 0),
					(store_item_value, ":item_value", ":item"),
					(val_add, ":total_item_value", ":item_value"),
				(try_end),
				(store_div, ":total_item_value_effect", ":total_item_value", 200),
				(val_add, ":total_effect", ":total_item_value_effect"),
				#renown
				(troop_get_slot, ":renown", "trp_player", slot_troop_renown),
				(store_div, ":renown_effect", ":renown", 1),
				(val_add, ":total_effect", ":renown_effect"),
				#enemies and friends
				(assign, ":num_enemies", 0),
				(assign, ":num_friends", 0),
				(try_for_range, ":troop_no", heroes_begin, heroes_end),
					(this_or_next|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
					(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_lady),
					(call_script, "script_troop_get_player_relation", ":troop_no"),
					(assign, ":relation", reg0),
					#(troop_get_slot, ":relation", ":troop_no", slot_troop_player_relation),
					(try_begin),
						(ge, ":relation", 40),
						(val_add, ":num_friends", 1),
					(else_try),
						(le, ":relation", -40),
						(val_add, ":num_enemies", 1),
					(try_end),
				(try_end),
				(store_mul, ":num_friends_effect", ":num_friends", 10),
				(val_add, ":total_effect", ":num_friends_effect"),
				(store_mul, ":num_enemies_effect", ":num_enemies", -10),
				(val_add, ":total_effect", ":num_enemies_effect"),
				#current day
				(store_current_day, ":cur_day"),
				(store_div, ":cur_day_effect", ":cur_day", -1),
				(val_add, ":total_effect", ":cur_day_effect"),
				#g_total_victories
				(store_mul, ":total_victories_effect", "$g_total_victories", 2),
				(val_add, ":total_effect", ":total_victories_effect"),
				#g_total_defeats
				(store_mul, ":total_defeats_effect", "$g_total_defeats", -3),
				(val_add, ":total_effect", ":total_defeats_effect"),
				#g_total_quests_completed
				(store_mul, ":total_quests_completed_effect", "$g_total_quests_completed", 4),
				(val_add, ":total_effect", ":total_quests_completed_effect"),
				#xp
				(troop_get_xp, ":xp", "trp_player"),
				(store_div, ":xp_effect", ":xp", 5000),
				(val_add, ":total_effect", ":xp_effect"),
				#companions joined / departed
				(assign, ":num_companions_joined", 0),
				(assign, ":num_companions_departed", 0),
				(try_for_range, ":troop_no", companions_begin, companions_end),
					(try_begin),
						(troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
						(val_add, ":num_companions_joined", 1),
					(else_try),
						(troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
						(val_add, ":num_companions_departed", 1),
					(try_end),
				(try_end),
				(store_div, ":num_companions_joined_effect", ":num_companions_joined", 2),
				(val_add, ":total_effect", ":num_companions_joined_effect"),
				(store_div, ":num_companions_departed_effect", ":num_companions_departed", -4),
				(val_add, ":total_effect", ":num_companions_departed_effect"),
				#difficulty
				(get_average_game_difficulty, ":difficulty"),
				(assign, ":difficulty_effect", ":total_effect"),
				(val_mul, ":total_effect", ":difficulty"),
				(val_div, ":total_effect", 75),
				(val_mul, ":total_effect", ":difficulty"),
				(val_div, ":total_effect", 75),
				(store_sub, ":difficulty_effect", ":total_effect", ":difficulty_effect"),

				(assign, reg5, ":cur_day"),
				(store_character_level, reg4, "trp_player"),
				(create_text_overlay, reg1, "@You have retired at level {reg4} after {reg5} days of adventuring.", tf_center_justify),
				(position_set_x, pos1, 700),
				(position_set_y, pos1, 700),
				(overlay_set_position, reg1, pos1),
				(position_set_x, pos1, 950),
				(position_set_y, pos1, 950),
				(overlay_set_size, reg1, pos1),
##        (overlay_set_color, reg1, 0),
				(create_text_overlay, reg2, "@Effect on Score", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg2, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 670),
				(overlay_set_position, reg2, pos1),
				(assign, reg0, ":num_centers"),
				(create_text_overlay, reg1, "@Settlements owned by you: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 650),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":ruled_centers_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 650),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":num_friendly_centers"),
				(create_text_overlay, reg1, "@Friendly Settlements: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 630),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":friendly_centers_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 630),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":num_enemy_centers"),
				(create_text_overlay, reg1, "@Hostile Settlements: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 610),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":enemy_centers_effect"),
				(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 610),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(lt, reg0, 0),
					(overlay_set_color, reg1, 0xFF0000),
				(try_end),

				(assign, reg0, ":num_friends"),
				(create_text_overlay, reg1, "@Friendly Lords: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 590),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":num_friends_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 590),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":num_enemies"),
				(create_text_overlay, reg1, "@Enemy Lords: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 570),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":num_enemies_effect"),
				(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 570),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(lt, reg0, 0),
					(overlay_set_color, reg1, 0xFF0000),
				(try_end),

				(assign, reg0, "$g_total_victories"),
				(create_text_overlay, reg1, "@Victories: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 550),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":total_victories_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 550),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, "$g_total_defeats"),
				(create_text_overlay, reg1, "@Defeats: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 530),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":total_defeats_effect"),
				(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 530),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(lt, reg0, 0),
					(overlay_set_color, reg1, 0xFF0000),
				(try_end),

				(assign, reg0, "$g_total_quests_completed"),
				(create_text_overlay, reg1, "@Quests Completed: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 510),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":total_quests_completed_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 510),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":num_companions_joined"),
				(create_text_overlay, reg1, "@Companions Found: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 490),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":num_companions_joined_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 490),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":num_companions_departed"),
				(create_text_overlay, reg1, "@Companions Lost/Departed: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 470),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":num_companions_departed_effect"),
				(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 470),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(lt, reg0, 0),
					(overlay_set_color, reg1, 0xFF0000),
				(try_end),

				(assign, reg0, ":wealth"),
				(create_text_overlay, reg1, "@Wealth: {reg0} denars", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 450),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":wealth_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 450),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":total_item_value"),
				(create_text_overlay, reg1, "@Inventory: {reg0} denars", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 430),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":total_item_value_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 430),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":renown"),
				(create_text_overlay, reg1, "@Renown: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 410),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":renown_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 410),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":xp"),
				(create_text_overlay, reg1, "@Experience: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 390),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":xp_effect"),
				(create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 390),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(try_end),

				(assign, reg0, ":cur_day"),
				(create_text_overlay, reg1, "@Days Passed: {reg0}", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 370),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":cur_day_effect"),
				(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 370),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(lt, reg0, 0),
					(overlay_set_color, reg1, 0xFF0000),
				(try_end),

				(assign, reg0, ":difficulty"),
				(create_text_overlay, reg1, "@Difficulty: {reg0}%", 0),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 350),
				(overlay_set_position, reg1, pos1),
				(assign, reg0, ":difficulty_effect"),
				(assign, reg3, reg0),
				(val_max, reg3, 0),
				(create_text_overlay, reg1, "@{!}{reg3?+:}{reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg1, pos1),
				(position_set_x, pos1, 850),
				(position_set_y, pos1, 350),
				(overlay_set_position, reg1, pos1),
				(try_begin),
					(gt, reg0, 0),
					(overlay_set_color, reg1, 0x00AA00),
				(else_try),
					(lt, reg0, 0),
					(overlay_set_color, reg1, 0xFF0000),
				(try_end),

				(assign, reg0, ":total_effect"),
				(create_text_overlay, reg1, "@TOTAL SCORE: {reg0}", tf_center_justify),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 320),
				(overlay_set_position, reg1, pos1),

				(assign, ":total_villages", 0),
				(assign, ":total_castles", 0),
				(assign, ":total_towns", 0),
				(assign, ":total_village_rels", 0),
				(assign, ":total_castle_rels", 0),
				(assign, ":total_town_rels", 0),
				(try_for_range, ":cur_center_no", centers_begin, centers_end),
					(try_begin),
						(party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
						(try_begin),
							(party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
							(val_add, ":total_towns", 1),
						(else_try),
							(party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
							(val_add, ":total_castles", 1),
						(else_try),
							(val_add, ":total_villages", 1),
						(try_end),
					(else_try),
						(party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
						(gt, ":center_relation", 0),
						(try_begin),
							(party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
							(val_add, ":total_town_rels", ":center_relation"),
						(else_try),
							(party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
							(val_add, ":total_castle_rels", ":center_relation"),
						(else_try),
							(val_add, ":total_village_rels", ":center_relation"),
						(try_end),
					(try_end),
				(try_end),
				(try_begin),
					(gt, ":total_towns", 0),
					(store_random_in_range, ":random_town", 0, ":total_towns"),
					(try_for_range, ":cur_center_no", towns_begin, towns_end),
						(party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
						(val_sub, ":random_town", 1),
						(lt, ":random_town", 0),
						(str_store_party_name, s9, ":cur_center_no"),
					(try_end),
				(else_try),
					(gt, ":total_town_rels", 0),
					(store_random_in_range, ":random_town_rel", 0, ":total_town_rels"),
					(try_for_range, ":cur_center_no", towns_begin, towns_end),
						(party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
						(gt, ":center_relation", 0),
						(val_sub, ":random_town_rel", ":center_relation"),
						(lt, ":random_town_rel", 0),
						(str_store_party_name, s9, ":cur_center_no"),
					(try_end),
				(else_try),
					(store_random_in_range, ":random_town", towns_begin, towns_end),
					(str_store_party_name, s9, ":random_town"),
				(try_end),
				(try_begin),
					(gt, ":total_castles", 0),
					(store_random_in_range, ":random_castle", 0, ":total_castles"),
					(try_for_range, ":cur_center_no", castles_begin, castles_end),
						(party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
						(val_sub, ":random_castle", 1),
						(lt, ":random_castle", 0),
						(str_store_party_name, s8, ":cur_center_no"),
					(try_end),
				(else_try),
					(gt, ":total_castle_rels", 0),
					(store_random_in_range, ":random_castle_rel", 0, ":total_castle_rels"),
					(try_for_range, ":cur_center_no", castles_begin, castles_end),
						(party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
						(gt, ":center_relation", 0),
						(val_sub, ":random_castle_rel", ":center_relation"),
						(lt, ":random_castle_rel", 0),
						(str_store_party_name, s8, ":cur_center_no"),
					(try_end),
				(else_try),
					(store_random_in_range, ":random_castle", castles_begin, castles_end),
					(str_store_party_name, s8, ":random_castle"),
				(try_end),
				(try_begin),
					(gt, ":total_villages", 0),
					(store_random_in_range, ":random_village", 0, ":total_villages"),
					(try_for_range, ":cur_center_no", villages_begin, villages_end),
						(party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
						(val_sub, ":random_village", 1),
						(lt, ":random_village", 0),
						(str_store_party_name, s7, ":cur_center_no"),
					(try_end),
				(else_try),
					(gt, ":total_village_rels", 0),
					(store_random_in_range, ":random_village_rel", 0, ":total_village_rels"),
					(try_for_range, ":cur_center_no", villages_begin, villages_end),
						(party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
						(gt, ":center_relation", 0),
						(val_sub, ":random_village_rel", ":center_relation"),
						(lt, ":random_village_rel", 0),
						(str_store_party_name, s7, ":cur_center_no"),
					(try_end),
				(else_try),
					(store_random_in_range, ":random_village", villages_begin, villages_end),
					(str_store_party_name, s7, ":random_village"),
				(try_end),

				(try_begin),
					(lt, ":total_effect", 100),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 0),
					(str_store_string, s0, "str_retirement_text_1"),
				(else_try),
					(lt, ":total_effect", 200),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 1),
					(str_store_string, s0, "str_retirement_text_2"),
				(else_try),
					(lt, ":total_effect", 400),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 2),
					(str_store_string, s0, "str_retirement_text_3"),
				(else_try),
					(lt, ":total_effect", 700),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 3),
					(str_store_string, s0, "str_retirement_text_4"),
				(else_try),
					(lt, ":total_effect", 1200),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 4),
					(str_store_string, s0, "str_retirement_text_5"),
				(else_try),
					(lt, ":total_effect", 1850),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 5),
					(str_store_string, s0, "str_retirement_text_6"),
				(else_try),
					(lt, ":total_effect", 2500),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 6),
					(str_store_string, s0, "str_retirement_text_7"),
				(else_try),
					(lt, ":total_effect", 3500),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 7),
					(str_store_string, s0, "str_retirement_text_8"),
				(else_try),
					(lt, ":total_effect", 5000),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 8),
					(str_store_string, s0, "str_retirement_text_9"),
				(else_try),
					(create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 9),
					(str_store_string, s0, "str_retirement_text_10"),
				(try_end),
				(position_set_x, pos1, 0),
				(position_set_y, pos1, 120),
				(overlay_set_position, reg1, pos1),

				(create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
				(position_set_x, pos1, 600),
				(position_set_y, pos1, 120),
				(overlay_set_position, reg1, pos1),
				(position_set_x, pos1, 360),
				(position_set_y, pos1, 190),
				(overlay_set_area_size, reg1, pos1),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg1, pos1),
				]),
		 (ti_on_presentation_event_state_change,
			[
				(store_trigger_param_1, ":object"),
				(try_begin),
					(eq, ":object", "$g_presentation_obj_retirement_1"),
					(jump_to_menu, "mnu_end_game"),
					(start_presentation, "prsnt_game_credits"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_retirement_2"),
					(presentation_set_duration, 0),
					(change_screen_return),
				(try_end),
				]),
		 ])

faction_selection = (
	"faction_selection",0,mesh_load_window,[
			(ti_on_presentation_load,
			 [

				# (try_begin),
					# (this_or_next | lt, "$g_start_faction", 0),
					# (this_or_next | lt, "$g_start_faction", npc_kingdoms_begin),
					# (ge, "$g_start_faction", npc_kingdoms_end),
					# (assign, "$g_start_faction", npc_kingdoms_begin),
				# (try_end),
		##tom
		(try_begin),
			(lt, "$g_start_faction", 0),
			(assign, "$g_start_faction", npc_kingdoms_begin),
		(else_try),
			(lt, "$g_start_faction", npc_kingdoms_begin),
			(store_sub, ":fac_end", npc_kingdoms_end, 1),
			(assign, "$g_start_faction", ":fac_end"),
		(else_try),
			(ge, "$g_start_faction", npc_kingdoms_end),
			(assign, "$g_start_faction", npc_kingdoms_begin),
		(try_end),
		##tom

				(store_sub, ":faction_index", "$g_start_faction", npc_kingdoms_begin),

				(set_fixed_point_multiplier, 1000),
				(str_store_faction_name, s1, "$g_start_faction"),
				(create_text_overlay, reg1, s1, tf_center_justify),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 625),
				(overlay_set_position, reg1, pos1),
				(overlay_set_text, reg1, s1),


				(create_game_button_overlay, "$g_presentation_obj_faction_selection_2", "@Next"),
				(position_set_x, pos1, 900),
				(position_set_y, pos1, 60),
				(overlay_set_position, "$g_presentation_obj_faction_selection_2", pos1),

				(create_game_button_overlay, "$g_presentation_obj_faction_selection_3", "@Previous"),
				(position_set_x, pos1, 100),
				(position_set_y, pos1, 60),
				(overlay_set_position, "$g_presentation_obj_faction_selection_3", pos1),

				(create_game_button_overlay, "$g_presentation_obj_faction_selection_4", "@Accept"),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 50),
				(overlay_set_position, "$g_presentation_obj_faction_selection_4", pos1),

				(store_add, "$g_presentation_banner_start", "$g_presentation_obj_banner_selection_1", 1),

				(store_add, ":cur_mesh", "mesh_pic_arms_teutonic", ":faction_index"),
				(create_mesh_overlay, reg1, ":cur_mesh"),
				(position_set_x, pos1, 500),
				(position_set_y, pos1, 350),
				(overlay_set_position, reg1, pos1),

				(presentation_set_duration, 999999),
				]),
			(ti_on_presentation_event_state_change,
			 [(store_trigger_param_1, ":object"),
				(try_begin),
					(eq, ":object", "$g_presentation_obj_faction_selection_2"),
					(val_add, "$g_start_faction", 1),
					(start_presentation, "prsnt_faction_selection"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_faction_selection_3"),
					(val_sub, "$g_start_faction", 1),
					(start_presentation, "prsnt_faction_selection"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_faction_selection_4"),
					(presentation_set_duration, 0),
					(jump_to_menu,"mnu_choose_skill"),
				(try_end),
				]),
			(ti_on_presentation_run,
			 [
				]),
			])


character_creation1 =	(
	"character_creation1", 0, mesh_load_window, [
		(ti_on_presentation_load,
			[
				(presentation_set_duration, 999999),
				(set_fixed_point_multiplier, 1000),
		
		
			]),

		(ti_on_presentation_event_state_change,
			[
				(store_trigger_param_1, ":object"),
				(store_trigger_param_2, ":value"),

				(try_begin),
					(eq, ":object", "$g_presentation_obj_20"),
					(presentation_set_duration, 0),
				(try_end),
			]),
		])