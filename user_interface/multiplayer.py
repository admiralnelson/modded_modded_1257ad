from header import *

multiplayer_item_select = (
	"multiplayer_item_select", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),
			(multiplayer_get_my_player, ":my_player_no"),

			(assign, "$g_presentation_obj_item_select_1", -1),
			(assign, "$g_presentation_obj_item_select_2", -1),
			(assign, "$g_presentation_obj_item_select_3", -1),
			(assign, "$g_presentation_obj_item_select_4", -1),
			(assign, "$g_presentation_obj_item_select_5", -1),
			(assign, "$g_presentation_obj_item_select_6", -1),
			(assign, "$g_presentation_obj_item_select_7", -1),
			(assign, "$g_presentation_obj_item_select_8", -1),
			(assign, "$g_presentation_obj_item_select_9", -1),
			(assign, "$g_presentation_obj_item_select_10", -1),
			(assign, "$g_presentation_obj_item_select_11", -1),
			(assign, "$g_presentation_obj_item_select_12", -1),
			(assign, "$g_presentation_obj_item_select_13", -1),
			(assign, "$g_presentation_obj_item_select_14", -1),
			(assign, "$g_presentation_obj_item_select_15", -1),
			(assign, "$g_presentation_obj_item_select_16", -1),

			(try_begin),
				(neq, "$g_current_opened_item_details", -1),
				(close_item_details),
				(assign, "$g_current_opened_item_details", -1),
			(try_end),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 950),
				(position_set_y, pos1, 526),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_1", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_1", pos1),
			(position_set_x, pos1, 899),
			(position_set_y, pos1, 475),
			(overlay_set_position, "$g_presentation_obj_item_select_1", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 950),
				(position_set_y, pos1, 426),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_2", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_2", pos1),
			(position_set_x, pos1, 899),
			(position_set_y, pos1, 375),
			(overlay_set_position, "$g_presentation_obj_item_select_2", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 950),
				(position_set_y, pos1, 326),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_3", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_3", pos1),
			(position_set_x, pos1, 899),
			(position_set_y, pos1, 275),
			(overlay_set_position, "$g_presentation_obj_item_select_3", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 950),
				(position_set_y, pos1, 226),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_4", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_4", pos1),
			(position_set_x, pos1, 899),
			(position_set_y, pos1, 175),
			(overlay_set_position, "$g_presentation_obj_item_select_4", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 53),
				(position_set_y, pos1, 576),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_5", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_helmet", "mesh_mp_inventory_slot_helmet"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_5", pos1),
			(position_set_x, pos1, 2),
			(position_set_y, pos1, 525),
			(overlay_set_position, "$g_presentation_obj_item_select_5", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 53),
				(position_set_y, pos1, 476),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_6", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_armor", "mesh_mp_inventory_slot_armor"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_6", pos1),
			(position_set_x, pos1, 2),
			(position_set_y, pos1, 425),
			(overlay_set_position, "$g_presentation_obj_item_select_6", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 53),
				(position_set_y, pos1, 376),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_7", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_boot", "mesh_mp_inventory_slot_boot"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_7", pos1),
			(position_set_x, pos1, 2),
			(position_set_y, pos1, 325),
			(overlay_set_position, "$g_presentation_obj_item_select_7", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 53),
				(position_set_y, pos1, 276),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_8", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_glove", "mesh_mp_inventory_slot_glove"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_8", pos1),
			(position_set_x, pos1, 2),
			(position_set_y, pos1, 225),
			(overlay_set_position, "$g_presentation_obj_item_select_8", pos1),

			(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
			(player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
			(try_begin),
				(ge, ":selected_item_id", 0),
				(eq, "$g_horses_are_avaliable", 1),
				(create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
				(create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
				(position_set_x, pos1, 53),
				(position_set_y, pos1, 176),
				(overlay_set_position, reg0, pos1),
				(assign, "$g_inside_obj_9", reg0),
			(else_try),
				(create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_horse", "mesh_mp_inventory_slot_horse"),
			(try_end),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, "$g_presentation_obj_item_select_9", pos1),
			(position_set_x, pos1, 2),
			(position_set_y, pos1, 125),
			(overlay_set_position, "$g_presentation_obj_item_select_9", pos1),

			(create_mesh_overlay, reg0, "mesh_mp_inventory_left"),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, reg0, pos1),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, 14),
			(overlay_set_position, reg0, pos1),

			(create_mesh_overlay, reg0, "mesh_mp_inventory_right"),
			(position_set_x, pos1, 800),
			(position_set_y, pos1, 800),
			(overlay_set_size, reg0, pos1),
			(position_set_x, pos1, 894),
			(position_set_y, pos1, 65),
			(overlay_set_position, reg0, pos1),

			(create_in_game_button_overlay, "$g_presentation_obj_item_select_10", "str_reset_to_default", 0),
			(overlay_set_color, "$g_presentation_obj_item_select_10", 0xFFFFFF),
			(position_set_x, pos1, 605),
			(position_set_y, pos1, 25),
			(overlay_set_position, "$g_presentation_obj_item_select_10", pos1),

			(create_in_game_button_overlay, "$g_presentation_obj_item_select_11", "str_done", 0),
			(overlay_set_color, "$g_presentation_obj_item_select_11", 0xFFFFFF),
			(position_set_x, pos1, 395),
			(position_set_y, pos1, 25),
			(overlay_set_position, "$g_presentation_obj_item_select_11", pos1),

			(assign, ":cur_y", 725),
			(multiplayer_get_my_player, ":my_player_no"),
			(player_get_team_no, ":my_team_no", ":my_player_no"),
			(assign, ":has_bots", 0),
			(try_begin),
				(eq, ":my_team_no", 0),
				(try_begin),
					(gt, "$g_multiplayer_num_bots_team_1", 0),
					(assign, ":has_bots", 1),
				(try_end),
			(else_try),
				(try_begin),
					(gt, "$g_multiplayer_num_bots_team_2", 0),
					(assign, ":has_bots", 1),
				(try_end),
			(try_end),
			(team_get_faction, ":my_faction_no", ":my_team_no"),

			(try_begin),
				(eq, ":has_bots", 1),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
				(neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),

				(assign, ":num_lines", 0),
				(try_begin),
					(eq, ":has_bots", 1),
					(try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
						(store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
						(eq, ":ai_troop_faction", ":my_faction_no"),
						(val_add, ":num_lines", 1),
					(try_end),
				(try_end),

				(store_mul, ":board_height", ":num_lines", 20),
				(val_add, ":board_height", 40),

				(create_mesh_overlay, reg0, "mesh_mp_ui_command_border_r"),
				(position_set_x, pos1, 280),
				(position_set_y, pos1, 680),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 2500),
				(position_set_y, pos1, 2500),
				(overlay_set_size, reg0, pos1),

				(create_mesh_overlay, reg0, "mesh_mp_ui_command_border_l"),
				(position_set_x, pos1, 650),
				(position_set_y, pos1, 680),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 2500),
				(position_set_y, pos1, 2500),
				(overlay_set_size, reg0, pos1),

				(create_mesh_overlay, reg0, "mesh_mp_ui_command_panel"),
				(position_set_x, pos1, 350),
				(store_sub, ":board_pos_y", 750, ":board_height"),
				(position_set_y, pos1, ":board_pos_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 3000),
				(position_set_y, pos1, 3000),
				(overlay_set_size, reg0, pos1),

				(create_text_overlay, reg0, "str_command", 0),
				(overlay_set_color, reg0, 0xFFFFFF),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 370),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(val_sub, ":cur_y", 20),

				(assign, ":cur_ai_troop_index", 0),
				(try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
					(store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
					(eq, ":ai_troop_faction", ":my_faction_no"),

					(create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
					(position_set_x, pos1, 800),
					(position_set_y, pos1, 800),
					(overlay_set_size, reg0, pos1),
					(position_set_x, pos1, 377),
					(store_add, ":special_cur_y", ":cur_y", 2),
					(position_set_y, pos1, ":special_cur_y"),
					(overlay_set_position, reg0, pos1),
					(try_begin),
						(eq, ":cur_ai_troop_index", 0),
						(overlay_set_val, reg0, "$g_multiplayer_bot_type_1_wanted"),
						(assign, "$g_presentation_obj_item_select_13", reg0),
					(else_try),
						(eq, ":cur_ai_troop_index", 1),
						(overlay_set_val, reg0, "$g_multiplayer_bot_type_2_wanted"),
						(assign, "$g_presentation_obj_item_select_14", reg0),
					(else_try),
						(eq, ":cur_ai_troop_index", 2),
						(overlay_set_val, reg0, "$g_multiplayer_bot_type_3_wanted"),
						(assign, "$g_presentation_obj_item_select_15", reg0),
					(else_try),
						(overlay_set_val, reg0, "$g_multiplayer_bot_type_4_wanted"),
						(assign, "$g_presentation_obj_item_select_16", reg0),
					(try_end),

					(str_store_troop_name, s0, ":ai_troop_no"),
					(create_text_overlay, reg0, "str_s0", 0),
					(overlay_set_color, reg0, 0xFFFFFF),
					(position_set_x, pos1, 800),
					(position_set_y, pos1, 800),
					(overlay_set_size, reg0, pos1),
					(position_set_x, pos1, 397),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(val_sub, ":cur_y", 20),
					(val_add, ":cur_ai_troop_index", 1),
				(try_end),
				(val_sub, ":cur_y", 20),
			(try_end),

			(multiplayer_get_my_player, ":my_player_no"),
			(player_get_gold, ":player_gold", ":my_player_no"),
			(call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
			(create_text_overlay, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0", tf_left_align|tf_single_line|tf_with_outline),
			(try_begin),
				(ge, ":player_gold", reg0),
				(overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
			(else_try),
				(overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
			(try_end),
			(position_set_x, pos1, 680),
			(position_set_y, pos1, 652),
			(overlay_set_position, "$g_presentation_obj_item_select_12", pos1),

			(store_add, "$g_presentation_obj_item_select_next", "$g_presentation_obj_item_select_12", 1),

			(player_get_troop_id, ":my_troop_no", ":my_player_no"),
			(try_begin),
				(eq, "$g_presentation_state", 1),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 474),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 881),
				(position_set_y, pos1, 515),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 2),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 374),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 881),
				(position_set_y, pos1, 415),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 3),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 274),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 881),
				(position_set_y, pos1, 315),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 4),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 174),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 881),
				(position_set_y, pos1, 215),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 5),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_heads_begin, multi_item_class_type_heads_end, 117, 524),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 106),
				(position_set_y, pos1, 565),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 6),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_bodies_begin, multi_item_class_type_bodies_end, 117, 424),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 106),
				(position_set_y, pos1, 465),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 7),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_feet_begin, multi_item_class_type_feet_end, 117, 324),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 106),
				(position_set_y, pos1, 365),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 8),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_gloves_begin, multi_item_class_type_gloves_end, 117, 224),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 106),
				(position_set_y, pos1, 265),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(eq, "$g_presentation_state", 9),
				(eq, "$g_horses_are_avaliable", 1),
				(call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_horses_begin, multi_item_class_type_horses_end, 117, 124),
				(create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
				(position_set_x, pos1, 800),
				(position_set_y, pos1, 800),
				(overlay_set_size, reg0, pos1),
				(position_set_x, pos1, 106),
				(position_set_y, pos1, 165),
				(overlay_set_position, reg0, pos1),
			(try_end),
			(presentation_set_duration, 999999),
			]),

		(ti_on_presentation_mouse_enter_leave,
			 [(store_trigger_param_1, ":object"),
				(store_trigger_param_2, ":enter_leave"),

				(try_begin),
					(eq, "$g_close_equipment_selection", 0),
					(try_begin),
						(eq, ":enter_leave", 0),

						(assign, ":item_no", -1),
						(try_begin),
							(ge, ":object", "$g_presentation_obj_item_select_next"),
							(store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
							(store_mod, ":mod_value", ":tested_object", 2),
							(store_sub, ":mod_value", 1, ":mod_value"),
							(val_div, ":tested_object", 2),
							(store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
							(troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

							(assign, ":target_obj", ":object"),
							(val_add, ":target_obj", ":mod_value"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_1"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_1"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_2"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_2"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_3"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_3"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_4"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_4"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_5"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_5"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_6"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_6"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_7"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_7"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_8"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_8"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_9"),
							(eq, "$g_horses_are_avaliable", 1),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_9"),
						(try_end),

						(try_begin),
							(ge, ":item_no", 0),
							(overlay_get_position, pos0, ":target_obj"),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_troop_id, ":my_player_troop_no", ":my_player_no"),
							(try_begin),
								(call_script, "script_cf_multiplayer_is_item_default_for_troop", ":item_no", ":my_player_troop_no"),
								(show_item_details, ":item_no", pos0, 0),
							(else_try),
								(store_troop_faction, ":my_player_faction_no", ":my_player_troop_no"),
								(store_sub, ":faction_slot", ":my_player_faction_no", npc_kingdoms_begin),
		(val_add, ":faction_slot", slot_item_multiplayer_faction_price_multipliers_begin),
		(item_get_slot, ":price_multiplier", ":item_no", ":faction_slot"),
								(show_item_details, ":item_no", pos0, ":price_multiplier"),
							(try_end),
							(assign, "$g_current_opened_item_details", ":item_no"),
						(try_end),
					(else_try),
						(assign, ":item_no", -1),
						(try_begin),
							(ge, ":object", "$g_presentation_obj_item_select_next"),
							(store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
							(val_div, ":tested_object", 2),
							(store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
							(troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_1"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_1"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_2"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_2"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_3"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_3"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_4"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_4"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_5"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_5"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_6"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_6"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_7"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_7"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_8"),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_8"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_9"),
							(eq, "$g_horses_are_avaliable", 1),
							(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
							(val_sub, ":player_slot_index", 1),
							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
							(assign, ":target_obj", "$g_inside_obj_9"),
						(try_end),

						(try_begin),
							(eq, "$g_current_opened_item_details", ":item_no"),
							(close_item_details),
							(assign, "$g_current_opened_item_details", -1),
						(try_end),
					(try_end),
				(else_try),
					(assign, "$g_close_equipment_selection", 0),
					(presentation_set_duration, 0),
				(try_end),
			]),

		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(store_trigger_param_2, ":value"),
			(multiplayer_get_my_player, ":my_player_no"),
			(player_get_troop_id, ":my_troop_no", ":my_player_no"),

			(try_begin),
				(eq, "$g_close_equipment_selection", 0),
				(try_begin),
					(eq, "$g_presentation_state", 0),
					(try_begin),
						(eq, ":object", "$g_presentation_obj_item_select_1"),
						(assign, "$g_presentation_state", 1),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_2"),
						(assign, "$g_presentation_state", 2),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_3"),
						(assign, "$g_presentation_state", 3),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_4"),
						(assign, "$g_presentation_state", 4),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_5"),
						(assign, "$g_presentation_state", 5),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_6"),
						(assign, "$g_presentation_state", 6),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_7"),
						(assign, "$g_presentation_state", 7),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_8"),
						(assign, "$g_presentation_state", 8),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(else_try),
						(eq, ":object", "$g_presentation_obj_item_select_9"),
						(eq, "$g_horses_are_avaliable", 1),
						(assign, "$g_presentation_state", 9),
						(presentation_set_duration, 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(try_end),
				(else_try),
					(gt, "$g_presentation_state", 0),
					(store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
					(val_div, ":tested_object", 2),
					(assign, ":end_cond", multi_data_item_button_indices_end),
					(try_for_range, ":cur_slot", multi_data_item_button_indices_begin, ":end_cond"),
						(neg|troop_slot_eq, "trp_multiplayer_data", ":cur_slot", -1),
						(store_sub, ":button_id", ":cur_slot", multi_data_item_button_indices_begin),
						(eq, ":tested_object", ":button_id"),
						(troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

						(store_add, ":player_slot_index", slot_player_selected_item_indices_begin, "$g_presentation_state"),
						(val_sub, ":player_slot_index", 1),
						(player_set_slot, ":my_player_no", ":player_slot_index", ":item_no"),

						(player_get_gold, ":player_gold", ":my_player_no"),
						(call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
						(overlay_set_text, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0"),
						(try_begin),
							(ge, ":player_gold", reg0),
							(overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
						(else_try),
							(overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
						(try_end),

						(assign, ":end_cond", 0), #break
					(try_end),
					(presentation_set_duration, 0),
					(assign, "$g_presentation_state", 0),
					(start_presentation, "prsnt_multiplayer_item_select"),
				(try_end),
				(try_begin),
					(eq, ":object", "$g_presentation_obj_item_select_10"),
					(call_script, "script_multiplayer_set_default_item_selections_for_troop", ":my_troop_no"),
					(presentation_set_duration, 0),
					(assign, "$g_presentation_state", 0),
					(start_presentation, "prsnt_multiplayer_item_select"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_item_select_11"),
					(call_script, "script_multiplayer_send_item_selections"),
					(presentation_set_duration, 0),

					(try_begin),
						(try_begin),
							(eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
							(gt, "$g_multiplayer_number_of_respawn_count", 0),

							(ge, "$g_my_spawn_count", "$g_multiplayer_number_of_respawn_count"),

							(multiplayer_get_my_player, ":my_player_no"),
							(player_get_team_no, ":my_player_team", ":my_player_no"),

							(this_or_next|eq, ":my_player_team", 0),
							(ge, "$g_my_spawn_count", 999),

							(assign, "$g_show_no_more_respawns_remained", 1),
						(else_try),
							(assign, "$g_show_no_more_respawns_remained", 0),
						(try_end),

						(eq, "$g_show_no_more_respawns_remained", 1),

						(store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
						(start_presentation, "prsnt_multiplayer_respawn_time_counter"),
					(try_end),
				(else_try),
					(eq, ":object", "$g_presentation_obj_item_select_13"),
					(assign, "$g_multiplayer_bot_type_1_wanted", ":value"),
					(multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_1_wanted, ":value"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_item_select_14"),
					(assign, "$g_multiplayer_bot_type_2_wanted", ":value"),
					(multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_2_wanted, ":value"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_item_select_15"),
					(assign, "$g_multiplayer_bot_type_3_wanted", ":value"),
					(multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_3_wanted, ":value"),
				(else_try),
					(eq, ":object", "$g_presentation_obj_item_select_16"),
					(assign, "$g_multiplayer_bot_type_4_wanted", ":value"),
					(multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_4_wanted, ":value"),
				(try_end),
			(else_try),
				(assign, "$g_close_equipment_selection", 0),
				(presentation_set_duration, 0),
			(try_end),
			]),

		(ti_on_presentation_mouse_press,
		 [(store_trigger_param_1, ":object"),
			(store_trigger_param_2, ":mouse_state"),

			(try_begin),
				(eq, "$g_close_equipment_selection", 0),
				(try_begin),
					(eq, ":mouse_state", 1), #right click (clears the item slot)
					(try_begin),
						(eq, "$g_presentation_state", 0),
						(multiplayer_get_my_player, ":my_player_no"),
						(try_begin),
							(eq, ":object", "$g_presentation_obj_item_select_1"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_2"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_3"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_4"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_5"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_6"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_7"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_8"),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(else_try),
							(eq, ":object", "$g_presentation_obj_item_select_9"),
							(eq, "$g_horses_are_avaliable", 1),
							(store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
							(player_set_slot, ":my_player_no", ":selected_item_index", -1),
							(presentation_set_duration, 0),
							(assign, "$g_presentation_state", 0),
							(start_presentation, "prsnt_multiplayer_item_select"),
						(try_end),
					(else_try),
						(gt, "$g_presentation_state", 0),
						(presentation_set_duration, 0),
						(assign, "$g_presentation_state", 0),
						(start_presentation, "prsnt_multiplayer_item_select"),
					(try_end),
				(try_end),
			(else_try),
				(assign, "$g_close_equipment_selection", 0),
				(presentation_set_duration, 0),
			(try_end),
			]),

		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),

## this causes an error sometimes
##      (multiplayer_get_my_player, ":my_player_no"),
##      (player_get_gold, ":player_gold", ":my_player_no"),
##      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
##      (try_begin),
##        (ge, ":player_gold", reg0),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
##      (else_try),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
##      (try_end),

			(try_begin),
				(eq, "$g_close_equipment_selection", 0),
				(try_begin),
					(this_or_next|key_clicked, key_escape),
			(key_clicked, key_xbox_start),
					(try_begin),
						(neq, "$g_current_opened_item_details", -1),
						(close_item_details),
						(assign, "$g_current_opened_item_details", -1),
					(try_end),
					(gt, ":cur_time", 200),
					(presentation_set_duration, 0),
				(try_end),
			(else_try),
				(assign, "$g_close_equipment_selection", 0),
				#daha sonra buraya siege modundaysa ve takimini yeni degistirdigi icin spawn olamiyorsa start_presentation, spawn_counter satirini ekle sdsd.
				(presentation_set_duration, 0),
			(try_end),
			]),
		])

multiplayer_message_1 = (
	"multiplayer_message_1", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),
			(try_begin),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_battle_mode),
				(assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

				(try_begin),
					(eq, ":winner_agent_team", -1),
					(assign, ":text_font_color", 0xFFFFFFFF),

					(str_store_string, s0, "str_round_draw_no_one_remained"),
				(else_try),
					(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
						(eq, ":winner_agent_team", 0),
						(assign, ":text_font_color", 0xFF33DD11),
					(else_try),
						(assign, ":text_font_color", 0xFFFF4422),
					(try_end), #initializing ends
					(try_begin),
						(lt, "$my_team_at_start_of_round", 2),
						(try_begin),
							(eq, "$my_team_at_start_of_round", ":winner_agent_team"),
							(assign, ":text_font_color", 0xFF33DD11),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
						(try_end),
					(try_end),

					(team_get_faction, ":faction_of_winner_team", ":winner_agent_team"),
					(str_store_faction_name, s1, ":faction_of_winner_team"),
					(str_store_string, s0, "str_s1_won_round"),
				(try_end),

				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(try_begin),
					(neq, ":winner_agent_team", -1),
					(position_set_x, pos1, 375), #375
				(else_try),
					(position_set_x, pos1, 400), #400
				(try_end),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 300),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_score),

				(agent_get_team, ":winner_agent_team", "$g_multiplayer_message_value_1"), #assign given agent's team to winner agent team.
				(team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
				(str_store_faction_name, s1, ":winner_agent_faction"),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, ":winner_agent_team", 0),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":winner_agent_team"),
							(assign, ":text_font_color", 0xFF33DD11),
							(play_sound, "snd_team_scored_a_point"),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
							(play_sound, "snd_enemy_scored_a_point"),
						(try_end),
					(try_end),
				(try_end),

				(str_store_string, s0, "str_s1_captured_flag"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 350),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_returned_home),

				(try_begin),
					(ge, "$g_multiplayer_message_value_1", 0),
					(agent_get_team, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"),
					(team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
					(str_store_faction_name, s1, ":returned_flag_agent_faction"),
					(str_store_string, s0, "str_s1_returned_flag"),
				(else_try),
					(val_add, "$g_multiplayer_message_value_1", 1),
					(val_mul, "$g_multiplayer_message_value_1", -1),
					(assign, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"),
					(team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
					(str_store_faction_name, s1, ":returned_flag_agent_faction"),
					(str_store_string, s0, "str_s1_auto_returned_flag"),
				(try_end),

				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(play_sound, "snd_flag_returned"),
					(try_end),
				(try_end),
				(assign, ":text_font_color", 0xFFFFFFFF),

				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 325),
				(position_set_y, pos1, 400),
				(position_set_x, pos1, 500), #new
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_stole),

				(agent_get_team, ":stolen_flag_agent_team", "$g_multiplayer_message_value_1"),
				(team_get_faction, ":stolen_flag_agent_faction", ":stolen_flag_agent_team"),
				(str_store_faction_name, s1, ":stolen_flag_agent_faction"),

				(assign, ":text_font_color", 0xFFFFFFFF),

				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":stolen_flag_agent_team"),
							(play_sound, "snd_enemy_flag_taken"),
						(else_try),
							(play_sound, "snd_your_flag_taken"),
						(try_end),
					(try_end),
				(try_end),

				(str_store_string, s0, "str_s1_taken_flag"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 365),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_captured),

				(store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
				(store_mod, reg0, "$g_multiplayer_message_value_1", 100),
				(val_sub, ":winner_agent_team", 1),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, ":winner_agent_team", 0),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":winner_agent_team"),
							(assign, ":text_font_color", 0xFF33DD11),
							(play_sound, "snd_team_scored_a_point"),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
							(play_sound, "snd_enemy_scored_a_point"),
						(try_end),
					(try_end),
				(try_end),

				(team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
				(str_store_faction_name, s1, ":winner_agent_faction"),

				(str_store_string, s0, "str_s1_captured_flag_reg0"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 345),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_is_pulling),

				(store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
				(store_mod, reg0, "$g_multiplayer_message_value_1", 100),
				(val_sub, ":winner_agent_team", 1),

				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":winner_agent_team"),
							(play_sound, "snd_enemy_flag_taken"),
						(else_try),
							(play_sound, "snd_your_flag_taken"),
						(try_end),
					(try_end),
				(try_end),

				(assign, ":text_font_color", 0xFFFFFFFF),

				(team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
				(str_store_faction_name, s1, ":winner_agent_faction"),

				(str_store_string, s0, "str_s1_pulling_flag_reg0"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 345),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_neutralized),

				(store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
				(store_mod, reg0, "$g_multiplayer_message_value_1", 100),
				(val_sub, ":winner_agent_team", 1),

				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(play_sound, "snd_flag_returned"),
					(try_end),
				(try_end),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, ":winner_agent_team", 0),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":winner_agent_team"),
							(assign, ":text_font_color", 0xFF33DD11),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
						(try_end),
					(try_end),
				(try_end),

				(team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
				(str_store_faction_name, s1, ":winner_agent_faction"),

				(str_store_string, s0, "str_s1_neutralized_flag_reg0"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 345),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),

				(assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, ":winner_agent_team", 0),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":winner_agent_team"),
							(assign, ":text_font_color", 0xFF33DD11),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
						(try_end),
					(try_end),
				(try_end),

				(try_begin),
					(eq, "$g_multiplayer_message_value_1", 0),
					(str_store_string, s0, "str_s1_defended_castle"),
				(else_try),
					(eq, "$g_multiplayer_message_value_1", 1),
					(str_store_string, s0, "str_s1_captured_castle"),
				(else_try),
					(str_store_string, s0, "str_round_draw"),
					(assign, ":text_font_color", 0xFFFFFFFF),
				(try_end),

				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(try_begin),
					(neq, "$g_multiplayer_message_value_1", -1),
					(position_set_x, pos1, 325),
				(else_try),
					(position_set_x, pos1, 400),
				(try_end),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_round_draw),

				(assign, ":text_font_color", 0xFFFFFFFF),
				(str_store_string, s0, "str_round_draw"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 375),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_start_death_mode),

				(assign, ":text_font_color", 0xFFFFFFFF),
				(str_store_string, s0, "str_death_mode_started"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 350),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_target_destroyed),

				(try_begin),
					(lt, "$g_multiplayer_message_value_1", 0),
					(val_mul, "$g_multiplayer_message_value_1", -1),
					(assign, ":scene_prop_team", 0),

					(team_get_faction, ":faction_of_winner_team", 1),
					(str_store_faction_name, s1, ":faction_of_winner_team"),
				(else_try),
					(assign, ":scene_prop_team", 1),

					(team_get_faction, ":faction_of_winner_team", 0),
					(str_store_faction_name, s1, ":faction_of_winner_team"),
				(try_end),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, "$g_multiplayer_message_value_1", 1),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(try_begin),
						(multiplayer_get_my_player, ":my_player_no"),
						(player_get_team_no, ":my_team_no", ":my_player_no"),
						(neq, ":scene_prop_team", ":my_team_no"), #if scene prop and I have different teams this means we won
						(assign, ":text_font_color", 0xFF33DD11),
					(else_try),
						(assign, ":text_font_color", 0xFFFF4422),
					(try_end),
				(try_end),

				(try_begin),
					(eq, "$g_multiplayer_message_value_1", 9),
					(str_store_string, s0, "str_s1_destroyed_all_targets"),
				(else_try),
					(eq, "$g_multiplayer_message_value_1", 1),
					(str_store_string, s0, "str_s1_destroyed_catapult"),
				(else_try),
					(eq, "$g_multiplayer_message_value_1", 2),
					(str_store_string, s0, "str_s1_destroyed_trebuchet"),
				(try_end),

				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 350),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_defenders_saved_n_targets),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, "$g_defender_team", 0),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", "$g_defender_team"),
							(assign, ":text_font_color", 0xFF33DD11),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
						(try_end),
					(try_end),
				(try_end),

				(assign, ":num_targets_saved", "$g_multiplayer_message_value_1"),

				(team_get_faction, ":faction_of_winner_team", "$g_defender_team"),
				(str_store_faction_name, s1, ":faction_of_winner_team"),

				(try_begin),
					(eq, ":num_targets_saved", 1),
					(str_store_string, s0, "str_s1_saved_1_target"),
				(else_try),
					(eq, ":num_targets_saved", 2),
					(str_store_string, s0, "str_s1_saved_2_targets"),
				(try_end),

				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 350),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_attackers_won_the_round),

				(assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

				(try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
					(eq, ":winner_agent_team", 0),
					(assign, ":text_font_color", 0xFF33DD11),
				(else_try),
					(assign, ":text_font_color", 0xFFFF4422),
				(try_end), #initializing ends
				(multiplayer_get_my_player, ":my_player_no"),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_agent_id, ":my_player_agent", ":my_player_no"),
					(try_begin),
						(ge, ":my_player_agent", 0),
						(agent_get_team, ":my_player_team", ":my_player_agent"),
						(try_begin),
							(eq, ":my_player_team", ":winner_agent_team"),
							(assign, ":text_font_color", 0xFF33DD11),
						(else_try),
							(assign, ":text_font_color", 0xFFFF4422),
						(try_end),
					(try_end),
				(try_end),

				(try_begin),
					(eq, "$g_defender_team", 0),
					(team_get_faction, ":faction_of_winner_team", 1),
				(else_try),
					(team_get_faction, ":faction_of_winner_team", 0),
				(try_end),
				(str_store_faction_name, s1, ":faction_of_winner_team"),

				(str_store_string, s0, "str_s1_won_round"),
				(create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
				(position_set_x, pos1, 350),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 400),
				(overlay_set_position, "$g_multiplayer_message_1", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_1", pos1),
				(presentation_set_duration, 400),
			(try_end),
			]),
		(ti_on_presentation_run,
		 [
			 ]),
		 ])

multiplayer_message_2 =	(
	"multiplayer_message_2", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),
			(try_begin),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_done),
				(assign, ":text_font_color", 0xFFFFFFFF),
				(str_store_string, s0, "str_auto_team_balance_done"),
				(create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
				(position_set_x, pos1, 375),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 550),
				(overlay_set_position, "$g_multiplayer_message_2", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_2", pos1),
				(presentation_set_duration, 300),
			(else_try),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_next),
				(assign, ":text_font_color", 0xFFFFFFFF),

				(try_begin),
					(neq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
					(neq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
					(neq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
					(str_store_string, s0, "str_auto_team_balance_in_20_seconds"),
					(position_set_x, pos1, 375),
				(else_try),
					(str_store_string, s0, "str_auto_team_balance_next_round"),
					(position_set_x, pos1, 375),
				(try_end),

				(create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
				(position_set_y, pos1, 550),
				(position_set_x, pos1, 500), #new
				(overlay_set_position, "$g_multiplayer_message_2", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_2", pos1),
				(presentation_set_duration, 300),
			(try_end),
			]),
		(ti_on_presentation_run,
		 [
			 ]),
		 ])

multiplayer_message_3 = (
	"multiplayer_message_3", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),
			(try_begin),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_poll_result),

				(assign, ":text_font_color", 0xFFFFFFFF),
				(try_begin),
					(eq, "$g_multiplayer_message_value_3", 1),
					(str_store_string, s0, "str_poll_result_yes"),
				(else_try),
					(str_store_string, s0, "str_poll_result_no"),
				(try_end),
				(create_text_overlay, "$g_multiplayer_message_3", s0, tf_center_justify|tf_with_outline),
				(overlay_set_color, "$g_multiplayer_message_3", ":text_font_color"),
				(position_set_x, pos1, 380),
				(position_set_x, pos1, 500), #new
				(position_set_y, pos1, 475),
				(overlay_set_position, "$g_multiplayer_message_3", pos1),
				(position_set_x, pos1, 2000),
				(position_set_y, pos1, 2000),
				(overlay_set_size, "$g_multiplayer_message_3", pos1),
				(presentation_set_duration, 400),
			(try_end),
			]),
		(ti_on_presentation_run,
		 [
			 ]),
		 ])


multiplayer_round_time_counter =	(
	"multiplayer_round_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),
			(assign, "$g_multiplayer_last_round_time_counter_value", -1),
			(str_clear, s0),
			(create_text_overlay, "$g_multiplayer_round_time_counter_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
			(overlay_set_color, "$g_multiplayer_round_time_counter_overlay", 0xFFFFFF),
			(position_set_x, pos1, 900),
			(position_set_y, pos1, 690),
			(overlay_set_position, "$g_multiplayer_round_time_counter_overlay", pos1),
			(position_set_x, pos1, 2000),
			(position_set_y, pos1, 2000),
			(overlay_set_size, "$g_multiplayer_round_time_counter_overlay", pos1),
			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run,
		 [(store_mission_timer_a, ":current_time"),
			(store_sub, ":seconds_past_in_round", ":current_time", "$g_round_start_time"),
			(store_sub, ":seconds_left_in_round", "$g_multiplayer_round_max_seconds", ":seconds_past_in_round"),
			(val_max, ":seconds_left_in_round", 0),
			(try_begin),
				(neq, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
				(assign, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
				(store_div, reg0, ":seconds_left_in_round", 60),
				(store_div, reg1, ":seconds_left_in_round", 10),
				(val_mod, reg1, 6),
				(assign, reg2, ":seconds_left_in_round"),
				(val_mod, reg2, 10),
				(str_store_string, s0, "str_reg0_dd_reg1reg2"),
				(overlay_set_text, "$g_multiplayer_round_time_counter_overlay", s0),
			(try_end),
			]),
		])

multiplayer_team_score_display = ("multiplayer_team_score_display", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),
			(assign, "$g_multiplayer_team_1_last_displayed_score", -1),
			(assign, "$g_multiplayer_team_2_last_displayed_score", -1),
			(str_clear, s0),
			(create_text_overlay, "$g_multiplayer_team_1_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
			(overlay_set_color, "$g_multiplayer_team_1_score_display_overlay", 0xFFFFFF),
			(position_set_x, pos1, 40),
			(position_set_y, pos1, 700),
			(overlay_set_position, "$g_multiplayer_team_1_score_display_overlay", pos1),
			(position_set_x, pos1, 1500),
			(position_set_y, pos1, 1500),
			(overlay_set_size, "$g_multiplayer_team_1_score_display_overlay", pos1),
			(create_text_overlay, "$g_multiplayer_team_2_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
			(overlay_set_color, "$g_multiplayer_team_2_score_display_overlay", 0xFFFFFF),
			(position_set_x, pos1, 40),
			(position_set_y, pos1, 645),
			(overlay_set_position, "$g_multiplayer_team_2_score_display_overlay", pos1),
			(position_set_x, pos1, 1500),
			(position_set_y, pos1, 1500),
			(overlay_set_size, "$g_multiplayer_team_2_score_display_overlay", pos1),

			(try_begin),
				(eq, "$g_multiplayer_team_1_faction", "fac_kingdom_4"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
			(else_try),
				(eq, "$g_multiplayer_team_1_faction", "fac_kingdom_2"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
			(else_try),
				(eq, "$g_multiplayer_team_1_faction", "fac_kingdom_3"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
			(else_try),
				(eq, "$g_multiplayer_team_1_faction", "fac_kingdom_5"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
			(else_try),
				(eq, "$g_multiplayer_team_1_faction", "fac_kingdom_6"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
			(else_try),
				(eq, "$g_multiplayer_team_1_faction", "fac_kingdom_1"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
			(try_end),

			(position_set_x, pos3, 25),
			(position_set_y, pos3, 715),
			(overlay_set_position, reg0, pos3),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 50),
			(overlay_set_size, reg0, pos1),

			(try_begin),
				(eq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
			(else_try),
				(eq, "$g_multiplayer_team_2_faction", "fac_kingdom_4"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
			(else_try),
				(eq, "$g_multiplayer_team_2_faction", "fac_kingdom_2"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
			(else_try),
				(eq, "$g_multiplayer_team_2_faction", "fac_kingdom_3"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
			(else_try),
				(eq, "$g_multiplayer_team_2_faction", "fac_kingdom_5"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
			(else_try),
				(eq, "$g_multiplayer_team_2_faction", "fac_kingdom_6"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
			(else_try),
				(eq, "$g_multiplayer_team_2_faction", "fac_kingdom_1"),
				(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
			(try_end),

			(position_set_x, pos3, 25),
			(position_set_y, pos3, 660),
			(overlay_set_position, reg0, pos3),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 50),
			(overlay_set_size, reg0, pos1),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run, [
			(team_get_score, ":team_1_score", 0),
			(team_get_score, ":team_2_score", 1),
			(try_begin),
				(this_or_next|neq, ":team_1_score", "$g_multiplayer_team_1_last_displayed_score"),
				(neq, ":team_2_score", "$g_multiplayer_team_2_last_displayed_score"),
				(assign, "$g_multiplayer_team_1_last_displayed_score", ":team_1_score"),
				(assign, "$g_multiplayer_team_2_last_displayed_score", ":team_2_score"),

				(str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
				(assign, reg0, ":team_1_score"),
				(overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_reg0"),
				(str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
				(assign, reg0, ":team_2_score"),
				(overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_reg0"),

##        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
##        (assign, reg0, ":team_1_score"),
##        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_s0_dd_reg0"),
##        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
##        (assign, reg0, ":team_2_score"),
##        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_s0_dd_reg0"),
			(try_end),
			]),
		])

multiplayer_flag_projection_display = (
	"multiplayer_flag_projection_display", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		[
			(set_fixed_point_multiplier, 1000),

			(store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
			(val_add, ":flag_mesh", multiplayer_flag_projections_begin),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
			(val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
			(val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),

			(try_begin),
				(neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
			(store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
			(val_add, ":flag_mesh", multiplayer_flag_projections_begin),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
			(val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
			(val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),
			(else_try),
				(assign, ":flag_mesh", "mesh_flag_project_rb"),
				(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
				(assign, ":flag_mesh", "mesh_flag_project_rb_miss"),
				(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),
			(try_end),

			(position_set_x, pos1, 250),
			(position_set_y, pos1, 250),
			(overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
			(overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
			(overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
			(overlay_set_size, "$g_presentation_obj_flag_projection_display_4", pos1),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
			(presentation_set_duration, 999999),
			]),

		(ti_on_presentation_run,
		[
			(set_fixed_point_multiplier, 1000),

			(scene_prop_get_instance, ":flag_red_id", "$team_1_flag_scene_prop", 0),
			(team_get_slot, ":team_0_flag_situation", 0, slot_team_flag_situation),
			(try_begin),
				(neq, ":team_0_flag_situation", 1),
			(prop_instance_get_position, pos1, ":flag_red_id"), #hold position of flag of team 1 (red flag) at pos1
			(else_try),
				(entry_point_get_position, pos1, multi_base_point_team_1), #moved from above to here after auto-set position
			(try_end),
			(position_move_z, pos1, 200, 1),

			(scene_prop_get_instance, ":flag_blue_id", "$team_2_flag_scene_prop", 0),
			(team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),
			(try_begin),
				(neq, ":team_1_flag_situation", 1),
				(prop_instance_get_position, pos2, ":flag_blue_id"), #hold position of flag of team 1 (red flag) at pos1
			(else_try),
				(entry_point_get_position, pos2, multi_base_point_team_2), #moved from above to here after auto-set position
			(try_end),
			(position_move_z, pos2, 200, 1),

			(position_get_screen_projection, pos3, pos1),
			(position_get_x, ":x_pos", pos3),
			(position_get_y, ":y_pos", pos3),
			(position_set_y, pos3, ":y_pos"),
			(try_begin),
				(is_between, ":x_pos", -100, 1100),
				(is_between, ":y_pos", -100, 850),

				(multiplayer_get_my_player, ":my_player_number"),
				(try_begin),
					(ge, ":my_player_number", 0),
					(player_get_team_no, ":my_player_team", ":my_player_number"),
				(else_try),
					(assign, ":my_player_team", multi_team_spectator),
				(try_end),

				(try_begin),
					(neq, ":my_player_team", 1), #if I am at team 0 or spectator
					(try_begin),
						(neq, ":team_0_flag_situation", 1), #if our flag is not stolen
						(overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
					(else_try), #if our flag is stolen
						(try_begin),
							(eq, ":my_player_team", 0),
							(assign, ":our_base_entry_id", multi_base_point_team_1),
						(else_try),
							(assign, ":our_base_entry_id", multi_base_point_team_2),
						(try_end),

						(entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
						(position_get_screen_projection, pos3, pos5),

						(overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
					(try_end),
				(else_try),
					(try_begin),
						(neq, ":team_0_flag_situation", 1),
						(overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
					(try_end),
				(try_end),
			(else_try),
				(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
				(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
			(try_end),

			(position_get_screen_projection, pos3, pos2),
			(position_get_x, ":x_pos", pos3),
			(position_get_y, ":y_pos", pos3),
			(position_set_y, pos3, ":y_pos"),
			(try_begin),
				(is_between, ":x_pos", -100, 1100),
				(is_between, ":y_pos", -100, 850),

				(team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),

				(multiplayer_get_my_player, ":my_player_number"),
				(try_begin),
					(ge, ":my_player_number", 0),
					(player_get_team_no, ":my_player_team", ":my_player_number"),
				(else_try),
					(assign, ":my_player_team", multi_team_spectator),
				(try_end),

				(try_begin),
					(neq, ":my_player_team", 0), #if I am at team 0 or spectator
					(try_begin),
						(neq, ":team_1_flag_situation", 1), #if our flag is not stolen
						(overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
					(else_try), #if our flag is stolen
						(try_begin),
							(eq, ":my_player_team", 0),
							(assign, ":our_base_entry_id", multi_base_point_team_1),
						(else_try),
							(assign, ":our_base_entry_id", multi_base_point_team_2),
						(try_end),

						(entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
						(position_get_screen_projection, pos3, pos5),

						(overlay_set_position, "$g_presentation_obj_flag_projection_display_4", pos3),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 1),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
					(try_end),
				(else_try),
					(try_begin),
						(neq, ":team_1_flag_situation", 1),
						(overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
						(overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
					(try_end),
				(try_end),

			(else_try),
				(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
				(overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
			(try_end),
			]),
		])

multiplayer_flag_projection_display_bt = (
	"multiplayer_flag_projection_display_bt", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),

			(store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
			(val_add, ":flag_mesh", multiplayer_flag_projections_begin),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),

			(try_begin),
				(neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
			(store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
			(val_add, ":flag_mesh", multiplayer_flag_projections_begin),
			(else_try),
				(assign, ":flag_mesh", "mesh_flag_project_rb"),
			(try_end),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),

			(position_set_x, pos1, 250),
			(position_set_y, pos1, 250),

			(overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
			(overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run, [
			(try_begin),
				(eq, "$g_round_ended", 0),
				(set_fixed_point_multiplier, 1000),
				(scene_prop_get_instance, ":flag_1_id", "$team_1_flag_scene_prop", 0),
				(prop_instance_get_position, pos1, ":flag_1_id"), #hold position of flag of team 1 at pos1
				(position_move_z, pos1, 250, 1),

				(scene_prop_get_instance, ":flag_2_id", "$team_2_flag_scene_prop", 0),
				(prop_instance_get_position, pos2, ":flag_2_id"), #hold position of flag of team 2 at pos2
				(position_move_z, pos2, 250, 1),

				(position_get_screen_projection, pos3, pos1),
				(position_get_x, ":x_pos", pos3),
				(position_get_y, ":y_pos", pos3),
				(position_set_y, pos3, ":y_pos"),
				(try_begin),
					(is_between, ":x_pos", -100, 1100),
					(is_between, ":y_pos", -100, 850),

					(overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
				(else_try),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
				(try_end),

				(position_get_screen_projection, pos3, pos2),
				(position_get_x, ":x_pos", pos3),
				(position_get_y, ":y_pos", pos3),
				(position_set_y, pos3, ":y_pos"),
				(try_begin),
					(is_between, ":x_pos", -100, 1100),
					(is_between, ":y_pos", -100, 850),

					(overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
				(else_try),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
				(try_end),
			(else_try),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])

multiplayer_destructible_targets_display = (
	"multiplayer_destructible_targets_display", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),

			(try_begin),
				(eq, "$g_defender_team", 0),
				(store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
			(else_try),
				(store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
			(try_end),

			(val_add, ":flag_mesh", multiplayer_flag_projections_begin),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
			(create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),

			(position_set_x, pos1, 250),
			(position_set_y, pos1, 250),

			(overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
			(overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
			(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run, [
			(try_begin),
				(eq, "$g_round_ended", 0),
				(set_fixed_point_multiplier, 1000),
				(scene_prop_get_instance, ":target_1_id", "$g_destructible_target_1", 0),
				(prop_instance_get_position, pos1, ":target_1_id"),
				(prop_instance_get_position, pos1, ":target_1_id"),
				(position_move_z, pos1, 250, 1),
				(scene_prop_get_instance, ":target_2_id", "$g_destructible_target_2", 0),
				(prop_instance_get_position, pos2, ":target_2_id"),
				(prop_instance_get_position, pos2, ":target_2_id"),
				(position_move_z, pos2, 250, 1),

				(position_get_screen_projection, pos3, pos1),
				(position_get_x, ":x_pos", pos3),
				(position_get_y, ":y_pos", pos3),
				(position_set_y, pos3, ":y_pos"),
				(try_begin),
					(is_between, ":x_pos", -100, 1100),
					(is_between, ":y_pos", -100, 850),

					(prop_instance_get_starting_position, pos0, ":target_1_id"),
					(prop_instance_get_position, pos1, ":target_1_id"),
					(get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
					(le, ":dist", 2), #this can be 0 or 1 too.

					(overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
				(else_try),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
				(try_end),

				(position_get_screen_projection, pos3, pos2),
				(position_get_x, ":x_pos", pos3),
				(position_get_y, ":y_pos", pos3),
				(position_set_y, pos3, ":y_pos"),
				(try_begin),
					(is_between, ":x_pos", -100, 1100),
					(is_between, ":y_pos", -100, 850),

					(prop_instance_get_starting_position, pos0, ":target_2_id"),
					(prop_instance_get_position, pos1, ":target_2_id"),
					(get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
					(le, ":dist", 2), #this can be 0 or 1 too.

					(overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
				(else_try),
					(overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
				(try_end),
			(else_try),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])



multiplayer_respawn_time_counter =	(
	"multiplayer_respawn_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [
			(set_fixed_point_multiplier, 1000),

			(assign, "$g_multiplayer_respawn_counter_overlay", -1),
			(assign, "$g_multiplayer_respawn_remained_overlay", -1),

			(assign, ":do_not_show_respawn_counter", 0),
			(try_begin),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
				(this_or_next|eq, "$g_round_ended", 1),
				(eq, "$g_flag_is_not_ready", 1),
				(assign, ":do_not_show_respawn_counter", 1),
			(try_end),
			(eq, ":do_not_show_respawn_counter", 0),

			(assign, "$g_multiplayer_last_respawn_counter_value", -1),
			(str_clear, s0),
			(create_text_overlay, "$g_multiplayer_respawn_counter_overlay", s0, tf_center_justify|tf_with_outline),
			(overlay_set_color, "$g_multiplayer_respawn_counter_overlay", 0xFFFFFF),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_multiplayer_respawn_counter_overlay", pos1),
			(position_set_x, pos1, 2000),
			(position_set_y, pos1, 2000),
			(overlay_set_size, "$g_multiplayer_respawn_counter_overlay", pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_multiplayer_respawn_remained_overlay", s0, tf_center_justify|tf_with_outline),
			(overlay_set_color, "$g_multiplayer_respawn_remained_overlay", 0xFFFFFF),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 570),
			(overlay_set_position, "$g_multiplayer_respawn_remained_overlay", pos1),
			(position_set_x, pos1, 1400),
			(position_set_y, pos1, 1400),
			(overlay_set_size, "$g_multiplayer_respawn_remained_overlay", pos1),

			#(store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
			(presentation_set_duration, 999999),
			]),

		(ti_on_presentation_run, [
			(ge, "$g_multiplayer_respawn_counter_overlay", 0),
			(multiplayer_get_my_player, ":my_player_no"),
			(try_begin),
				(ge, ":my_player_no", 0),
				(player_get_team_no, ":player_team", ":my_player_no"),
				(try_begin),
					(eq, ":player_team", multi_team_spectator),
					(presentation_set_duration, 0),
				(else_try),
					(store_mission_timer_a, ":current_time"),
					(store_sub, ":seconds_past_in_respawn", ":current_time", "$g_multiplayer_respawn_start_time"),
					(try_begin),
						(eq, "$g_show_no_more_respawns_remained", 0),
						(assign, ":total_respawn_time", "$g_multiplayer_respawn_period"),
						(try_begin),
							(eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
							(player_get_team_no, ":player_team", ":my_player_no"),
							(eq, ":player_team", 0),
							(val_add, ":total_respawn_time", multiplayer_siege_mod_defender_team_extra_respawn_time),
						(try_end),
					(else_try),
						(assign, ":total_respawn_time", 6),
					(try_end),
					(store_sub, ":seconds_left_in_respawn", ":total_respawn_time", ":seconds_past_in_respawn"),
					(try_begin),
						(le, ":seconds_left_in_respawn", 0),
						(presentation_set_duration, 0),
					(else_try),
						(neq, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
						(assign, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
						(try_begin),
							(eq, "$g_show_no_more_respawns_remained", 0),
							(assign, reg0, ":seconds_left_in_respawn"),
							(str_store_string, s0, "str_respawning_in_reg0_seconds"),
							(try_begin),
								(gt, "$g_multiplayer_number_of_respawn_count", 0),
								(store_sub, reg0, "$g_multiplayer_number_of_respawn_count", "$g_my_spawn_count"),

								(multiplayer_get_my_player, ":my_player_no"),
								(player_get_team_no, ":my_player_team", ":my_player_no"),
								(eq, ":my_player_team", 0),

								(try_begin),
									(gt, reg0, 1),
									(str_store_string, s1, "str_reg0_respawns_remained"),
								(else_try),
									(str_store_string, s1, "str_this_is_your_last_respawn"),
								(try_end),
							(else_try),
								(str_clear, s1),
							(try_end),
						(else_try),
							(eq, "$g_show_no_more_respawns_remained", 1),
							##(assign, "$g_informed_about_no_more_respawns_remained", 1),
							(str_store_string, s0, "str_no_more_respawns_remained_this_round"),
							(str_clear, s1),
							(str_store_string, s1, "str_wait_next_round"),
						(try_end),
						(overlay_set_text, "$g_multiplayer_respawn_counter_overlay", s0),
						(overlay_set_text, "$g_multiplayer_respawn_remained_overlay", s1),
					(try_end),
				(try_end),
			(else_try),
				(presentation_set_duration, 0),
			(try_end),

			(try_begin),
				(eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
				(this_or_next|eq, "$g_round_ended", 1),
				(eq, "$g_flag_is_not_ready", 1),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])


multiplayer_stats_chart =	(
	"multiplayer_stats_chart", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_score_b"),
			(position_set_x, pos1, 100),
			(position_set_y, pos1, 100),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(assign, ":team_1_rows", 0),
			(assign, ":team_2_rows", 0),
			(assign, ":spectator_rows", 0),
			(get_max_players, ":num_players"),
			(try_for_range, ":player_no", 0, ":num_players"),
				(store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
				(try_begin),
					(player_is_active, ":player_no"),
					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
					(player_get_team_no, ":player_team", ":player_no"),
					(try_begin),
						(eq, ":player_team", 0),
						(val_add, ":team_1_rows", 1),
					(else_try),
						(eq, ":player_team", 1),
						(val_add, ":team_2_rows", 1),
					(else_try),
						(eq, ":player_team", multi_team_spectator),
						(val_add, ":spectator_rows", 1),
					(try_end),
				(else_try),
					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
				(try_end),
			(try_end),
			(try_begin),
				(gt, "$g_multiplayer_num_bots_team_1", 0),
				(val_add, ":team_1_rows", 1),
			(try_end),
			(try_begin),
				(gt, "$g_multiplayer_num_bots_team_2", 0),
				(val_add, ":team_2_rows", 1),
			(try_end),

			(assign, ":total_rows", ":team_1_rows"),
			(val_max, ":total_rows", ":team_2_rows"),
			(val_add, ":total_rows", ":spectator_rows"),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_stats_chart_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 100),
			(position_set_y, pos1, 120),#120
			(overlay_set_position, "$g_presentation_obj_stats_chart_container", pos1),
			(position_set_x, pos1, 746),
			(position_set_y, pos1, 530),#530
			(overlay_set_area_size, "$g_presentation_obj_stats_chart_container", pos1),
			(set_container_overlay, "$g_presentation_obj_stats_chart_container"),

			(store_mul, ":y_needed", ":total_rows", 20),
			(val_add, ":y_needed", 100),
			(try_begin),
				(gt, ":spectator_rows", 0),
				(val_add, ":y_needed", 70),
			(try_end),

			(multiplayer_get_my_player, ":my_player_no"),

			(try_begin),
				(gt, ":y_needed", 490),
				(assign, "$g_stats_chart_update_period", 8),
			(else_try),
				(assign, "$g_stats_chart_update_period", 1),
			(try_end),

			(try_begin), #counting number of flags each team has.
				(eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
				(call_script, "script_get_headquarters_scores"),
				(assign, ":team_1_num_flags", reg0),
				(assign, ":team_2_num_flags", reg1),
			(try_end),

			#assuming only 2 teams in scene
			(try_for_range, ":i_team", 0, multi_team_spectator),
				(assign, ":number_of_players", 0),
				(get_max_players, ":num_players"),
				(try_for_range, ":player_no", 0, ":num_players"),
					(player_is_active, ":player_no"),
					(player_get_team_no, ":team_no", ":player_no"),
					(eq, ":team_no", ":i_team"),
					(val_add, ":number_of_players", 1),
				(try_end),
				(assign, reg0, ":number_of_players"),
				(try_begin),
					(neq, ":number_of_players", 1),
					(create_text_overlay, reg1, "str_reg0_players", 0),
				(else_try),
					(create_text_overlay, reg1, "str_reg0_player", 0),
				(try_end),

				(assign, ":cur_y", ":y_needed"),
				(team_get_faction, ":cur_faction", ":i_team"),
				(str_store_faction_name, s1, ":cur_faction"),
				(create_text_overlay, reg0, s1, 0),
				(try_begin),
					(eq, ":i_team", 0),
					(overlay_set_color, reg0, 0xFF0000),
					(overlay_set_color, reg1, 0xFF0000),
				(else_try),
					(overlay_set_color, reg0, 0x0099FF),
					(overlay_set_color, reg1, 0x0099FF),
				(try_end),
				(assign, ":distance_between_teams", 373),
				(store_mul, ":cur_x", ":distance_between_teams", ":i_team"),
				(val_add, ":cur_x", 42),
				(store_add, ":cur_x_add_15", ":cur_x", 15),
				(position_set_x, pos3, ":cur_x_add_15"),
				(position_set_y, pos3, ":cur_y"),
				(store_add, ":cur_x_add_35", ":cur_x", 35),
				(position_set_x, pos1, ":cur_x_add_35"),
				(position_set_y, pos1, ":cur_y"),
				(copy_position, pos2, pos1),
				(store_sub, ":cur_y_sub_10", ":cur_y", 10),
				(position_set_x, pos2, ":cur_x_add_35"),
				(position_set_y, pos2, ":cur_y_sub_10"),
				(overlay_set_position, reg0, pos1),
				(overlay_set_position, reg1, pos2),
				(position_set_x, pos1, 1000),
				(position_set_y, pos1, 1000),
				(position_set_x, pos2, 600),
				(position_set_y, pos2, 600),
				(overlay_set_size, reg0, pos1),
				(overlay_set_size, reg1, pos2),

				(team_get_faction, ":faction_of_team_1", 0),
				(team_get_faction, ":faction_of_team_2", 1),

				(try_begin),
					(eq, ":faction_of_team_1", ":faction_of_team_2"),
					(eq, ":i_team", 1),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
				(else_try),
					(eq, ":cur_faction", "fac_kingdom_4"),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
				(else_try),
					(eq, ":cur_faction", "fac_kingdom_2"),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
				(else_try),
					(eq, ":cur_faction", "fac_kingdom_3"),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
				(else_try),
					(eq, ":cur_faction", "fac_kingdom_5"),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
				(else_try),
					(eq, ":cur_faction", "fac_kingdom_6"),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
				(else_try),
					(eq, ":cur_faction", "fac_kingdom_1"),
					(create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
				(try_end),

				(position_set_x, pos1, 100),
				(position_set_y, pos1, 100),
				(overlay_set_position, reg0, pos3),
				(position_set_x, pos1, 50),
				(position_set_y, pos1, 50),
				(overlay_set_size, reg0, pos1),

				(team_get_score, reg0, ":i_team"),
				(create_text_overlay, reg0, "str_score_reg0", tf_right_align),
				(overlay_set_color, reg0, 0xFFFFFF),
				(store_add, ":sub_cur_x", ":cur_x", 325), #325
				(store_add, ":sub_cur_y", ":cur_y", 0),
				(position_set_x, pos1, ":sub_cur_x"),
				(position_set_y, pos1, ":sub_cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 1200),
				(position_set_y, pos1, 1200),
				(overlay_set_size, reg0, pos1),

				(try_begin), #counting number of flags each team has only at hq mod.
					(eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
					(try_begin),
						(eq, ":i_team", 0),
						(assign, reg0, ":team_1_num_flags"),
					(else_try),
						(eq, ":i_team", 1),
						(assign, reg0, ":team_2_num_flags"),
					(try_end),
					(create_text_overlay, reg0, "str_flags_reg0", 0),
					(overlay_set_color, reg0, 0xFFFFFF),
					(store_add, ":sub_cur_x", ":cur_x", 258),
					(store_add, ":sub_cur_y", ":cur_y", -10),
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":sub_cur_y"),
					(overlay_set_position, reg0, pos1),
					(position_set_x, pos1, 600),
					(position_set_y, pos1, 600),
					(overlay_set_size, reg0, pos1),
				(try_end),

				(val_sub, ":cur_y", 60),

				(create_text_overlay, reg0, "str_player_name", 0),
				(overlay_set_color, reg0, 0xFFFFFF),
				(position_set_x, pos1, ":cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg0, pos1),

				(try_begin), #at headquarters and capture the flag write score instead before kill count
					(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
					(eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
					(create_text_overlay, reg0, "str_score", 0),
					(overlay_set_color, reg0, 0xFFFFFF),
					(store_add, ":sub_cur_x", ":cur_x", 138),
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
				(try_end),

				(create_text_overlay, reg0, "str_kills", tf_center_justify),
				(overlay_set_color, reg0, 0xFFFFFF),
				(store_add, ":sub_cur_x", ":cur_x", 206), #191
				(position_set_x, pos1, ":sub_cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg0, pos1),

				(create_text_overlay, reg0, "str_deaths", tf_center_justify),
				(overlay_set_color, reg0, 0xFFFFFF),
				(store_add, ":sub_cur_x", ":cur_x", 260), #232
				(position_set_x, pos1, ":sub_cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg0, pos1),

				(create_text_overlay, reg0, "str_ping", tf_center_justify),
				(overlay_set_color, reg0, 0xFFFFFF),
				(store_add, ":sub_cur_x", ":cur_x", 308), #291
				(position_set_x, pos1, ":sub_cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg0, pos1),

				(create_mesh_overlay, reg0, "mesh_white_plane"),
				(overlay_set_color, reg0, 0xFFFFFF),
				(overlay_set_alpha, reg0, 0xD0),
				(store_add, ":sub_cur_x", ":cur_x", 0),
				(position_set_x, pos1, ":sub_cur_x"),
				(store_add, ":sub_cur_y", ":cur_y", -10),
				(position_set_y, pos1, ":sub_cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 16500),
				(position_set_y, pos1, 50),
				(overlay_set_size, reg0, pos1),

				(val_sub, ":cur_y", 35),

				(store_add, ":end_cond", ":num_players", 1),
				(try_for_range, ":unused", 0, ":end_cond"),
					(assign, ":max_score_plus_death", -30030),
					(assign, ":max_score_plus_death_player_no", -1),
					(try_for_range, ":player_no", 0, ":num_players"),
						(store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
						(troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
						(player_get_team_no, ":player_team", ":player_no"),
						(eq, ":player_team", ":i_team"),

						(try_begin),
							(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
							(eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
							(player_get_score, ":kill_count", ":player_no"), #get score in "capture the flag" or "headquarters"
						(else_try),
							(player_get_kill_count, ":kill_count", ":player_no"), #get kill count in "siege" or "battle" or "team deathmatch" or "deathmatch"
						(try_end),

						(player_get_death_count, ":death_count", ":player_no"), #get_death_count

						(store_mul, ":player_score_plus_death", ":kill_count", 1000),
						(val_sub, ":player_score_plus_death", ":death_count"),

						(this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
						(eq, ":player_score_plus_death", -30030),

						(assign, ":max_score_plus_death", ":player_score_plus_death"),
						(assign, ":max_score_plus_death_player_no", ":player_no"),
					(try_end),
					(try_begin),
						(ge, ":max_score_plus_death_player_no", 0),
						(store_add, ":slot_index", ":max_score_plus_death_player_no", multi_data_player_index_list_begin),
						(troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),

						(try_begin),
							(eq, ":my_player_no", ":max_score_plus_death_player_no"),
							(create_mesh_overlay, reg0, "mesh_white_plane"),
							(overlay_set_color, reg0, 0xFFFFFF),
							(overlay_set_alpha, reg0, 0x35),
							(store_add, ":sub_cur_x", ":cur_x", 0),
							(position_set_x, pos1, ":sub_cur_x"),
							(store_add, ":sub_cur_y", ":cur_y", 0),
							(position_set_y, pos1, ":sub_cur_y"),
							(overlay_set_position, reg0, pos1),
							(position_set_x, pos1, 16500),
							(position_set_y, pos1, 1000),
							(overlay_set_size, reg0, pos1),
						(try_end),

						(try_begin), #at headquarters and capture the flag write score instead dead label before kill count
							(this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
							(eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),

							(assign, ":font_color", 0xFFFFFF),
							(player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
							(try_begin),
								(this_or_next|lt, ":max_score_plus_death_agent_id", 0),
								(neg|agent_is_alive, ":max_score_plus_death_agent_id"),
								(assign, ":font_color", 0xFF0000),
							(try_end),

							(player_get_score, reg0, ":max_score_plus_death_player_no"),
							(create_text_overlay, reg0, "str_reg0", tf_right_align),
							(overlay_set_color, reg0, ":font_color"),
							(position_set_x, pos1, 750),
							(position_set_y, pos1, 750),
							(overlay_set_size, reg0, pos1),
							(store_add, ":sub_cur_x", ":cur_x", 165), #150
							(position_set_x, pos1, ":sub_cur_x"),
							(position_set_y, pos1, ":cur_y"),
							(overlay_set_position, reg0, pos1),
						(else_try),
							(assign, ":font_color", 0xFFFFFF),
							(player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
							(try_begin),
								(this_or_next|lt, ":max_score_plus_death_agent_id", 0),
								(neg|agent_is_alive, ":max_score_plus_death_agent_id"),
								(assign, ":font_color", 0xFF0000),
								(create_text_overlay, reg0, "str_dead", 0),
								(overlay_set_color, reg0, ":font_color"),
								(position_set_x, pos1, 750),
								(position_set_y, pos1, 750),
								(overlay_set_size, reg0, pos1),
								(store_add, ":sub_cur_x", ":cur_x", 130),
								(position_set_x, pos1, ":sub_cur_x"),
								(position_set_y, pos1, ":cur_y"),
								(overlay_set_position, reg0, pos1),
							(try_end),
						(try_end),

						(str_store_player_username, s1, ":max_score_plus_death_player_no"),
						(create_text_overlay, reg0, s1, 0),
						(overlay_set_color, reg0, ":font_color"),
						(position_set_x, pos1, 750),
						(position_set_y, pos1, 750),
						(overlay_set_size, reg0, pos1),
						(position_set_x, pos1, ":cur_x"),
						(position_set_y, pos1, ":cur_y"),
						(overlay_set_position, reg0, pos1),

						(player_get_kill_count, reg0, ":max_score_plus_death_player_no"), #get_kill_count
						(create_text_overlay, reg0, "str_reg0", tf_right_align),
						(overlay_set_color, reg0, ":font_color"),
						(position_set_x, pos1, 750),
						(position_set_y, pos1, 750),
						(overlay_set_size, reg0, pos1),
						(store_add, ":sub_cur_x", ":cur_x", 215), #200
						(position_set_x, pos1, ":sub_cur_x"),
						(position_set_y, pos1, ":cur_y"),
						(overlay_set_position, reg0, pos1),

						(player_get_death_count, reg0, ":max_score_plus_death_player_no"),
						(create_text_overlay, reg0, "str_reg0", tf_right_align),
						(overlay_set_color, reg0, ":font_color"),
						(position_set_x, pos1, 750),
						(position_set_y, pos1, 750),
						(overlay_set_size, reg0, pos1),
						(store_add, ":sub_cur_x", ":cur_x", 265), #250
						(position_set_x, pos1, ":sub_cur_x"),
						(position_set_y, pos1, ":cur_y"),
						(overlay_set_position, reg0, pos1),

						(player_get_ping, reg0, ":max_score_plus_death_player_no"),
						(create_text_overlay, reg0, "str_reg0", tf_right_align),
						(overlay_set_color, reg0, ":font_color"),
						(position_set_x, pos1, 750),
						(position_set_y, pos1, 750),
						(overlay_set_size, reg0, pos1),
						(store_add, ":sub_cur_x", ":cur_x", 315), #300
						(position_set_x, pos1, ":sub_cur_x"),
						(position_set_y, pos1, ":cur_y"),
						(overlay_set_position, reg0, pos1),
						(val_sub, ":cur_y", 20),
					(else_try),
						(try_begin),
							(try_begin),
								(eq, ":i_team", 0),
								(assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_1"),
							(else_try),
								(assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_2"),
							(try_end),

							(team_get_bot_kill_count, reg0, ":i_team"),
							(team_get_bot_death_count, reg1, ":i_team"),
							(try_begin),
								(this_or_next|neq, reg0, 0),
								(this_or_next|neq, reg1, 0),
								(neq, ":number_of_bots_in_cur_team", 0),
								(assign, ":write_bot_informations_of_team", 1),
							(else_try),
								(assign, ":write_bot_informations_of_team", 0),
							(try_end),

							(eq, ":write_bot_informations_of_team", 1),

							(assign, ":number_of_alive_bots", 0),
							(try_for_agents, ":cur_agent"),
								(agent_is_non_player, ":cur_agent"),
								(agent_is_alive, ":cur_agent"),
								(agent_get_team, ":cur_agent_team", ":cur_agent"),
								(eq, ":cur_agent_team", ":i_team"),
								(val_add, ":number_of_alive_bots", 1),
							(try_end),
							(store_sub, ":number_of_dead_bots", ":number_of_bots_in_cur_team", ":number_of_alive_bots"),
							(try_begin),
								(eq, ":number_of_alive_bots", 0),
								(assign, ":font_color", 0xFF0000),
							(else_try),
								(assign, ":font_color", 0xD0D0D0),
							(try_end),

							(try_begin),
								(gt, ":number_of_dead_bots", 0),
								(try_begin),
									(eq, ":number_of_bots_in_cur_team", 1),
									(create_text_overlay, reg0, "str_dead", 0),
									(store_add, ":sub_cur_x", ":cur_x", 130),
								(else_try),
									(assign, reg0, ":number_of_dead_bots"),
									(create_text_overlay, reg0, "str_reg0_dead", 0),
									(store_add, ":sub_cur_x", ":cur_x", 123),
								(try_end),
								(overlay_set_color, reg0, ":font_color"),
								(position_set_x, pos1, 750),
								(position_set_y, pos1, 750),
								(overlay_set_size, reg0, pos1),
								(position_set_x, pos1, ":sub_cur_x"),
								(position_set_y, pos1, ":cur_y"),
								(overlay_set_position, reg0, pos1),
							(try_end),

							(try_begin),
								(gt, ":number_of_bots_in_cur_team", 1),
								(assign, reg0, ":number_of_bots_in_cur_team"),
								(create_text_overlay, reg0, "str_bots_reg0_agents", 0),
							(else_try),
								(create_text_overlay, reg0, "str_bot_1_agent", 0),
							(try_end),
							(overlay_set_color, reg0, ":font_color"),
							(position_set_x, pos1, 750),
							(position_set_y, pos1, 750),
							(overlay_set_size, reg0, pos1),
							(position_set_x, pos1, ":cur_x"),
							(position_set_y, pos1, ":cur_y"),
							(overlay_set_position, reg0, pos1),

							(team_get_bot_kill_count, reg0, ":i_team"),
							(create_text_overlay, reg0, "str_reg0", tf_right_align),
							(overlay_set_color, reg0, ":font_color"),
							(position_set_x, pos1, 750),
							(position_set_y, pos1, 750),
							(overlay_set_size, reg0, pos1),
							(store_add, ":sub_cur_x", ":cur_x", 215), #200
							(position_set_x, pos1, ":sub_cur_x"),
							(position_set_y, pos1, ":cur_y"),
							(overlay_set_position, reg0, pos1),

							(team_get_bot_death_count, reg0, ":i_team"),
							(create_text_overlay, reg0, "str_reg0", tf_right_align),
							(overlay_set_color, reg0, ":font_color"),
							(position_set_x, pos1, 750),
							(position_set_y, pos1, 750),
							(overlay_set_size, reg0, pos1),
							(store_add, ":sub_cur_x", ":cur_x", 265), #250
							(position_set_x, pos1, ":sub_cur_x"),
							(position_set_y, pos1, ":cur_y"),
							(overlay_set_position, reg0, pos1),
							(val_sub, ":cur_y", 20),
						(try_end),
						(assign, ":end_cond", 0), #all players are written for this team, break
					(try_end),
				(try_end),

				(try_begin),
					(eq, ":i_team", 0),
					(assign, ":old_cur_y", ":cur_y"),
				(try_end),
			(try_end),

			(try_begin),
				(le, ":old_cur_y", ":cur_y"),
				(assign, ":cur_y", ":old_cur_y"),
			(try_end),

			(assign, ":cur_x", 42),

			#white line between playing players and spectators
			(create_mesh_overlay, reg0, "mesh_white_plane"),
			(overlay_set_color, reg0, 0xFFFFFF),
			(overlay_set_alpha, reg0, 0xD0),
			(store_add, ":sub_cur_x", ":cur_x", 0),
			(position_set_x, pos1, ":sub_cur_x"),
			(store_add, ":sub_cur_y", ":cur_y", 10),
			(position_set_y, pos1, ":sub_cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 36000),
			(position_set_y, pos1, 50),
			(overlay_set_size, reg0, pos1),

			(try_begin),
				(gt, ":spectator_rows", 0),

				(assign, ":cur_x", 280),
				(val_sub, ":cur_y", 50),

				#"spectators" text
				(create_text_overlay, reg0, "str_spectators", 0),
				(overlay_set_color, reg0, 0xFFFFFF),
				(position_set_x, pos1, ":cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 1000),
				(position_set_y, pos1, 1000),
				(overlay_set_size, reg0, pos1),

				(create_text_overlay, reg0, "str_ping", tf_right_align),
				(overlay_set_color, reg0, 0xFFFFFF),
				(store_add, ":sub_cur_x", ":cur_x", 215), #200
				(position_set_x, pos1, ":sub_cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg0, pos1),

				#white line for spectators list
				(create_mesh_overlay, reg0, "mesh_white_plane"),
				(overlay_set_color, reg0, 0xFFFFFF),
				(overlay_set_alpha, reg0, 0xD0),
				(store_add, ":sub_cur_x", ":cur_x", 0),
				(position_set_x, pos1, ":sub_cur_x"),
				(store_add, ":sub_cur_y", ":cur_y", -10),
				(position_set_y, pos1, ":sub_cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 12000),
				(position_set_y, pos1, 50),
				(overlay_set_size, reg0, pos1),

				(val_sub, ":cur_y", 30),

				(assign, ":font_color", 0xC0C0C0),

				(store_add, ":end_cond", ":num_players", 1),
				(try_for_range, ":player_no", 0, ":end_cond"),
					(store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
					(troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

					(player_get_team_no, ":player_team", ":player_no"),
					(eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

					(try_begin),
						(eq, ":my_player_no", ":player_no"),
						(create_mesh_overlay, reg0, "mesh_white_plane"),
						(overlay_set_color, reg0, 0xFFFFFF),
						(overlay_set_alpha, reg0, 0x35),
						(store_add, ":sub_cur_x", ":cur_x", 0),
						(position_set_x, pos1, ":sub_cur_x"),
						(store_add, ":sub_cur_y", ":cur_y", 0),
						(position_set_y, pos1, ":sub_cur_y"),
						(overlay_set_position, reg0, pos1),
						(position_set_x, pos1, 12000),
						(position_set_y, pos1, 1000),
						(overlay_set_size, reg0, pos1),
					(try_end),

					(str_store_player_username, s1, ":player_no"),
					(create_text_overlay, reg0, s1, 0),
					(overlay_set_color, reg0, ":font_color"),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(position_set_x, pos1, ":cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(player_get_ping, reg0, ":player_no"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, ":font_color"),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 215), #200
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(val_sub, ":cur_y", 20),
				(try_end),
			(try_end),

			(omit_key_once, key_mouse_scroll_up),
			(omit_key_once, key_mouse_scroll_down),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_mouse_scroll_up),
				(key_clicked, key_mouse_scroll_down),
				(omit_key_once, key_mouse_scroll_up),
				(omit_key_once, key_mouse_scroll_down),
			(try_end),
			(try_begin),
				(eq, "$g_multiplayer_stats_chart_opened_manually", 1),
				(neg|game_key_is_down, gk_leave),
				(assign, "$g_multiplayer_stats_chart_opened_manually", 0),
				(clear_omitted_keys),
				(presentation_set_duration, 0),
			(try_end),
			(try_begin),
				(store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
				(gt, ":cur_time", ":update_period_time_limit"),
				(clear_omitted_keys),
				(presentation_set_duration, 0),
				(start_presentation, "prsnt_multiplayer_stats_chart"),
			(try_end),
			]),
		])

multiplayer_stats_chart_deathmatch  = (
	"multiplayer_stats_chart_deathmatch", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_score_a"),
			(position_set_x, pos1, 295),
			(position_set_y, pos1, 115),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(assign, ":team_rows", 0),
			(assign, ":spectator_rows", 0),
			(get_max_players, ":num_players"),
			(try_for_range, ":player_no", 0, ":num_players"),
				(store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
				(try_begin),
					(player_is_active, ":player_no"),
					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
					(player_get_team_no, ":player_team", ":player_no"),
					(try_begin),
						(this_or_next|eq, ":player_team", 0),
						(eq, ":player_team", 1),
						(val_add, ":team_rows", 1),
					(else_try),
						(eq, ":player_team", multi_team_spectator),
						(val_add, ":spectator_rows", 1),
					(try_end),
				(else_try),
					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
				(try_end),
			(try_end),
			(try_begin),
				(this_or_next|gt, "$g_multiplayer_num_bots_team_1", 0),
				(gt, "$g_multiplayer_num_bots_team_2", 0),
				(val_add, ":team_rows", 1),
			(try_end),

			(store_add, ":total_rows", ":team_rows", ":spectator_rows"),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_stats_chart_deathmatch_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 300),
			(position_set_y, pos1, 140),
			(overlay_set_position, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
			(position_set_x, pos1, 346),
			(position_set_y, pos1, 530),
			(overlay_set_area_size, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
			(set_container_overlay, "$g_presentation_obj_stats_chart_deathmatch_container"),

			(store_mul, ":y_needed", ":total_rows", 20),
			(val_add, ":y_needed", 80),
			(try_begin),
				(gt, ":spectator_rows", 0),
				(val_add, ":y_needed", 70),
			(try_end),

			(try_begin),
				(ge, ":total_rows", 17),
				(assign, "$g_stats_chart_update_period", 10),
			(else_try),
				(assign, "$g_stats_chart_update_period", 1),
			(try_end),

			(multiplayer_get_my_player, ":my_player_no"),

			#assuming only 2 teams in scene
			(assign, ":cur_y", ":y_needed"),
			(assign, ":cur_x", 42),

			(create_text_overlay, reg0, "str_player_name", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, ":cur_x"),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 750),
			(position_set_y, pos1, 750),
			(overlay_set_size, reg0, pos1),

			(create_text_overlay, reg0, "str_kills", tf_center_justify),
			(overlay_set_color, reg0, 0xFFFFFF),
			(store_add, ":sub_cur_x", ":cur_x", 179), #164
			(position_set_x, pos1, ":sub_cur_x"),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 750),
			(position_set_y, pos1, 750),
			(overlay_set_size, reg0, pos1),

			(create_text_overlay, reg0, "str_deaths", tf_center_justify),
			(overlay_set_color, reg0, 0xFFFFFF),
			(store_add, ":sub_cur_x", ":cur_x", 233), #205
			(position_set_x, pos1, ":sub_cur_x"),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 750),
			(position_set_y, pos1, 750),
			(overlay_set_size, reg0, pos1),

			(create_text_overlay, reg0, "str_ping", tf_center_justify),
			(overlay_set_color, reg0, 0xFFFFFF),
			(store_add, ":sub_cur_x", ":cur_x", 282), #264
			(position_set_x, pos1, ":sub_cur_x"),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 750),
			(position_set_y, pos1, 750),
			(overlay_set_size, reg0, pos1),

			(create_mesh_overlay, reg0, "mesh_white_plane"),
			(overlay_set_color, reg0, 0xFFFFFF),
			(overlay_set_alpha, reg0, 0xD0),
			(store_add, ":sub_cur_x", ":cur_x", 0),
			(position_set_x, pos1, ":sub_cur_x"),
			(store_add, ":sub_cur_y", ":cur_y", -10),
			(position_set_y, pos1, ":sub_cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 15250),
			(position_set_y, pos1, 50),
			(overlay_set_size, reg0, pos1),

			(val_sub, ":cur_y", 35),

			(store_add, ":end_cond", ":num_players", 1),
			(try_for_range, ":unused", 0, ":end_cond"),
				(assign, ":max_score_plus_death", -30030),
				(assign, ":max_kills_player_no", -1),
				(try_for_range, ":player_no", 0, ":num_players"),
					(store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
					(troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
					(player_get_team_no, ":player_team", ":player_no"),
					(this_or_next|eq, ":player_team", 0),
					(eq, ":player_team", 1),

					(player_get_kill_count, ":kill_count", ":player_no"),
					(player_get_death_count, ":death_count", ":player_no"), #get_death_count
					(store_mul, ":player_score_plus_death", ":kill_count", 1000),
					(val_sub, ":player_score_plus_death", ":death_count"),

					(this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
					(eq, ":player_score_plus_death", -30030),

					(assign, ":max_score_plus_death", ":player_score_plus_death"),
					(assign, ":max_kills_player_no", ":player_no"),
				(try_end),
				(try_begin),
					(ge, ":max_kills_player_no", 0),
					(store_add, ":slot_index", ":max_kills_player_no", multi_data_player_index_list_begin),
					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
					(str_store_player_username, s1, ":max_kills_player_no"),

					(try_begin),
						(eq, ":my_player_no", ":max_kills_player_no"),
						(create_mesh_overlay, reg0, "mesh_white_plane"),
						(overlay_set_color, reg0, 0xFFFFFF),
						(overlay_set_alpha, reg0, 0x35),
						(store_add, ":sub_cur_x", ":cur_x", 0),
						(position_set_x, pos1, ":sub_cur_x"),
						(store_add, ":sub_cur_y", ":cur_y", 0),
						(position_set_y, pos1, ":sub_cur_y"),
						(overlay_set_position, reg0, pos1),
						(position_set_x, pos1, 16000),
						(position_set_y, pos1, 1000),
						(overlay_set_size, reg0, pos1),
					(try_end),

					(create_text_overlay, reg0, s1, 0),
					(overlay_set_color, reg0, 0xFFFFFF),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(position_set_x, pos1, ":cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(player_get_kill_count, reg0, ":max_kills_player_no"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, 0xFFFFFF),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 188), #173
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(player_get_death_count, reg0, ":max_kills_player_no"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, 0xFFFFFF),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 238), #223
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(player_get_ping, reg0, ":max_kills_player_no"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, 0xFFFFFF),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 288), #273
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(val_sub, ":cur_y", 20),
				(else_try),
					(store_add, ":number_of_bots", "$g_multiplayer_num_bots_team_1", "$g_multiplayer_num_bots_team_2"),
					(ge, ":number_of_bots", 1),

					(try_begin),
						(gt, ":number_of_bots", 1),
						(assign, reg0, ":number_of_bots"),
						(create_text_overlay, reg0, "str_bots_reg0_agents", 0),
					(else_try),
						(create_text_overlay, reg0, "str_bot_1_agent", 0),
					(try_end),

					(overlay_set_color, reg0, 0xD0D0D0),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(position_set_x, pos1, ":cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(team_get_bot_kill_count, reg0, 0),
					(assign, ":bot_kill_count", reg0),
					(team_get_bot_kill_count, reg0, 1),
					(val_add, ":bot_kill_count", reg0),
					(assign, reg0, ":bot_kill_count"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, 0xD0D0D0),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 188), #173
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(team_get_bot_death_count, reg0, 0),
					(assign, ":bot_death_count", reg0),
					(team_get_bot_death_count, reg0, 1),
					(val_add, ":bot_death_count", reg0),
					(assign, reg0, ":bot_death_count"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, 0xD0D0D0),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 238), #223
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(val_sub, ":cur_y", 20),

					(assign, ":end_cond", 0), #all players are written, break
				(else_try),
					(assign, ":end_cond", 0), #all players are written, break
				(try_end),
			(try_end),

			(assign, ":cur_x", 42),

			#white line between playing players and spectators
			(create_mesh_overlay, reg0, "mesh_white_plane"),
			(overlay_set_color, reg0, 0xFFFFFF),
			(overlay_set_alpha, reg0, 0xD0),
			(store_add, ":sub_cur_x", ":cur_x", 0),
			(position_set_x, pos1, ":sub_cur_x"),
			(store_add, ":sub_cur_y", ":cur_y", 10),
			(position_set_y, pos1, ":sub_cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 15250),
			(position_set_y, pos1, 50),
			(overlay_set_size, reg0, pos1),

			(try_begin),
				(gt, ":spectator_rows", 0),

				(assign, ":cur_x", 75),
				(val_sub, ":cur_y", 50),

				#"spectators" text
				(create_text_overlay, reg0, "str_spectators", 0),
				(overlay_set_color, reg0, 0xFFFFFF),
				(position_set_x, pos1, ":cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 1000),
				(position_set_y, pos1, 1000),
				(overlay_set_size, reg0, pos1),

				(create_text_overlay, reg0, "str_ping", tf_center_justify),
				(overlay_set_color, reg0, 0xFFFFFF),
				(store_add, ":sub_cur_x", ":cur_x", 218), #200
				(position_set_x, pos1, ":sub_cur_x"),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 750),
				(overlay_set_size, reg0, pos1),

				#white line for spectators list
				(create_mesh_overlay, reg0, "mesh_white_plane"),
				(overlay_set_color, reg0, 0xFFFFFF),
				(overlay_set_alpha, reg0, 0xD0),
				(store_add, ":sub_cur_x", ":cur_x", 0),
				(position_set_x, pos1, ":sub_cur_x"),
				(store_add, ":sub_cur_y", ":cur_y", -10),
				(position_set_y, pos1, ":sub_cur_y"),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 12000),
				(position_set_y, pos1, 50),
				(overlay_set_size, reg0, pos1),

				(val_sub, ":cur_y", 30),

				(assign, ":font_color", 0xC0C0C0),

				(store_add, ":end_cond", ":num_players", 1),
				(try_for_range, ":player_no", 0, ":end_cond"),
					(store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
					(troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

					(player_get_team_no, ":player_team", ":player_no"),
					(eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

					(troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

					(try_begin),
						(eq, ":my_player_no", ":player_no"),
						(create_mesh_overlay, reg0, "mesh_white_plane"),
						(overlay_set_color, reg0, 0xFFFFFF),
						(overlay_set_alpha, reg0, 0x35),
						(store_add, ":sub_cur_x", ":cur_x", 0),
						(position_set_x, pos1, ":sub_cur_x"),
						(store_add, ":sub_cur_y", ":cur_y", 0),
						(position_set_y, pos1, ":sub_cur_y"),
						(overlay_set_position, reg0, pos1),
						(position_set_x, pos1, 12000), #16500
						(position_set_y, pos1, 1000),
						(overlay_set_size, reg0, pos1),
					(try_end),

					(str_store_player_username, s1, ":player_no"),
					(create_text_overlay, reg0, s1, 0),
					(overlay_set_color, reg0, ":font_color"),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(position_set_x, pos1, ":cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),

					(player_get_ping, reg0, ":player_no"),
					(create_text_overlay, reg0, "str_reg0", tf_right_align),
					(overlay_set_color, reg0, ":font_color"),
					(position_set_x, pos1, 750),
					(position_set_y, pos1, 750),
					(overlay_set_size, reg0, pos1),
					(store_add, ":sub_cur_x", ":cur_x", 215), #200
					(position_set_x, pos1, ":sub_cur_x"),
					(position_set_y, pos1, ":cur_y"),
					(overlay_set_position, reg0, pos1),
					(val_sub, ":cur_y", 20),
				(try_end),
			(try_end),

			(omit_key_once, key_mouse_scroll_up),
			(omit_key_once, key_mouse_scroll_down),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_mouse_scroll_up),
				(key_clicked, key_mouse_scroll_down),
				(omit_key_once, key_mouse_scroll_up),
				(omit_key_once, key_mouse_scroll_down),
			(try_end),
			(try_begin),
				(eq, "$g_multiplayer_stats_chart_opened_manually", 1),
				(neg|game_key_is_down, gk_leave),
				(assign, "$g_multiplayer_stats_chart_opened_manually", 0),
				(clear_omitted_keys),
				(presentation_set_duration, 0),
			(try_end),
			(try_begin),
				(store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
				(gt, ":cur_time", ":update_period_time_limit"),
				(clear_omitted_keys),
				(presentation_set_duration, 0),
				(start_presentation, "prsnt_multiplayer_stats_chart_deathmatch"),
			(try_end),
			]),
		])


multiplayer_escape_menu = 	(
	"multiplayer_escape_menu", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
			(position_set_x, pos1, 250),
			(position_set_y, pos1, 80),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_escape_menu_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 285),
			(position_set_y, pos1, 75),
			(overlay_set_position, "$g_presentation_obj_escape_menu_container", pos1),
			(position_set_x, pos1, 405),
			(position_set_y, pos1, 550),
			(overlay_set_area_size, "$g_presentation_obj_escape_menu_container", pos1),
			(set_container_overlay, "$g_presentation_obj_escape_menu_container"),

			(assign, ":cur_y", 500),

			(create_text_overlay, reg0, "str_choose_an_option", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(val_sub, ":cur_y", escape_menu_item_height),

			(create_button_overlay, "$g_presentation_obj_escape_menu_1", "str_choose_faction", 0),
			(overlay_set_color, "$g_presentation_obj_escape_menu_1", 0xFFFFFF),
			(multiplayer_get_my_team, ":my_team"),
			(assign, "$g_presentation_obj_escape_menu_2", -1),
			(assign, "$g_presentation_obj_escape_menu_3", -1),
			(assign, "$g_presentation_obj_escape_menu_6", -1),
			(assign, "$g_presentation_obj_escape_menu_7", -1),
			(assign, "$g_presentation_obj_escape_menu_8", -1),
			(assign, "$g_presentation_obj_escape_menu_9", -1),
			(assign, "$g_presentation_obj_escape_menu_10", -1),
			(assign, "$g_presentation_obj_escape_menu_11", -1),
			(assign, "$g_presentation_obj_escape_menu_12", -1),
			(assign, "$g_presentation_obj_escape_menu_13", -1),
			(try_begin),
				(lt, ":my_team", multi_team_spectator),
				(create_button_overlay, "$g_presentation_obj_escape_menu_2", "str_choose_troop", 0),
				(overlay_set_color, "$g_presentation_obj_escape_menu_2", 0xFFFFFF),
				(multiplayer_get_my_troop, ":my_troop"),
				(try_begin),
					(ge, ":my_troop", 0),
					(create_button_overlay, "$g_presentation_obj_escape_menu_3", "str_choose_items", 0),
					(overlay_set_color, "$g_presentation_obj_escape_menu_3", 0xFFFFFF),
				(try_end),
			(try_end),
			(create_button_overlay, "$g_presentation_obj_escape_menu_4", "str_options", 0),
			(overlay_set_color, "$g_presentation_obj_escape_menu_4", 0xFFFFFF),
			(create_button_overlay, "$g_presentation_obj_escape_menu_5", "str_redefine_keys", 0),
			(overlay_set_color, "$g_presentation_obj_escape_menu_5", 0xFFFFFF),

			(create_button_overlay, "$g_presentation_obj_escape_menu_13", "@Show game rules", 0),
			(overlay_set_color, "$g_presentation_obj_escape_menu_13", 0xFFFFFF),

			(multiplayer_get_my_player, ":my_player_no"),
			(try_begin),
				(this_or_next|eq, "$g_multiplayer_maps_voteable", 1),
				(this_or_next|eq, "$g_multiplayer_factions_voteable", 1),
				(this_or_next|gt, "$g_multiplayer_num_bots_voteable", 0),
				(this_or_next|eq, "$g_multiplayer_kick_voteable", 1),
				(eq, "$g_multiplayer_ban_voteable", 1),
				(create_button_overlay, "$g_presentation_obj_escape_menu_6", "str_submit_a_poll", 0),
				(overlay_set_color, "$g_presentation_obj_escape_menu_6", 0xFFFFFF),
				(assign, "$g_presentation_obj_escape_menu_6_available", 1),
				(try_begin),
					(ge, ":my_player_no", 0),
					(player_get_slot, ":last_poll_time", ":my_player_no", slot_player_poll_disabled_until_time),
					(store_mission_timer_a, ":mission_timer"),
					(lt, ":mission_timer", ":last_poll_time"),
					(overlay_set_color, "$g_presentation_obj_escape_menu_6", 0x888888),
					(overlay_set_hilight_color, "$g_presentation_obj_escape_menu_6", 0x888888),
					(assign, "$g_presentation_obj_escape_menu_6_available", 0),
				(try_end),
			(try_end),

			(try_begin),
				(ge, ":my_player_no", 0),
				(player_is_admin, ":my_player_no"),
				(create_button_overlay, "$g_presentation_obj_escape_menu_7", "str_administrator_panel", 0),
				(overlay_set_color, "$g_presentation_obj_escape_menu_7", 0xFFFFFF),
				(create_button_overlay, "$g_presentation_obj_escape_menu_8", "str_kick_player", 0),
				(overlay_set_color, "$g_presentation_obj_escape_menu_8", 0xFFFFFF),
				(create_button_overlay, "$g_presentation_obj_escape_menu_9", "str_ban_player", 0),
				(overlay_set_color, "$g_presentation_obj_escape_menu_9", 0xFFFFFF),
			(try_end),

			(create_button_overlay, "$g_presentation_obj_escape_menu_11", "str_mute_player", 0),
			(overlay_set_color, "$g_presentation_obj_escape_menu_11", 0xFFFFFF),

			(try_begin),
				(assign, "$g_presentation_obj_escape_menu_12", -1),
				(assign, ":any_muted", 0),
				(get_max_players, ":num_players"),
				(try_for_range, ":player_no", 0, ":num_players"),
					(player_is_active, ":player_no"),
					(player_get_is_muted, ":is_muted", ":player_no"),
					(eq, ":is_muted", 1),
					(assign, ":any_muted", 1),
				(try_end),
				(eq, ":any_muted", 1),
				(create_button_overlay, "$g_presentation_obj_escape_menu_12", "str_unmute_player", 0),
				(overlay_set_color, "$g_presentation_obj_escape_menu_12", 0xFFFFFF),
			(try_end),

			(create_button_overlay, "$g_presentation_obj_escape_menu_10", "str_quit", 0),
			(overlay_set_color, "$g_presentation_obj_escape_menu_10", 0xFFFFFF),

			(position_set_x, pos1, 130),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, "$g_presentation_obj_escape_menu_1", pos1),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_2", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_2", pos1),
			(try_end),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_3", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_3", pos1),
			(try_end),
			(val_sub, ":cur_y", escape_menu_item_height),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, "$g_presentation_obj_escape_menu_4", pos1),
			(val_sub, ":cur_y", escape_menu_item_height),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, "$g_presentation_obj_escape_menu_5", pos1),
			(val_sub, ":cur_y", escape_menu_item_height),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, "$g_presentation_obj_escape_menu_13", pos1),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_6", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_6", pos1),
			(try_end),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_7", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_7", pos1),
			(try_end),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_8", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_8", pos1),
			(try_end),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_9", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_9", pos1),
			(try_end),
			(val_sub, ":cur_y", escape_menu_item_height),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, "$g_presentation_obj_escape_menu_11", pos1),
			(try_begin),
				(ge, "$g_presentation_obj_escape_menu_12", 0),
				(val_sub, ":cur_y", escape_menu_item_height),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_escape_menu_12", pos1),
			(try_end),
			(val_sub, ":cur_y", escape_menu_item_height),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, "$g_presentation_obj_escape_menu_10", pos1),
			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(try_begin),
				(eq, ":object", "$g_presentation_obj_escape_menu_1"),
				(presentation_set_duration, 0),
				(start_presentation, "prsnt_multiplayer_team_select"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_2"),
				(presentation_set_duration, 0),
				(start_presentation, "prsnt_multiplayer_troop_select"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_3"),
				(presentation_set_duration, 0),
				(assign, "$g_presentation_state", 0),
				(start_presentation, "prsnt_multiplayer_item_select"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_4"),
				(presentation_set_duration, 0),
				(change_screen_options),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_5"),
				(presentation_set_duration, 0),
				(change_screen_controls),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_6"),
				(eq, "$g_presentation_obj_escape_menu_6_available", 1),
				(presentation_set_duration, 0),
				(start_presentation, "prsnt_multiplayer_poll_menu"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_7"),
				(presentation_set_duration, 0),
				(multiplayer_send_message_to_server, multiplayer_event_open_admin_panel),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_8"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_players_list_action_type", 3), #admin kick
				(start_presentation, "prsnt_multiplayer_show_players_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_9"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_players_list_action_type", 4), #admin ban
				(start_presentation, "prsnt_multiplayer_show_players_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_10"),
				(presentation_set_duration, 0),
				(finish_mission, 0),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_11"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_players_list_action_type", 5), #mute player
				(start_presentation, "prsnt_multiplayer_show_players_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_12"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_players_list_action_type", 6), #unmute player
				(start_presentation, "prsnt_multiplayer_show_players_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_escape_menu_13"),
				(presentation_set_duration, 0),
				(multiplayer_send_message_to_server, multiplayer_event_open_game_rules),
			(try_end),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
				(gt, ":cur_time", 200),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])



multiplayer_poll_menu = (
	"multiplayer_poll_menu", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
			(position_set_x, pos1, 250),
			(position_set_y, pos1, 80),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_poll_menu_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 285),
			(position_set_y, pos1, 125),
			(overlay_set_position, "$g_presentation_obj_poll_menu_container", pos1),
			(position_set_x, pos1, 405),
			(position_set_y, pos1, 500),
			(overlay_set_area_size, "$g_presentation_obj_poll_menu_container", pos1),
			(set_container_overlay, "$g_presentation_obj_poll_menu_container"),

			(assign, "$g_presentation_obj_poll_menu_1", -1),
			(assign, "$g_presentation_obj_poll_menu_4", -1),
			(assign, "$g_presentation_obj_poll_menu_5", -1),

			(assign, ":cur_y", 450),

			(create_text_overlay, reg0, "str_choose_a_poll_type", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(val_sub, ":cur_y", escape_menu_item_height),

			(position_set_x, pos1, 60),

			(try_begin),
				(eq, "$g_multiplayer_maps_voteable", 1),
				(create_button_overlay, "$g_presentation_obj_poll_menu_1", "str_poll_for_changing_the_map", 0),
				(overlay_set_color, "$g_presentation_obj_poll_menu_1", 0xFFFFFF),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_poll_menu_1", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(try_begin),
				(eq, "$g_multiplayer_factions_voteable", 1),
				(create_button_overlay, "$g_presentation_obj_poll_menu_4", "str_poll_for_changing_the_map_and_factions", 0),
				(overlay_set_color, "$g_presentation_obj_poll_menu_4", 0xFFFFFF),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_poll_menu_4", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(try_begin),
				(gt, "$g_multiplayer_num_bots_voteable", 0),
				(create_button_overlay, "$g_presentation_obj_poll_menu_5", "str_poll_for_changing_number_of_bots", 0),
				(overlay_set_color, "$g_presentation_obj_poll_menu_5", 0xFFFFFF),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_poll_menu_5", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(try_begin),
				(eq, "$g_multiplayer_kick_voteable", 1),
				(create_button_overlay, "$g_presentation_obj_poll_menu_2", "str_poll_for_kicking_a_player", 0),
				(overlay_set_color, "$g_presentation_obj_poll_menu_2", 0xFFFFFF),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_poll_menu_2", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(try_begin),
				(eq, "$g_multiplayer_ban_voteable", 1),
				(create_button_overlay, "$g_presentation_obj_poll_menu_3", "str_poll_for_banning_a_player", 0),
				(overlay_set_color, "$g_presentation_obj_poll_menu_3", 0xFFFFFF),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, "$g_presentation_obj_poll_menu_3", pos1),
			(try_end),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(try_begin),
				(eq, ":object", "$g_presentation_obj_poll_menu_1"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_maps_list_action_type", 1), #poll map
				(start_presentation, "prsnt_multiplayer_show_maps_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_poll_menu_2"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_players_list_action_type", 1), #poll kick
				(start_presentation, "prsnt_multiplayer_show_players_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_poll_menu_3"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_players_list_action_type", 2), #poll ban
				(start_presentation, "prsnt_multiplayer_show_players_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_poll_menu_4"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_maps_list_action_type", 2), #poll map and factions
				(start_presentation, "prsnt_multiplayer_show_maps_list"),
			(else_try),
				(eq, ":object", "$g_presentation_obj_poll_menu_5"),
				(presentation_set_duration, 0),
				(assign, "$g_multiplayer_number_of_bots_list_action_type", 1), #for team 1
				(start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
			(try_end),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
				(gt, ":cur_time", 200),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])

multiplayer_show_players_list = (
	"multiplayer_show_players_list", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
			(position_set_x, pos1, 250),
			(position_set_y, pos1, 80),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_show_players_1", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 285),
			(position_set_y, pos1, 125),
			(overlay_set_position, "$g_presentation_obj_show_players_1", pos1),
			(position_set_x, pos1, 405),
			(position_set_y, pos1, 500),
			(overlay_set_area_size, "$g_presentation_obj_show_players_1", pos1),
			(set_container_overlay, "$g_presentation_obj_show_players_1"),

			#(assign, ":cur_y", 450),
			(multiplayer_get_my_player, ":my_player_no"),

			(assign, ":cur_y", 10),
			(get_max_players, ":num_players"),
			(try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
				(player_is_active, ":player_no"),

				(assign, ":continue", 0),
				(try_begin),
					(neq, "$g_multiplayer_players_list_action_type", 5),
					(neq, "$g_multiplayer_players_list_action_type", 6),
					(assign, ":continue", 1),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 5),
					(neq, ":player_no", ":my_player_no"),
					(player_get_is_muted, ":is_muted", ":player_no"),
					(eq, ":is_muted", 0),
					(assign, ":continue", 1),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 6),
					(neq, ":player_no", ":my_player_no"),
					(player_get_is_muted, ":is_muted", ":player_no"),
					(eq, ":is_muted", 1),
					(assign, ":continue", 1),
				(try_end),
				(eq, ":continue", 1),

				(val_add, ":cur_y", escape_menu_item_height),
			(try_end),

			(create_text_overlay, reg0, "str_choose_a_player", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(val_sub, ":cur_y", escape_menu_item_height),

			(get_max_players, ":num_players"),
			(try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
				(player_is_active, ":player_no"),
				(player_set_slot, ":player_no", slot_player_button_index, -1),

				(assign, ":continue", 0),
				(try_begin),
					(neq, "$g_multiplayer_players_list_action_type", 5),
					(neq, "$g_multiplayer_players_list_action_type", 6),
					(assign, ":continue", 1),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 5),
					(neq, ":player_no", ":my_player_no"),
					(player_get_is_muted, ":is_muted", ":player_no"),
					(eq, ":is_muted", 0),
					(assign, ":continue", 1),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 6),
					(neq, ":player_no", ":my_player_no"),
					(player_get_is_muted, ":is_muted", ":player_no"),
					(eq, ":is_muted", 1),
					(assign, ":continue", 1),
				(try_end),
				(eq, ":continue", 1),
				(str_store_player_username, s0, ":player_no"),

				(create_button_overlay, ":overlay_id", s0, 0),
				(overlay_set_color, ":overlay_id", 0xFFFFFF),
				(position_set_x, pos1, 130),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, ":overlay_id", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
				(player_set_slot, ":player_no", slot_player_button_index, ":overlay_id"),
			(try_end),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(get_max_players, ":num_players"),
			(try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
				(player_is_active, ":player_no"),
				(player_slot_eq, ":player_no", slot_player_button_index, ":object"),
				(try_begin),
					(is_between, "$g_multiplayer_players_list_action_type", 1, 3), #poll kick or poll ban
					(try_begin),
						(multiplayer_get_my_player, ":my_player_no"),
						(ge, ":my_player_no", 0),
						(multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, "$g_multiplayer_players_list_action_type", ":player_no"),
						(store_mission_timer_a, ":mission_timer"),
						(val_add, ":mission_timer", multiplayer_poll_disable_period),
						(player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
					(try_end),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 3), #admin kick
					(multiplayer_send_int_to_server, multiplayer_event_admin_kick_player, ":player_no"),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 4), #admin ban
					(multiplayer_send_int_to_server, multiplayer_event_admin_ban_player, ":player_no"),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 5), #mute player
					(player_set_is_muted, ":player_no", 1),
				(else_try),
					(eq, "$g_multiplayer_players_list_action_type", 6), #unmute player
					(player_set_is_muted, ":player_no", 0),
				(try_end),
				(assign, ":num_players", 0), #break
				(presentation_set_duration, 0),
			(try_end),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
				(gt, ":cur_time", 200),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])


multiplayer_show_maps_list = (
	"multiplayer_show_maps_list", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
			(position_set_x, pos1, 250),
			(position_set_y, pos1, 80),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_show_maps_list_menu_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 285),
			(position_set_y, pos1, 125),
			(overlay_set_position, "$g_presentation_obj_show_maps_list_menu_container", pos1),
			(position_set_x, pos1, 405),
			(position_set_y, pos1, 500),
			(overlay_set_area_size, "$g_presentation_obj_show_maps_list_menu_container", pos1),
			(set_container_overlay, "$g_presentation_obj_show_maps_list_menu_container"),

			(call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
			(assign, ":num_maps", reg0),
			(store_mul, ":cur_y", ":num_maps", escape_menu_item_height),
			(val_add, ":cur_y", 10),

			(create_text_overlay, reg0, "str_choose_a_map", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(val_sub, ":cur_y", escape_menu_item_height),

			(assign, ":overlay_id", -1),
			(try_for_range, ":i_map", 0, ":num_maps"),
				(store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
				(troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
				(store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
				(val_add, ":string_index", multiplayer_scene_names_begin),
				(str_store_string, s0, ":string_index"),

				(create_button_overlay, ":overlay_id", s0, 0),
				(overlay_set_color, ":overlay_id", 0xFFFFFF),
				(position_set_x, pos1, 100),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, ":overlay_id", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(store_add, "$g_show_maps_list_button_list_end_index", ":overlay_id", 1),
			(store_sub, "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index", ":num_maps"),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(try_for_range, ":i_button", "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index"),
				(eq, ":object", ":i_button"),
				(call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
				(store_sub, ":map_slot", ":object", "$g_show_maps_list_button_list_first_index"),
				(val_add, ":map_slot", multi_data_maps_for_game_type_begin),
				(troop_get_slot, ":scene_id", "trp_multiplayer_data", ":map_slot"),
				(presentation_set_duration, 0),
				(try_begin),
					(eq, "$g_multiplayer_maps_list_action_type", 1), #vote for map
					(try_begin),
						(multiplayer_get_my_player, ":my_player_no"),
						(ge, ":my_player_no", 0),
						(multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, 0, ":scene_id"),
						(store_mission_timer_a, ":mission_timer"),
						(val_add, ":mission_timer", multiplayer_poll_disable_period),
						(player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
					(try_end),
				(else_try), #vote for map and factions
					(assign, "$g_multiplayer_factions_list_action_type", 1), #for team 1
					(assign, "$g_multiplayer_poll_for_map_and_faction_data_map", ":scene_id"),
					(start_presentation, "prsnt_multiplayer_show_factions_list"),
				(try_end),
				(assign, "$g_show_maps_list_button_list_end_index", 0), #break;
			(try_end),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
				(gt, ":cur_time", 200),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])


multiplayer_show_factions_list =	(
	"multiplayer_show_factions_list", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
			(position_set_x, pos1, 250),
			(position_set_y, pos1, 80),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_show_factions_list_menu_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 285),
			(position_set_y, pos1, 125),
			(overlay_set_position, "$g_presentation_obj_show_factions_list_menu_container", pos1),
			(position_set_x, pos1, 405),
			(position_set_y, pos1, 500),
			(overlay_set_area_size, "$g_presentation_obj_show_factions_list_menu_container", pos1),
			(set_container_overlay, "$g_presentation_obj_show_factions_list_menu_container"),

			(store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
			(try_begin),
				(eq, "$g_multiplayer_factions_list_action_type", 2),
				(val_sub, ":num_factions", 1),
			(try_end),
			(store_mul, ":cur_y", ":num_factions", escape_menu_item_height),
			(val_add, ":cur_y", 10),

			(assign, reg0, "$g_multiplayer_factions_list_action_type"),
			(create_text_overlay, reg0, "str_choose_a_faction_for_team_reg0", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(val_sub, ":cur_y", escape_menu_item_height),

			(assign, ":overlay_id", -1),
			(try_for_range, ":i_faction", npc_kingdoms_begin, npc_kingdoms_end),
				(this_or_next|eq, "$g_multiplayer_factions_list_action_type", 1),
				(neq, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":i_faction"),
				(str_store_faction_name, s0, ":i_faction"),
				(create_button_overlay, ":overlay_id", s0, 0),
				(overlay_set_color, ":overlay_id", 0xFFFFFF),
				(position_set_x, pos1, 100),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, ":overlay_id", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(store_add, "$g_show_factions_list_button_list_end_index", ":overlay_id", 1),
			(store_sub, "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index", ":num_factions"),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(try_for_range, ":i_button", "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index"),
				(eq, ":object", ":i_button"),
				(store_sub, ":faction_no", ":object", "$g_show_factions_list_button_list_first_index"),
				(val_add, ":faction_no", npc_kingdoms_begin),
				(presentation_set_duration, 0),
				(try_begin),
					(eq, "$g_multiplayer_factions_list_action_type", 2), #vote for second team
					(try_begin),
						(ge, ":faction_no", "$g_multiplayer_poll_for_map_and_faction_data_faction_1"),
						(val_add, ":faction_no", 1),
					(try_end),
					(try_begin),
						(multiplayer_get_my_player, ":my_player_no"),
						(ge, ":my_player_no", 0),
						(multiplayer_send_4_int_to_server, multiplayer_event_start_new_poll, 3, "$g_multiplayer_poll_for_map_and_faction_data_map", "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
						(store_mission_timer_a, ":mission_timer"),
						(val_add, ":mission_timer", multiplayer_poll_disable_period),
						(player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
					(try_end),
				(else_try), #vote for first team
					(assign, "$g_multiplayer_factions_list_action_type", 2), #for team 2
					(assign, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
					(start_presentation, "prsnt_multiplayer_show_factions_list"),
				(try_end),
				(assign, "$g_show_factions_list_button_list_end_index", 0), #break;
			(try_end),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
				(gt, ":cur_time", 200),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])

multiplayer_show_number_of_bots_list = (
	"multiplayer_show_number_of_bots_list", prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
			(position_set_x, pos1, 250),
			(position_set_y, pos1, 80),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 1000),
			(position_set_y, pos1, 1000),
			(overlay_set_size, reg0, pos1),

			(str_clear, s0),
			(create_text_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container", s0, tf_scrollable_style_2),
			(position_set_x, pos1, 285),
			(position_set_y, pos1, 125),
			(overlay_set_position, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
			(position_set_x, pos1, 405),
			(position_set_y, pos1, 500),
			(overlay_set_area_size, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
			(set_container_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container"),

			(assign, ":num_options", 0),
			(store_add, ":end_cond", "$g_multiplayer_num_bots_voteable", 1),
			(try_for_range, ":i_number", 0, ":end_cond"),
				(assign, ":i_number_mod_5", ":i_number"),
				(val_mod, ":i_number_mod_5", 5),
				(this_or_next|lt, ":i_number", 10),
				(eq, ":i_number_mod_5", 0),
				(val_add, ":num_options", 1),
			(try_end),

			(store_mul, ":cur_y", ":num_options", escape_menu_item_height),
			(val_add, ":cur_y", 10),

			(assign, reg0, "$g_multiplayer_number_of_bots_list_action_type"),
			(create_text_overlay, reg0, "str_choose_number_of_bots_for_team_reg0", 0),
			(overlay_set_color, reg0, 0xFFFFFF),
			(position_set_x, pos1, 0),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(val_sub, ":cur_y", escape_menu_item_height),

			(assign, ":overlay_id", -1),
			(try_for_range, ":i_number", 0, ":end_cond"),
				(assign, ":i_number_mod_5", ":i_number"),
				(val_mod, ":i_number_mod_5", 5),
				(this_or_next|lt, ":i_number", 10),
				(eq, ":i_number_mod_5", 0),
				(assign, reg0, ":i_number"),
				(str_store_string, s0, "str_reg0"),
				(create_button_overlay, ":overlay_id", s0, 0),
				(overlay_set_color, ":overlay_id", 0xFFFFFF),
				(position_set_x, pos1, 100),
				(position_set_y, pos1, ":cur_y"),
				(overlay_set_position, ":overlay_id", pos1),
				(val_sub, ":cur_y", escape_menu_item_height),
			(try_end),
			(store_add, "$g_show_number_of_bots_list_button_list_end_index", ":overlay_id", 1),
			(store_sub, "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index", ":num_options"),

			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_event_state_change,
		 [(store_trigger_param_1, ":object"),
			(try_for_range, ":i_button", "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index"),
				(eq, ":object", ":i_button"),
				(store_sub, ":value_index", ":object", "$g_show_number_of_bots_list_button_list_first_index"),
				(try_begin),
					(lt, ":value_index", 10),
					(assign, ":used_value", ":value_index"),
				(else_try),
					(store_sub, ":used_value", ":value_index", 8),
					(val_mul, ":used_value", 5),
				(try_end),
				(presentation_set_duration, 0),
				(try_begin),
					(eq, "$g_multiplayer_number_of_bots_list_action_type", 2), #vote for second team
					(try_begin),
						(multiplayer_get_my_player, ":my_player_no"),
						(ge, ":my_player_no", 0),
						(multiplayer_send_3_int_to_server, multiplayer_event_start_new_poll, 4, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
						(store_mission_timer_a, ":mission_timer"),
						(val_add, ":mission_timer", multiplayer_poll_disable_period),
						(player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
					(try_end),
				(else_try), #vote for first team
					(assign, "$g_multiplayer_number_of_bots_list_action_type", 2), #for team 2
					(assign, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
					(start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
				(try_end),
				(assign, "$g_show_number_of_bots_list_button_list_end_index", 0), #break;
			(try_end),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
				(gt, ":cur_time", 200),
				(presentation_set_duration, 0),
			(try_end),
			]),
		])

multiplayer_poll = (
	"multiplayer_poll", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load,
		 [(set_fixed_point_multiplier, 1000),

			(create_mesh_overlay, reg0, "mesh_white_plane"),
			(overlay_set_color, reg0, 0x000000),
			(overlay_set_alpha, reg0, 0x44),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 50),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 37500),
			(position_set_y, pos1, 4500),
			(overlay_set_size, reg0, pos1),

			(try_begin),
				(eq, "$g_multiplayer_poll_to_show", 0),
				(store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
				(val_add, ":string_index", multiplayer_scene_names_begin),
				(str_store_string, s0, ":string_index"),
				(create_text_overlay, reg0, "str_poll_change_map", tf_center_justify),
			(else_try),
				(eq, "$g_multiplayer_poll_to_show", 1),
				(str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
				(create_text_overlay, reg0, "str_poll_kick_player", tf_center_justify),
			(else_try),
				(eq, "$g_multiplayer_poll_to_show", 2),
				(str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
				(create_text_overlay, reg0, "str_poll_ban_player", tf_center_justify),
			(else_try),
				(eq, "$g_multiplayer_poll_to_show", 3),
				(store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
				(val_add, ":string_index", multiplayer_scene_names_begin),
				(str_store_string, s0, ":string_index"),
				(str_store_faction_name, s1, "$g_multiplayer_poll_value_2_to_show"),
				(str_store_faction_name, s2, "$g_multiplayer_poll_value_3_to_show"),
				(create_text_overlay, reg0, "str_poll_change_map_with_faction", tf_center_justify|tf_scrollable_style_2),
			(else_try),
				(assign, reg0, "$g_multiplayer_poll_value_to_show"),
				(assign, reg1, "$g_multiplayer_poll_value_2_to_show"),
				(str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
				(str_store_faction_name, s1, "$g_multiplayer_team_2_faction"),
				(create_text_overlay, reg0, "str_poll_change_number_of_bots", tf_center_justify|tf_scrollable_style_2),
			(try_end),
			(overlay_set_color, reg0, 0xFFFFFF),
			(try_begin),
				(neq, "$g_multiplayer_poll_to_show", 3),
				(neq, "$g_multiplayer_poll_to_show", 4),
				(position_set_x, pos1, 400),
				(position_set_y, pos1, 100),
				(overlay_set_position, reg0, pos1),
			(else_try),
				(position_set_x, pos1, 50),
				(position_set_y, pos1, 70),
				(overlay_set_position, reg0, pos1),
				(position_set_x, pos1, 750),
				(position_set_y, pos1, 60),
				(overlay_set_area_size, reg0, pos1),
			(try_end),

			(store_mission_timer_a, ":mission_timer"),
			(store_sub, "$g_multiplayer_poll_last_written_seconds_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
			(assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),

			(create_text_overlay, "$g_presentation_obj_poll_1", "str_poll_time_left", tf_right_align|tf_single_line),
			(overlay_set_color, "$g_presentation_obj_poll_1", 0xFFFFFF),
			(position_set_x, pos1, 790),
			(position_set_y, pos1, 60),
			(overlay_set_position, "$g_presentation_obj_poll_1", pos1),

			(omit_key_once, key_1),
			(omit_key_once, key_2),
			(presentation_set_duration, 999999),
			]),
		(ti_on_presentation_run,
		 [(store_trigger_param_1, ":cur_time"),
			(try_begin),
				(this_or_next|key_clicked, key_escape),
		(this_or_next|key_clicked, key_xbox_start),
				(key_clicked, key_2),
				(gt, ":cur_time", 500),
				(multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 0),
				(clear_omitted_keys),
				(presentation_set_duration, 0),
			(else_try),
				(key_clicked, key_1),
				(gt, ":cur_time", 500),
				(multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 1),
				(clear_omitted_keys),
				(presentation_set_duration, 0),
			(try_end),
			(store_mission_timer_a, ":mission_timer"),
			(store_sub, ":time_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
			(try_begin),
				(neq, ":time_left", "$g_multiplayer_poll_last_written_seconds_left"),
				(try_begin),
					(lt, ":time_left", 0),
					(clear_omitted_keys),
					(presentation_set_duration, 0),
				(else_try),
					(assign, "$g_multiplayer_poll_last_written_seconds_left", ":time_left"),
					(assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),
					(overlay_set_text, "$g_presentation_obj_poll_1", "str_poll_time_left"),
				(try_end),
			(try_end),
			]),
		])
multiplayer_duel_start_counter =	(
	"multiplayer_duel_start_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
		(ti_on_presentation_load, [      
			(set_fixed_point_multiplier, 1000),

			(assign, "$g_multiplayer_duel_start_counter_overlay", -1),
			(assign, "$g_multiplayer_last_duel_start_counter_value", -1),

			(str_clear, s0),
			(create_text_overlay, "$g_multiplayer_duel_start_counter_overlay", s0, tf_center_justify|tf_with_outline),
			(overlay_set_color, "$g_multiplayer_duel_start_counter_overlay", 0xFFFFFF),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_multiplayer_duel_start_counter_overlay", pos1),
			(position_set_x, pos1, 2000),
			(position_set_y, pos1, 2000),
			(overlay_set_size, "$g_multiplayer_duel_start_counter_overlay", pos1),

			(presentation_set_duration, 999999),
			]),
	
		(ti_on_presentation_run, [
			(ge, "$g_multiplayer_duel_start_counter_overlay", 0),
			(store_mission_timer_a, ":current_time"),
			(store_sub, ":seconds_past_in_duel_start", ":current_time", "$g_multiplayer_duel_start_time"),
			(store_sub, ":seconds_left_in_duel_start", 3, ":seconds_past_in_duel_start"),
			(try_begin),
				(le, ":seconds_left_in_duel_start", 0),
				(presentation_set_duration, 0),
			(else_try),
				(neq, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
				(assign, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
				(assign, reg0, ":seconds_left_in_duel_start"),
				(str_store_string, s0, "str_duel_starts_in_reg0_seconds"),
				(overlay_set_text, "$g_multiplayer_duel_start_counter_overlay", s0),
			(try_end),
			]),
		])